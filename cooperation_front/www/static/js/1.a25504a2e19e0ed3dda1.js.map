{"version":3,"sources":["webpack:///./src/assets/scene.gltf","webpack:///./node_modules/core-js/library/fn/map.js","webpack:///./node_modules/core-js/library/modules/_array-from-iterable.js","webpack:///./node_modules/core-js/library/modules/_array-species-constructor.js","webpack:///./src/assets/house.jpg","webpack:///./src/assets/pusheen.fbx","webpack:///./node_modules/core-js/library/modules/_set-collection-of.js","webpack:///./node_modules/core-js/library/modules/_collection-strong.js","webpack:///./node_modules/core-js/library/modules/_array-methods.js","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/core-js/library/modules/_set-collection-from.js","webpack:///./node_modules/core-js/library/modules/_validate-collection.js","webpack:///./src/assets/mouse.png","webpack:///./src/assets/house.jpeg","webpack:///./node_modules/babel-runtime/core-js/object/create.js","webpack:///./src/assets/dog.jpg","webpack:///./node_modules/core-js/library/modules/es7.map.to-json.js","webpack:///./node_modules/core-js/library/modules/es7.map.of.js","webpack:///./node_modules/core-js/library/modules/es7.map.from.js","webpack:///./src/assets/cat.jpg","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/babel-runtime/core-js/map.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/library/modules/_collection-to-json.js","webpack:///./node_modules/core-js/library/fn/object/create.js","webpack:///./node_modules/core-js/library/modules/_array-species-create.js","webpack:///./node_modules/core-js/library/modules/es6.map.js","webpack:///./node_modules/core-js/library/modules/_collection.js","webpack:///./node_modules/core-js/library/modules/es6.object.create.js","webpack:///./src/assets/js/FBXLoader.js","webpack:///../node_modules/three/examples/js/loaders/GLTFLoader.js","webpack:///src/view/MyInfo/MyPet.vue","webpack:///./src/assets/js/inflate.min.js","webpack:///./src/view/MyInfo/MyPet.vue?b127","webpack:///./src/view/MyInfo/MyPet.vue","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./src/assets/crab.fbx"],"names":["module","exports","__webpack_require__","p","Map","forOf","iter","ITERATOR","result","push","isObject","isArray","SPECIES","original","C","constructor","Array","prototype","undefined","$export","COLLECTION","S","of","length","arguments","A","this","dP","f","create","redefineAll","ctx","anInstance","$iterDefine","step","setSpecies","DESCRIPTORS","fastKey","validate","SIZE","getEntry","that","key","entry","index","_i","_f","n","k","getConstructor","wrapper","NAME","IS_MAP","ADDER","iterable","_t","_l","clear","data","r","i","delete","next","prev","forEach","callbackfn","v","has","get","def","value","setStrong","iterated","kind","_k","IObject","toObject","toLength","asc","TYPE","$create","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","val","res","O","self","$keys","it","aFunction","from","source","mapping","cb","mapFn","nextItem","TypeError","default","__esModule","P","R","toJSON","Object","keys","classof","$Object","D","speciesConstructor","strong","set","global","meta","fails","hide","setToStringTag","each","methods","common","IS_WEAK","Base","proto","entries","target","_c","split","KEY","IS_ADDER","a","b","size","NEED","G","W","F","js_FBXLoader","fbxTree","connections","sceneGraph","FBXLoader","manager","THREE","Loader","call","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","buffer","littleEndian","dv","DataView","offset","FBXTree","getFbxVersion","text","match","parseInt","Error","convertFBXTimeToSeconds","time","assign_default","create_default","load","url","onLoad","onProgress","onError","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","parse","error","setTimeout","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","FBXText","cursor","read","slice","num","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","map_default","Connections","rawConnection","fromID","toID","relationship","parents","children","parentRelationship","ID","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","console","warn","array","Uint8Array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","x","y","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","typeof_default","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","sRGBEncoding","displacementMap","emissiveMap","normalMap","envMap","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","add","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","copy","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","Math","PI","InnerAngle","degToRad","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","VertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","position","lookAt","Vector3","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","g","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","uuid","matUuid","sharedMat","mat","clonedMat","clone","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","applyMatrix4","setAttribute","colors","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","j","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","NURBSCurve","order","Order","isNaN","startKnot","endKnot","degree","knots","KnotVector","controlPoints","pointsValues","Points","l","Vector4","Form","vertices","getPoints","positions","toArray","BufferAttribute","animationClips","rawClips","parseClips","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","z","modelID","modelName","rawModel","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","T","keys_default","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","type2","flag","reader","skip","version","getUint32","log","endOfContent","parseNode","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","Zlib","reader2","Inflate","decompress","low","high","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lLSM","lParentGSM","lParentGRSM","lGlobalRS","lParentTM","copyPosition","getInverse","lParentLSM","lParentGSM_noLocal","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2","GLTFLoader","dracoLoader","ddsLoader","assign","scope","itemStart","_onError","e","itemEnd","setWithCredentials","gltf","setDRACOLoader","setDDSLoader","extensions","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","body","headerView","BINARY_EXTENSION_HEADER_LENGTH","header","magic","chunkView","chunkIndex","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","JSON","contentArray","BIN","byteOffset","json","asset","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","GLTFParser","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","range","spot","innerConeAngle","outerConeAngle","decay","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","baseColorFactor","baseColorTexture","assignTexture","all","preload","specularGlossinessParams","ShaderMaterial","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","roughness","metalness","roughnessMap","metalnessMap","setHex","glossiness","glossinessMap","vertexShader","defines","STANDARD","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","params","fog","isGLTFSpecularGlossinessMaterial","lightMap","lightMapIntensity","aoMapIntensity","normalScale","displacementBias","envMapIntensity","refractionRatio","derivatives","cloneMaterial","il","isColor","refreshUniforms","renderer","scene","camera","uvScaleMap","diffuse","multiplyScalar","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","flipEnvMap","isCubeTexture","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","texCoord","needsUpdate","copySampleValue_","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","33648","MirroredRepeatWrapping","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","RGBAFormat","image/jpeg","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","object","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","createAttributesKey","attributesKey","options","cache","objects","remove","removeAll","primitiveCache","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","setIndex","box","Box3","min","targets","vector","setX","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphNormals","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","markDefs","getDependencies","dependencies","scenes","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","bufferIndex","bufferDef","uri","reject","bufferViewDef","bufferViews","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","webkitURL","textureDef","textureExtensions","sourceURI","isObjectURL","blob","mimeType","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","pointsMaterial","PointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","vertexTangents","flatShading","uv2","onBeforeRender","materialType","materialExtensions","sgExtension","kmuExtension","MeshStandardMaterial","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","Vector2","occlusionTexture","strength","emissiveFactor","emissiveTexture","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","FrontSide","results","geometries","skinWeight","TriangleStripDrawMode","LineSegments","LineLoop","group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","input","output","inputAccessors","outputAccessors","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","outputArray","scaled","jl","track","createInterpolant","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","boneInverses","jointNode","sceneIndex","sceneDef","Scene","nodeIds","inflate","aa","c","d","execScript","shift","h","m","s","Number","POSITIVE_INFINITY","w","bufferSize","bufferType","resize","B","subarray","ba","ca","U","V","u","M","q","E","fa","H","I","J","K","L","da","ea","N","ga","Q","verify","ha","method","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","MyPet","components","Footer","tu","cat_default","dog_default","mouse_default","house_default","cat","dog","house","assets_house_default","petscore","user","jiazai","container","document","getElementById","clientWidth","clientHeight","pusheen","ImageUtils","render","scene_default","overdraw","BoxGeometry","MeshNormalMaterial","WebGLRenderer","antialias","alpha","setSize","appendChild","domElement","animate","requestAnimationFrame","before","_this","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","model_user","sent","code","alert","$router","stop","upgrade","_this2","_callee2","_context2","helper","_id","$message","message","mounted","_this3","MyInfo_MyPet","_vm","_h","$createElement","_self","staticStyle","margin-top","_v","_s","pet","score","align-items","text-align","on","click","staticClass","font-size","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","core","exec","fn","exp"],"mappings":"yCAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qCCAxCD,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRF,EAAAC,QAAiBC,EAAQ,QAAkBE,4BCP3C,IAAAC,EAAYH,EAAQ,QAEpBF,EAAAC,QAAA,SAAAK,EAAAC,GACA,IAAAC,KAEA,OADAH,EAAAC,GAAA,EAAAE,EAAAC,KAAAD,EAAAD,GACAC,2BCLA,IAAAE,EAAeR,EAAQ,QACvBS,EAAcT,EAAQ,QACtBU,EAAcV,EAAQ,OAARA,CAAgB,WAE9BF,EAAAC,QAAA,SAAAY,GACA,IAAAC,EASG,OARHH,EAAAE,KAGA,mBAFAC,EAAAD,EAAAE,cAEAD,IAAAE,QAAAL,EAAAG,EAAAG,aAAAH,OAAAI,GACAR,EAAAI,IAEA,QADAA,IAAAF,MACAE,OAAAI,SAEGA,IAAAJ,EAAAE,MAAAF,2BCdHd,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCExC,IAAAgB,EAAcjB,EAAQ,QAEtBF,EAAAC,QAAA,SAAAmB,GACAD,IAAAE,EAAAD,GAAkCE,GAAA,WAGlC,IAFA,IAAAC,EAAAC,UAAAD,OACAE,EAAA,IAAAT,MAAAO,GACAA,KAAAE,EAAAF,GAAAC,UAAAD,GACA,WAAAG,KAAAD,4CCRA,IAAAE,EAASzB,EAAQ,QAAc0B,EAC/BC,EAAa3B,EAAQ,QACrB4B,EAAkB5B,EAAQ,QAC1B6B,EAAU7B,EAAQ,QAClB8B,EAAiB9B,EAAQ,QACzBG,EAAYH,EAAQ,QACpB+B,EAAkB/B,EAAQ,QAC1BgC,EAAWhC,EAAQ,QACnBiC,EAAiBjC,EAAQ,QACzBkC,EAAkBlC,EAAQ,QAC1BmC,EAAcnC,EAAQ,QAASmC,QAC/BC,EAAepC,EAAQ,QACvBqC,EAAAH,EAAA,YAEAI,EAAA,SAAAC,EAAAC,GAEA,IACAC,EADAC,EAAAP,EAAAK,GAEA,SAAAE,EAAA,OAAAH,EAAAI,GAAAD,GAEA,IAAAD,EAAAF,EAAAK,GAAuBH,EAAOA,IAAAI,EAC9B,GAAAJ,EAAAK,GAAAN,EAAA,OAAAC,GAIA3C,EAAAC,SACAgD,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAvC,EAAAoC,EAAA,SAAAT,EAAAa,GACAtB,EAAAS,EAAA3B,EAAAqC,EAAA,MACAV,EAAAc,GAAAJ,EACAV,EAAAI,GAAAhB,EAAA,MACAY,EAAAK,QAAA5B,EACAuB,EAAAe,QAAAtC,EACAuB,EAAAF,GAAA,OACArB,GAAAoC,GAAAjD,EAAAiD,EAAAF,EAAAX,EAAAY,GAAAZ,KAsDA,OApDAX,EAAAhB,EAAAG,WAGAwC,MAAA,WACA,QAAAhB,EAAAH,EAAAZ,KAAAyB,GAAAO,EAAAjB,EAAAI,GAAAF,EAAAF,EAAAK,GAA8EH,EAAOA,IAAAI,EACrFJ,EAAAgB,GAAA,EACAhB,EAAAxC,IAAAwC,EAAAxC,EAAAwC,EAAAxC,EAAA4C,OAAA7B,UACAwC,EAAAf,EAAAiB,GAEAnB,EAAAK,GAAAL,EAAAe,QAAAtC,EACAuB,EAAAF,GAAA,GAIAsB,OAAA,SAAAnB,GACA,IAAAD,EAAAH,EAAAZ,KAAAyB,GACAR,EAAAH,EAAAC,EAAAC,GACA,GAAAC,EAAA,CACA,IAAAmB,EAAAnB,EAAAI,EACAgB,EAAApB,EAAAxC,SACAsC,EAAAI,GAAAF,EAAAiB,GACAjB,EAAAgB,GAAA,EACAI,MAAAhB,EAAAe,GACAA,MAAA3D,EAAA4D,GACAtB,EAAAK,IAAAH,IAAAF,EAAAK,GAAAgB,GACArB,EAAAe,IAAAb,IAAAF,EAAAe,GAAAO,GACAtB,EAAAF,KACS,QAAAI,GAITqB,QAAA,SAAAC,GACA3B,EAAAZ,KAAAyB,GAGA,IAFA,IACAR,EADAf,EAAAG,EAAAkC,EAAAzC,UAAAD,OAAA,EAAAC,UAAA,QAAAN,EAAA,GAEAyB,MAAAI,EAAArB,KAAAoB,IAGA,IAFAlB,EAAAe,EAAAuB,EAAAvB,EAAAK,EAAAtB,MAEAiB,KAAAgB,GAAAhB,IAAAxC,GAKAgE,IAAA,SAAAzB,GACA,QAAAF,EAAAF,EAAAZ,KAAAyB,GAAAT,MAGAN,GAAAT,EAAAb,EAAAG,UAAA,QACAmD,IAAA,WACA,OAAA9B,EAAAZ,KAAAyB,GAAAZ,MAGAzB,GAEAuD,IAAA,SAAA5B,EAAAC,EAAA4B,GACA,IACAP,EAAAnB,EADAD,EAAAH,EAAAC,EAAAC,GAoBK,OAjBLC,EACAA,EAAAuB,EAAAI,GAGA7B,EAAAe,GAAAb,GACAiB,EAAAhB,EAAAP,EAAAK,GAAA,GACAM,EAAAN,EACAwB,EAAAI,EACAnE,EAAA4D,EAAAtB,EAAAe,GACAT,OAAA7B,EACAyC,GAAA,GAEAlB,EAAAK,KAAAL,EAAAK,GAAAH,GACAoB,MAAAhB,EAAAJ,GACAF,EAAAF,KAEA,MAAAK,IAAAH,EAAAI,GAAAD,GAAAD,IACKF,GAELD,WACA+B,UAAA,SAAAzD,EAAAqC,EAAAC,GAGAnB,EAAAnB,EAAAqC,EAAA,SAAAqB,EAAAC,GACA/C,KAAA6B,GAAAjB,EAAAkC,EAAArB,GACAzB,KAAAgD,GAAAD,EACA/C,KAAA8B,QAAAtC,GACK,WAKL,IAJA,IACAuD,EADA/C,KACAgD,GACA/B,EAFAjB,KAEA8B,GAEAb,KAAAgB,GAAAhB,IAAAxC,EAEA,OANAuB,KAMA6B,KANA7B,KAMA8B,GAAAb,MAAAI,EANArB,KAMA6B,GAAAT,IAMAZ,EAAA,UAAAuC,EAAA9B,EAAAK,EACA,UAAAyB,EAAA9B,EAAAuB,GACAvB,EAAAK,EAAAL,EAAAuB,KAdAxC,KAQA6B,QAAArC,EACAgB,EAAA,KAMKkB,EAAA,oBAAAA,GAAA,GAGLjB,EAAAgB,2BCtIA,IAAApB,EAAU7B,EAAQ,QAClByE,EAAczE,EAAQ,QACtB0E,EAAe1E,EAAQ,QACvB2E,EAAe3E,EAAQ,QACvB4E,EAAU5E,EAAQ,QAClBF,EAAAC,QAAA,SAAA8E,EAAAC,GACA,IAAA5B,EAAA,GAAA2B,EACAE,EAAA,GAAAF,EACAG,EAAA,GAAAH,EACAI,EAAA,GAAAJ,EACAK,EAAA,GAAAL,EACAM,EAAA,GAAAN,GAAAK,EACAvD,EAAAmD,GAAAF,EACA,gBAAAQ,EAAArB,EAAAxB,GAQA,IAPA,IAMA8C,EAAAC,EANAC,EAAAb,EAAAU,GACAI,EAAAf,EAAAc,GACA7D,EAAAG,EAAAkC,EAAAxB,EAAA,GACAlB,EAAAsD,EAAAa,EAAAnE,QACAqB,EAAA,EACApC,EAAA4C,EAAAvB,EAAAyD,EAAA/D,GAAA0D,EAAApD,EAAAyD,EAAA,QAAApE,EAEUK,EAAAqB,EAAeA,IAAA,IAAAyC,GAAAzC,KAAA8C,KAEzBF,EAAA5D,EADA2D,EAAAG,EAAA9C,GACAA,EAAA6C,GACAV,GACA,GAAA3B,EAAA5C,EAAAoC,GAAA4C,OACA,GAAAA,EAAA,OAAAT,GACA,gBACA,cAAAQ,EACA,cAAA3C,EACA,OAAApC,EAAAC,KAAA8E,QACS,GAAAJ,EAAA,SAGT,OAAAC,GAAA,EAAAF,GAAAC,IAAA3E,0BCxCA,IAAAoE,EAAe1E,EAAQ,QACvByF,EAAYzF,EAAQ,QAEpBA,EAAQ,OAARA,CAAuB,kBACvB,gBAAA0F,GACA,OAAAD,EAAAf,EAAAgB,iECJA,IAAAzE,EAAcjB,EAAQ,QACtB2F,EAAgB3F,EAAQ,QACxB6B,EAAU7B,EAAQ,QAClBG,EAAYH,EAAQ,QAEpBF,EAAAC,QAAA,SAAAmB,GACAD,IAAAE,EAAAD,GAAkC0E,KAAA,SAAAC,GAClC,IACAC,EAAAvE,EAAAsB,EAAAkD,EADAC,EAAA1E,UAAA,GAKA,OAHAqE,EAAAnE,OACAsE,OAAA9E,IAAAgF,IACAL,EAAAK,QACAhF,GAAA6E,EAAA,IAAArE,MACAD,KACAuE,GACAjD,EAAA,EACAkD,EAAAlE,EAAAmE,EAAA1E,UAAA,MACAnB,EAAA0F,GAAA,WAAAI,GACA1E,EAAAhB,KAAAwF,EAAAE,EAAApD,SAGA1C,EAAA0F,GAAA,EAAAtE,EAAAhB,KAAAgB,GAEA,IAAAC,KAAAD,8BCzBA,IAAAf,EAAeR,EAAQ,QACvBF,EAAAC,QAAA,SAAA2F,EAAAb,GACA,IAAArE,EAAAkF,MAAArC,KAAAwB,EAAA,MAAAqB,UAAA,0BAAArB,EAAA,cACA,OAAAa,yBCHA5F,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,SAAkBoG,QAAYnG,EAAQ,QAAkCoG,YAAA,yBCAxEtG,EAAAC,QAAiBC,EAAAC,EAAuB,mDCCxC,IAAAgB,EAAcjB,EAAQ,QAEtBiB,IAAAoF,EAAApF,EAAAqF,EAAA,OAAuCC,OAASvG,EAAQ,OAARA,CAA+B,+BCF/EA,EAAQ,OAARA,CAA8B,6BCA9BA,EAAQ,OAARA,CAAgC,6BCDhCF,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,SAAkBoG,QAAYnG,EAAQ,QAAgCoG,YAAA,yBCAtEtG,EAAAC,SAAkBoG,QAAYnG,EAAQ,QAAwBoG,YAAA,yBCA9DpG,EAAQ,QACRF,EAAAC,QAAiBC,EAAQ,QAAqBwG,OAAAC,2BCA9C,IAAAC,EAAc1G,EAAQ,QACtB4F,EAAW5F,EAAQ,QACnBF,EAAAC,QAAA,SAAAkD,GACA,kBACA,GAAAyD,EAAAlF,OAAAyB,EAAA,MAAAiD,UAAAjD,EAAA,yBACA,OAAA2C,EAAApE,8BCNAxB,EAAQ,QACR,IAAA2G,EAAc3G,EAAQ,QAAqBwG,OAC3C1G,EAAAC,QAAA,SAAAsG,EAAAO,GACA,OAAAD,EAAAhF,OAAA0E,EAAAO,0BCFA,IAAAC,EAAyB7G,EAAQ,QAEjCF,EAAAC,QAAA,SAAAY,EAAAU,GACA,WAAAwF,EAAAlG,GAAA,CAAAU,uCCHA,IAAAyF,EAAa9G,EAAQ,QACrBoC,EAAepC,EAAQ,QAIvBF,EAAAC,QAAiBC,EAAQ,OAARA,CAHjB,MAGwC,SAAAkE,GACxC,kBAAyB,OAAAA,EAAA1C,KAAAF,UAAAD,OAAA,EAAAC,UAAA,QAAAN,MAGzBkD,IAAA,SAAA1B,GACA,IAAAC,EAAAqE,EAAAxE,SAAAF,EAAAZ,KARA,OAQAgB,GACA,OAAAC,KAAAuB,GAGA+C,IAAA,SAAAvE,EAAA4B,GACA,OAAA0C,EAAA3C,IAAA/B,EAAAZ,KAbA,OAaA,IAAAgB,EAAA,EAAAA,EAAA4B,KAEC0C,GAAA,sCCjBD,IAAAE,EAAahH,EAAQ,QACrBiB,EAAcjB,EAAQ,QACtBiH,EAAWjH,EAAQ,QACnBkH,EAAYlH,EAAQ,QACpBmH,EAAWnH,EAAQ,QACnB4B,EAAkB5B,EAAQ,QAC1BG,EAAYH,EAAQ,QACpB8B,EAAiB9B,EAAQ,QACzBQ,EAAeR,EAAQ,QACvBoH,EAAqBpH,EAAQ,QAC7ByB,EAASzB,EAAQ,QAAc0B,EAC/B2F,EAAWrH,EAAQ,OAARA,CAA0B,GACrCkC,EAAkBlC,EAAQ,QAE1BF,EAAAC,QAAA,SAAAkD,EAAAD,EAAAsE,EAAAC,EAAArE,EAAAsE,GACA,IAAAC,EAAAT,EAAA/D,GACArC,EAAA6G,EACAtE,EAAAD,EAAA,YACAwE,EAAA9G,KAAAG,UACAwE,KAqCA,OApCArD,GAAA,mBAAAtB,IAAA4G,GAAAE,EAAA5D,UAAAoD,EAAA,YACA,IAAAtG,GAAA+G,UAAA/D,WAOAhD,EAAAoC,EAAA,SAAA4E,EAAAxE,GACAtB,EAAA8F,EAAAhH,EAAAqC,EAAA,MACA2E,EAAAC,GAAA,IAAAJ,OACAzG,GAAAoC,GAAAjD,EAAAiD,EAAAF,EAAA0E,EAAAzE,GAAAyE,KAEAP,EAAA,kEAAAS,MAAA,cAAAC,GACA,IAAAC,EAAA,OAAAD,GAAA,OAAAA,EACAA,KAAAL,KAAAF,GAAA,SAAAO,IAAAZ,EAAAvG,EAAAG,UAAAgH,EAAA,SAAAE,EAAAC,GAEA,GADApG,EAAAN,KAAAZ,EAAAmH,IACAC,GAAAR,IAAAhH,EAAAyH,GAAA,aAAAF,QAAA/G,EACA,IAAAV,EAAAkB,KAAAqG,GAAAE,GAAA,IAAAE,EAAA,EAAAA,EAAAC,GACA,OAAAF,EAAAxG,KAAAlB,MAGAkH,GAAA/F,EAAAb,EAAAG,UAAA,QACAmD,IAAA,WACA,OAAA1C,KAAAqG,GAAAM,UApBAvH,EAAA2G,EAAAxE,eAAAC,EAAAC,EAAAC,EAAAC,GACAvB,EAAAhB,EAAAG,UAAAuG,GACAL,EAAAmB,MAAA,GAuBAhB,EAAAxG,EAAAqC,GAEAsC,EAAAtC,GAAArC,EACAK,IAAAoH,EAAApH,EAAAqH,EAAArH,EAAAsH,EAAAhD,GAEAiC,GAAAD,EAAAlD,UAAAzD,EAAAqC,EAAAC,GAEAtC,2BCzDA,IAAAK,EAAcjB,EAAQ,QAEtBiB,IAAAE,EAAA,UAA8BQ,OAAS3B,EAAQ,gUCoB/CwI,EAAA,WAGI,IAAIC,EACAC,EACAC,EAEJ,SAASC,EAAUC,GAEjBC,MAAMC,OAAOC,KAAKxH,KAAMqH,GA6E1B,SAASI,EAAcC,EAAeL,GAEpCrH,KAAK0H,cAAgBA,EACrB1H,KAAKqH,QAAUA,EA41CjB,SAASM,KAm0BT,SAASC,KAwkBT,SAASC,KAmVT,SAASC,KAyUT,SAASC,EAAaC,EAAQC,GAE5BjI,KAAKkI,GAAK,IAAIC,SAASH,GACvBhI,KAAKoI,OAAS,EACdpI,KAAKiI,kBAAiCzI,IAAjByI,GAA8BA,EAmPrD,SAASI,KAuDT,SAASC,EAAcC,GAErB,IACIC,EAAQD,EAAKC,MADG,qBAEpB,GAAIA,EAGF,OADcC,SAASD,EAAM,IAI/B,MAAM,IAAIE,MAAM,uEAKlB,SAASC,EAAwBC,GAE/B,OAAOA,EAAO,WA9wHhBxB,EAAU7H,UAAYsJ,IAAcC,IAAcxB,MAAMC,OAAOhI,YAE7DF,YAAa+H,EAEb2B,KAAM,SAAUC,EAAKC,EAAQC,EAAYC,GAEvC,IAAInF,EAAOhE,KAEPoJ,EAAsB,KAAdpF,EAAKoF,KAAe9B,MAAM+B,YAAYC,eAAeN,GAAOhF,EAAKoF,KAEzEG,EAAS,IAAIjC,MAAMkC,WAAWxJ,KAAKqH,SACvCkC,EAAOE,QAAQzF,EAAKoF,MACpBG,EAAOG,gBAAgB,eAEvBH,EAAOR,KAAKC,EAAK,SAAUhB,GAEzB,IAEEiB,EAAOjF,EAAK2F,MAAM3B,EAAQoB,IAE1B,MAAOQ,GAEPC,WAAW,WAELV,GAASA,EAAQS,GAErB5F,EAAKqD,QAAQyC,UAAUd,IAEtB,KAIJE,EAAYC,IAIjBQ,MAAO,SAAUI,EAAWX,GAE1B,GAmrHEY,EAAU,0BAFWhC,EAjrHD+B,GAqrHVE,YAAcD,EAAQnK,QAAUmK,IAAYE,EAA2BlC,EAAQ,EAAGgC,EAAQnK,QAnrHpGoH,GAAU,IAAIa,GAAe6B,MAAMI,OAE9B,CAEL,IAAII,EAAUD,EAA2BH,GAEzC,IAirHN,SAA0BxB,GAExB,IAAIyB,GAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAE7GI,EAAS,EAEb,SAASC,EAAKjC,GAEZ,IAAItJ,EAASyJ,EAAKH,EAAS,GAG3B,OAFAG,EAAOA,EAAK+B,MAAMF,EAAShC,GAC3BgC,IACOtL,EAIT,IAAK,IAAIoD,EAAI,EAAGA,EAAI8H,EAAQnK,SAAUqC,EAAG,CAEvC,IAAIqI,EAAMF,EAAK,GACf,GAAIE,IAAQP,EAAQ9H,GAElB,OAAO,EAMX,OAAO,EA3sHEsI,CAAiBL,GAEpB,MAAM,IAAIzB,MAAM,oCAIlB,GAAIJ,EAAc6B,GAAW,IAE3B,MAAM,IAAIzB,MAAM,4DAA8DJ,EAAc6B,IAI9FlD,GAAU,IAAIY,GAAa8B,MAAMQ,GA6pHvC,IAA2BnC,EAErBgC,EAvpHF,OAAO,IAAIvC,EAFS,IAAIH,MAAMmD,cAAczK,KAAKqH,SAASoC,QAAQzJ,KAAK0K,cAAgBtB,GAAMuB,eAAe3K,KAAK4K,aAEzE5K,KAAKqH,SAASsC,MAAM1C,MAchEQ,EAAclI,WAEZF,YAAaoI,EAEbkC,MAAO,WAELzC,EAAclH,KAAK6K,mBAEnB,IAAIC,EAAS9K,KAAK+K,cACdC,EAAWhL,KAAKiL,cAAcH,GAC9BI,EAAYlL,KAAKmL,eAAeH,GAChCI,EAAYpL,KAAKqL,iBACjBC,GAAc,IAAI3D,GAAiBgC,MAAMyB,GAI7C,OAFApL,KAAKuL,WAAWH,EAAWE,EAAaJ,GAEjC/D,GAMT0D,iBAAkB,WAEhB,IAAIW,EAAgB,IAAIC,EAAAhF,EAEpB,gBAAiBQ,GAEEA,EAAQyE,YAAYxE,YAE1B5E,QAAQ,SAAUqJ,GAE/B,IAAIC,EAASD,EAAc,GACvBE,EAAOF,EAAc,GACrBG,EAAeH,EAAc,GAE5BH,EAAc/I,IAAImJ,IAErBJ,EAAcjG,IAAIqG,GAChBG,WACAC,cAKJ,IAAIC,GAAsBC,GAAIL,EAAMC,aAAcA,GAClDN,EAAc9I,IAAIkJ,GAAQG,QAAQhN,KAAKkN,GAElCT,EAAc/I,IAAIoJ,IAErBL,EAAcjG,IAAIsG,GAChBE,WACAC,cAKJ,IAAIG,GAAqBD,GAAIN,EAAQE,aAAcA,GACnDN,EAAc9I,IAAImJ,GAAMG,SAASjN,KAAKoN,KAM1C,OAAOX,GAOTT,YAAa,WAEX,IAAID,KACAsB,KAEJ,GAAI,UAAWnF,EAAQoF,QAAS,CAE9B,IAAIC,EAAarF,EAAQoF,QAAQE,MAEjC,IAAK,IAAIC,KAAUF,EAAY,CAE7B,IAAIG,EAAYH,EAAWE,GAO3B,GAHA1B,EAFI4B,EAAKjE,SAAS+D,IAELC,EAAUE,kBAAoBF,EAAUG,SAGjD,YAAaH,EAAW,CAE1B,IAAII,EAAsBJ,EAAUK,mBAAmBC,aAAiBN,EAAUK,QAAQ7C,WAAa,EACnG+C,EAA8C,iBAAtBP,EAAUK,SAAgD,KAAtBL,EAAUK,QAE1E,GAAID,GAAsBG,EAAe,CAEvC,IAAIC,EAAQjN,KAAKkN,WAAWZ,EAAWE,IAEvCJ,EAAMK,EAAUE,kBAAoBF,EAAUG,UAAYK,KAUlE,IAAK,IAAIP,KAAM5B,EAAQ,CAErB,IAAIqC,EAAWrC,EAAO4B,QAEElN,IAApB4M,EAAMe,GAAyBrC,EAAO4B,GAAMN,EAAMe,GACjDrC,EAAO4B,GAAM5B,EAAO4B,GAAIpG,MAAM,MAAM8G,MAI3C,OAAOtC,GAKToC,WAAY,SAAUT,GAEpB,IAIIY,EAJAC,EAAUb,EAAUK,QACpBS,EAAWd,EAAUE,kBAAoBF,EAAUG,SACnDY,EAAYD,EAASjD,MAAMiD,EAASE,YAAY,KAAO,GAAGC,cAI9D,OAAQF,GAEN,IAAK,MAEHH,EAAO,YACP,MAEF,IAAK,MACL,IAAK,OAEHA,EAAO,aACP,MAEF,IAAK,MAEHA,EAAO,YACP,MAEF,IAAK,MAEHA,EAAO,aACP,MAEF,IAAK,MAEqC,OAApCrN,KAAKqH,QAAQsG,WAAW,SAE1BC,QAAQC,KAAK,6CAA8CN,GAI7DF,EAAO,YACP,MAEF,QAGE,YADAO,QAAQC,KAAK,0BAA4BL,EAAY,uBAKzD,GAAuB,iBAAZF,EAET,MAAO,QAAUD,EAAO,WAAaC,EAIrC,IAAIQ,EAAQ,IAAIC,WAAWT,GAC3B,OAAOU,OAAOC,IAAIC,gBAAgB,IAAIC,MAAML,IAAST,KAAMA,MAS/DpC,cAAe,SAAUH,GAEvB,IAAIsD,EAAa,IAAI3C,EAAAhF,EAErB,GAAI,YAAaQ,EAAQoF,QAAS,CAEhC,IAAIgC,EAAepH,EAAQoF,QAAQiC,QACnC,IAAK,IAAI9B,KAAU6B,EAAc,CAE/B,IAAIE,EAAUvO,KAAKwO,aAAaH,EAAa7B,GAAS1B,GACtDsD,EAAW7I,IAAIkD,SAAS+D,GAAS+B,IAMrC,OAAOH,GAKTI,aAAc,SAAUC,EAAa3D,GAEnC,IAAIyD,EAAUvO,KAAK0O,YAAYD,EAAa3D,GAE5CyD,EAAQrC,GAAKuC,EAAY/B,GAEzB6B,EAAQI,KAAOF,EAAYG,SAE3B,IAAIC,EAAYJ,EAAYK,UACxBC,EAAYN,EAAYO,UAExBC,OAAuBzP,IAAdqP,EAA0BA,EAAUjM,MAAQ,EACrDsM,OAAuB1P,IAAduP,EAA0BA,EAAUnM,MAAQ,EAQzD,GAHA2L,EAAQY,MAAmB,IAAXF,EAAe3H,MAAM8H,eAAiB9H,MAAM+H,oBAC5Dd,EAAQe,MAAmB,IAAXJ,EAAe5H,MAAM8H,eAAiB9H,MAAM+H,oBAExD,YAAaZ,EAAa,CAE5B,IAAIc,EAASd,EAAYe,QAAQ5M,MAEjC2L,EAAQkB,OAAOC,EAAIH,EAAO,GAC1BhB,EAAQkB,OAAOE,EAAIJ,EAAO,GAI5B,OAAOhB,GAKTG,YAAa,SAAUD,EAAa3D,GAElC,IAAIyC,EAkBAgB,EAhBAqB,EAAc5P,KAAK0H,cAAc0B,KAEjC4C,EAAW9E,EAAYxE,IAAI+L,EAAY/B,IAAIV,cAE9BxM,IAAbwM,GAA0BA,EAASnM,OAAS,QAAgCL,IAA3BsL,EAAOkB,EAAS,GAAGE,MAIpC,KAFlCqB,EAAWzC,EAAOkB,EAAS,GAAGE,KAEjB2D,QAAQ,UAAgD,IAA9BtC,EAASsC,QAAQ,UAEtD7P,KAAK0H,cAAc+B,aAAQjK,IAQ/B,IAAIgO,EAAYiB,EAAYqB,SAASxF,OAAO,GAAGoD,cAE/C,GAAkB,QAAdF,EAAqB,CAEvB,IAAIjE,EAASvJ,KAAKqH,QAAQsG,WAAW,QAEtB,OAAXpE,GAEFqE,QAAQC,KAAK,oEAAqEY,EAAY9B,kBAC9F4B,EAAU,IAAIjH,MAAMgH,SAIpBC,EAAUhF,EAAOR,KAAKwE,OAID,QAAdC,GAETI,QAAQC,KAAK,8EAA+EY,EAAY9B,kBACxG4B,EAAU,IAAIjH,MAAMgH,SAIpBC,EAAUvO,KAAK0H,cAAcqB,KAAKwE,GAMpC,OAFAvN,KAAK0H,cAAc+B,QAAQmG,GAEpBrB,GAKTpD,eAAgB,SAAUiD,GAExB,IAAI2B,EAAc,IAAItE,EAAAhF,EAEtB,GAAI,aAAcQ,EAAQoF,QAAS,CAEjC,IAAI2D,EAAgB/I,EAAQoF,QAAQ4D,SAEpC,IAAK,IAAIzD,KAAUwD,EAAe,CAEhC,IAAIE,EAAWlQ,KAAKmQ,cAAcH,EAAcxD,GAAS4B,GAExC,OAAb8B,GAAmBH,EAAYxK,IAAIkD,SAAS+D,GAAS0D,IAM7D,OAAOH,GAOTI,cAAe,SAAUC,EAAchC,GAErC,IAAIlC,EAAKkE,EAAa1D,GAClBiC,EAAOyB,EAAaxB,SACpBvB,EAAO+C,EAAaC,aAUxB,GAPoB,iBAAhB,IAAOhD,EAAP,YAAAiD,IAAOjD,MAETA,EAAOA,EAAKzK,QAKTsE,EAAYzE,IAAIyJ,GAAK,OAAO,KAEjC,IAEIgE,EAFAK,EAAavQ,KAAKwQ,gBAAgBJ,EAAchC,EAAYlC,GAIhE,OAAQmB,EAAKK,eAEX,IAAK,QACHwC,EAAW,IAAI5I,MAAMmJ,kBACrB,MACF,IAAK,UACHP,EAAW,IAAI5I,MAAMoJ,oBACrB,MACF,QACE9C,QAAQC,KAAK,gFAAiFR,GAC9F6C,EAAW,IAAI5I,MAAMmJ,kBAQzB,OAHAP,EAASS,UAAUJ,GACnBL,EAASvB,KAAOA,EAETuB,GAMTM,gBAAiB,SAAUJ,EAAchC,EAAYlC,GAEnD,IAAIqE,KAEAH,EAAaQ,aAEfL,EAAWM,UAAYT,EAAaQ,WAAWhO,OAG7CwN,EAAaU,QAEfP,EAAWQ,OAAQ,IAAIzJ,MAAM0J,OAAQC,UAAUb,EAAaU,QAAQlO,OAE3DwN,EAAac,cAAmD,UAAnCd,EAAac,aAAa7D,OAGhEkD,EAAWQ,OAAQ,IAAIzJ,MAAM0J,OAAQC,UAAUb,EAAac,aAAatO,QAIvEwN,EAAae,qBAEfZ,EAAWa,kBAAoBhB,EAAae,mBAAmBvO,OAI7DwN,EAAaiB,SAEfd,EAAWe,UAAW,IAAIhK,MAAM0J,OAAQC,UAAUb,EAAaiB,SAASzO,OAE/DwN,EAAamB,eAAqD,UAApCnB,EAAamB,cAAclE,OAGlEkD,EAAWe,UAAW,IAAIhK,MAAM0J,OAAQC,UAAUb,EAAamB,cAAc3O,QAI3EwN,EAAaoB,iBAEfjB,EAAWkB,kBAAoBC,WAAWtB,EAAaoB,eAAe5O,QAIpEwN,EAAauB,UAEfpB,EAAWqB,QAAUF,WAAWtB,EAAauB,QAAQ/O,QAInD2N,EAAWqB,QAAU,IAEvBrB,EAAWsB,aAAc,GAIvBzB,EAAa0B,mBAEfvB,EAAWwB,aAAe3B,EAAa0B,iBAAiBlP,OAItDwN,EAAa4B,YAEfzB,EAAW0B,UAAY7B,EAAa4B,UAAUpP,OAI5CwN,EAAa8B,SAEf3B,EAAW4B,UAAW,IAAI7K,MAAM0J,OAAQC,UAAUb,EAAa8B,SAAStP,OAE/DwN,EAAagC,eAAqD,UAApChC,EAAagC,cAAc/E,OAGlEkD,EAAW4B,UAAW,IAAI7K,MAAM0J,OAAQC,UAAUb,EAAagC,cAAcxP,QAI/E,IAAIoB,EAAOhE,KA+DX,OA9DAkH,EAAYxE,IAAIwJ,GAAIF,SAAS1J,QAAQ,SAAU+P,GAE7C,IAAIhF,EAAOgF,EAAMvG,aAEjB,OAAQuB,GAEN,IAAK,OACHkD,EAAW+B,QAAUtO,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACvD,MAEF,IAAK,kBACHqE,EAAWiC,MAAQxO,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACrD,MAEF,IAAK,eACL,IAAK,qBACHqE,EAAWkC,IAAMzO,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACnDqE,EAAWkC,IAAIC,SAAWpL,MAAMqL,aAChC,MAEF,IAAK,oBACHpC,EAAWqC,gBAAkB5O,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IAC/D,MAEF,IAAK,gBACHqE,EAAWsC,YAAc7O,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IAC3DqE,EAAWsC,YAAYH,SAAWpL,MAAMqL,aACxC,MAEF,IAAK,YACL,IAAK,sBACHpC,EAAWuC,UAAY9O,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACzD,MAEF,IAAK,kBACHqE,EAAWwC,OAAS/O,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACtDqE,EAAWwC,OAAOzO,QAAUgD,MAAM0L,iCAClCzC,EAAWwC,OAAOL,SAAWpL,MAAMqL,aACnC,MAEF,IAAK,gBACHpC,EAAW0C,YAAcjP,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IAC3DqE,EAAW0C,YAAYP,SAAWpL,MAAMqL,aACxC,MAEF,IAAK,mBACHpC,EAAW2C,SAAWlP,EAAKuO,WAAWnE,EAAYiE,EAAMnG,IACxDqE,EAAWsB,aAAc,EACzB,MAEF,IAAK,eACL,IAAK,oBACL,IAAK,iBACL,IAAK,0BACL,QACEjE,QAAQC,KAAK,0EAA2ER,MAOvFkD,GAKTgC,WAAY,SAAUnE,EAAY1B,GAUhC,MAPI,mBAAoBzF,EAAQoF,SAAWK,KAAMzF,EAAQoF,QAAQ8G,iBAE/DvF,QAAQC,KAAK,oGACbnB,EAAKxF,EAAYxE,IAAIgK,GAAIV,SAAS,GAAGE,IAIhCkC,EAAW1L,IAAIgK,IAOxBrB,eAAgB,WAEd,IAAI+H,KACAC,KAEJ,GAAI,aAAcpM,EAAQoF,QAAS,CAEjC,IAAIiH,EAAgBrM,EAAQoF,QAAQkH,SAEpC,IAAK,IAAI/G,KAAU8G,EAAe,CAEhC,IAAIE,EAAeF,EAAc9G,GAE7BiH,EAAgBvM,EAAYxE,IAAI+F,SAAS+D,IAE7C,GAA8B,SAA1BgH,EAAaE,SAAqB,CAEpC,IAAIC,EAAW3T,KAAK4T,cAAcH,EAAeH,GACjDK,EAASzH,GAAKM,EAEViH,EAAc1H,QAAQlM,OAAS,GAAG+N,QAAQC,KAAK,kFACnD8F,EAASE,WAAaJ,EAAc1H,QAAQ,GAAGG,GAE/CkH,EAAU5G,GAAUmH,OAEf,GAA8B,eAA1BH,EAAaE,SAA2B,CAEjD,IAAII,GACFpH,GAAIF,GAGNsH,EAAYC,WAAa/T,KAAKgU,kBAAkBP,EAAeH,GAC/DQ,EAAYpH,GAAKF,EAEbiH,EAAc1H,QAAQlM,OAAS,GAAG+N,QAAQC,KAAK,sFAEnDwF,EAAa7G,GAAUsH,IAQ7B,OAEEV,UAAWA,EACXC,aAAcA,IASlBO,cAAe,SAAUH,EAAeQ,GAEtC,IAAIC,KA8BJ,OA5BAT,EAAczH,SAAS1J,QAAQ,SAAU+P,GAEvC,IAAI8B,EAAWF,EAAc5B,EAAMnG,IAEnC,GAA0B,YAAtBiI,EAAST,SAAb,CAEA,IAAIU,GAEFlI,GAAImG,EAAMnG,GACVmI,WACAC,WACAC,eAAe,IAAIjN,MAAMkN,SAAUvD,UAAUkD,EAASM,cAAchO,IAMlE,YAAa0N,IAEfC,EAAQC,QAAUF,EAASO,QAAQjO,EACnC2N,EAAQE,QAAUH,EAASQ,QAAQlO,GAIrCyN,EAASnV,KAAKqV,OAMdF,SAAUA,EACVU,WAOJZ,kBAAmB,SAAUP,EAAeQ,GAI1C,IAFA,IAAIY,KAEK3S,EAAI,EAAGA,EAAIuR,EAAczH,SAASnM,OAAQqC,IAAK,CAEtD,IAAImQ,EAAQoB,EAAczH,SAAS9J,GAE/B4S,EAAkBb,EAAc5B,EAAMnG,IAEtC6I,GAEFpG,KAAMmG,EAAgBlG,SACtBoG,cAAeF,EAAgBG,cAC/BvI,GAAIoI,EAAgBpI,GACpBwI,YAAaJ,EAAgBK,YAAY1O,GAI3C,GAAiC,sBAA7BqO,EAAgBpB,SAAkC,OAEtDqB,EAAeK,MAAQlO,EAAYxE,IAAI+F,SAAS4J,EAAMnG,KAAKF,SAASqJ,OAAO,SAAUhD,GAEnF,YAA8B7S,IAAvB6S,EAAMvG,eAEZ,GAAGI,GAEN2I,EAAgB9V,KAAKgW,GAIvB,OAAOF,GAKTtJ,WAAY,SAAUH,EAAWE,EAAayE,GAE5C5I,EAAa,IAAIG,MAAMgO,MAEvB,IAAIC,EAAWvV,KAAKwV,YAAYpK,EAAUgI,UAAW9H,EAAayE,GAE9D0F,EAAaxO,EAAQoF,QAAQqJ,MAE7B1R,EAAOhE,KACXuV,EAASjT,QAAQ,SAAUqT,GAEzB,IAAIC,EAAYH,EAAWE,EAAMzJ,IACjClI,EAAK6R,oBAAoBF,EAAOC,GAER1O,EAAYxE,IAAIiT,EAAMzJ,IAAIH,QAEhCzJ,QAAQ,SAAUwT,GAElC,IAAIC,EAASR,EAAS7S,IAAIoT,EAAW5J,SACtB1M,IAAXuW,GAAsBA,EAAOC,IAAIL,KAIlB,OAAjBA,EAAMI,QAER5O,EAAW6O,IAAIL,KAOnB3V,KAAKiW,aAAa7K,EAAUgI,UAAW9H,EAAaiK,GAEpDvV,KAAKkW,qBAELlW,KAAKmW,sBAELhP,EAAWiP,SAAS,SAAUC,GAE5B,GAAIA,EAAKC,SAASC,cAAe,CAE3BF,EAAKN,SAAQM,EAAKC,SAASC,cAAcC,kBAAoBH,EAAKN,OAAOU,QAE7E,IAAIC,EAAYC,EAAkBN,EAAKC,SAASC,eAEhDF,EAAKO,YAAYF,MAMrB,IAAIG,GAAa,IAAIjP,GAAkB+B,QAGJ,IAA/BxC,EAAW6E,SAASnM,QAAgBsH,EAAW6E,SAAS,GAAG8K,UAE7D3P,EAAW6E,SAAS,GAAG6K,WAAaA,EACpC1P,EAAaA,EAAW6E,SAAS,IAInC7E,EAAW0P,WAAaA,GAK1BrB,YAAa,SAAUpC,EAAW9H,EAAayE,GAE7C,IAAIwF,EAAW,IAAI9J,EAAAhF,EACfgP,EAAaxO,EAAQoF,QAAQqJ,MAEjC,IAAK,IAAIlJ,KAAUiJ,EAAY,CAE7B,IAAI/I,EAAKjE,SAAS+D,GACd6J,EAAOZ,EAAWjJ,GAClBiH,EAAgBvM,EAAYxE,IAAIgK,GAEhCiJ,EAAQ3V,KAAK+W,cAActD,EAAeL,EAAW1G,EAAI2J,EAAKzH,UAElE,IAAK+G,EAAO,CAEV,OAAQU,EAAK3C,UAEX,IAAK,SACHiC,EAAQ3V,KAAKgX,aAAavD,GAC1B,MACF,IAAK,QACHkC,EAAQ3V,KAAKiX,YAAYxD,GACzB,MACF,IAAK,OACHkC,EAAQ3V,KAAKkX,WAAWzD,EAAenI,EAAayE,GACpD,MACF,IAAK,aACH4F,EAAQ3V,KAAKmX,YAAY1D,EAAenI,GACxC,MACF,IAAK,WACL,IAAK,OACHqK,EAAQ,IAAIrO,MAAM8P,KAClB,MACF,IAAK,OACL,QACEzB,EAAQ,IAAIrO,MAAMgO,MAKtBK,EAAMhH,KAAO0H,EAAKzH,SAAWtH,MAAM+P,gBAAgBC,iBAAiBjB,EAAKzH,UAAY,GAErF+G,EAAMzJ,GAAKQ,EAIb1M,KAAKuX,iBAAiB5B,EAAOU,GAC7Bd,EAAShQ,IAAImH,EAAIiJ,GAInB,OAAOJ,GAITwB,cAAe,SAAUtD,EAAeL,EAAW1G,EAAIiC,GAErD,IAAI6I,EAAO,KAwCX,OAtCA/D,EAAc1H,QAAQzJ,QAAQ,SAAUyT,GAEtC,IAAK,IAAI7J,KAAMkH,EAAW,CAExB,IAAIO,EAAWP,EAAUlH,GAEzByH,EAASO,SAAS5R,QAAQ,SAAU8R,EAASlS,GAE3C,GAAIkS,EAAQlI,KAAO6J,EAAO7J,GAAI,CAE5B,IAAIuL,EAAUD,GACdA,EAAO,IAAIlQ,MAAM8P,MAEZM,YAAYC,KAAKvD,EAAQG,eAI9BiD,EAAK7I,KAAOA,EAAOrH,MAAM+P,gBAAgBC,iBAAiB3I,GAAQ,GAClE6I,EAAKtL,GAAKQ,EAEViH,EAASiB,MAAM1S,GAAKsV,EAIJ,OAAZC,GAEFD,EAAKxB,IAAIyB,SAYZD,GAKTR,aAAc,SAAUvD,GAEtB,IAAIkC,EACAiC,EAcJ,GAZAnE,EAAczH,SAAS1J,QAAQ,SAAU+P,GAEvC,IAAIwF,EAAO5Q,EAAQoF,QAAQyL,cAAczF,EAAMnG,SAElC1M,IAATqY,IAEFD,EAAkBC,UAMErY,IAApBoY,EAEFjC,EAAQ,IAAIrO,MAAMyQ,aAEb,CAEL,IAAI1K,EAAO,OACkC7N,IAAzCoY,EAAgBI,sBAAqF,IAA/CJ,EAAgBI,qBAAqBpV,QAE7FyK,EAAO,GAIT,IAAI4K,EAAoB,OACUzY,IAA9BoY,EAAgBM,YAElBD,EAAoBL,EAAgBM,UAAUtV,MAAQ,KAIxD,IAAIuV,EAAmB,SACU3Y,IAA7BoY,EAAgBQ,WAElBD,EAAmBP,EAAgBQ,SAASxV,MAAQ,KAKtD,IAAIyV,EAAQrK,OAAOsK,WACfC,EAASvK,OAAOwK,iBAEgBhZ,IAAhCoY,EAAgBa,kBAA8DjZ,IAAjCoY,EAAgBc,eAE/DL,EAAQT,EAAgBa,YAAY7V,MACpC2V,EAASX,EAAgBc,aAAa9V,OAIxC,IAAI+V,EAASN,EAAQE,EAEjBK,EAAM,QAC0BpZ,IAAhCoY,EAAgBiB,cAElBD,EAAMhB,EAAgBiB,YAAYjW,OAIpC,IAAIkW,EAAclB,EAAgBmB,YAAcnB,EAAgBmB,YAAYnW,MAAQ,KAEpF,OAAQyK,GAEN,KAAK,EACHsI,EAAQ,IAAIrO,MAAM0R,kBAAkBJ,EAAKD,EAAQV,EAAmBE,GAChD,OAAhBW,GAAsBnD,EAAMsD,eAAeH,GAC/C,MAEF,KAAK,EACHnD,EAAQ,IAAIrO,MAAM4R,oBAAoBb,EAAQ,EAAGA,EAAQ,EAAGE,EAAS,GAAIA,EAAS,EAAGN,EAAmBE,GACxG,MAEF,QACEvK,QAAQC,KAAK,wCAA0CR,EAAO,KAC9DsI,EAAQ,IAAIrO,MAAMyQ,UAOxB,OAAOpC,GAKTsB,YAAa,SAAUxD,GAErB,IAAIkC,EACAwD,EAcJ,GAZA1F,EAAczH,SAAS1J,QAAQ,SAAU+P,GAEvC,IAAIwF,EAAO5Q,EAAQoF,QAAQyL,cAAczF,EAAMnG,SAElC1M,IAATqY,IAEFsB,EAAiBtB,UAMErY,IAAnB2Z,EAEFxD,EAAQ,IAAIrO,MAAMyQ,aAEb,CAEL,IAAI1K,EAKFA,OAF+B7N,IAA7B2Z,EAAeC,UAEV,EAIAD,EAAeC,UAAUxW,MAIlC,IAAImO,EAAQ,cAEiBvR,IAAzB2Z,EAAenI,QAEjBD,GAAQ,IAAIzJ,MAAM0J,OAAQC,UAAUkI,EAAenI,MAAMpO,QAI3D,IAAIyW,OAA0C7Z,IAA7B2Z,EAAeG,UAA2B,EAAIH,EAAeG,UAAU1W,MAAQ,SAGvDpD,IAArC2Z,EAAeI,mBAA8E,IAA3CJ,EAAeI,kBAAkB3W,QAErFyW,EAAY,GAId,IAAIG,EAAW,OAC0Bha,IAArC2Z,EAAeM,oBAIfD,OAF0Cha,IAAxC2Z,EAAeO,sBAAoF,IAA9CP,EAAeO,qBAAqB9W,MAEhF,EAIAuW,EAAeM,kBAAkB7W,OAShD,OAAQyK,GAEN,KAAK,EACHsI,EAAQ,IAAIrO,MAAMqS,WAAW5I,EAAOsI,EAAWG,EALvC,GAMR,MAEF,KAAK,EACH7D,EAAQ,IAAIrO,MAAMsS,iBAAiB7I,EAAOsI,GAC1C,MAEF,KAAK,EACH,IAAIQ,EAAQC,KAAKC,GAAK,OAEYva,IAA9B2Z,EAAea,aAEjBH,EAAQvS,MAAMwS,KAAKG,SAASd,EAAea,WAAWpX,QAIxD,IAAIsX,EAAW,OACmB1a,IAA9B2Z,EAAegB,aAKjBD,EAAW5S,MAAMwS,KAAKG,SAASd,EAAegB,WAAWvX,OACzDsX,EAAWJ,KAAKM,IAAIF,EAAU,IAIhCvE,EAAQ,IAAIrO,MAAM+S,UAAUtJ,EAAOsI,EAAWG,EAAUK,EAAOK,EAhCvD,GAiCR,MAEF,QACEtM,QAAQC,KAAK,uCAAyCsL,EAAeC,UAAUxW,MAAQ,uCACvF+S,EAAQ,IAAIrO,MAAMqS,WAAW5I,EAAOsI,QAKL7Z,IAA/B2Z,EAAemB,aAAkE,IAArCnB,EAAemB,YAAY1X,QAEzE+S,EAAM4E,YAAa,GAMvB,OAAO5E,GAITuB,WAAY,SAAUzD,EAAenI,EAAayE,GAEhD,IAAI4F,EACA6E,EAAW,KACXtK,EAAW,KACXhF,KA6DJ,OA1DAuI,EAAczH,SAAS1J,QAAQ,SAAU+P,GAEnC/G,EAAY7I,IAAI4P,EAAMnG,MAExBsO,EAAWlP,EAAY5I,IAAI2P,EAAMnG,KAI/B6D,EAAYtN,IAAI4P,EAAMnG,KAExBhB,EAAUnM,KAAKgR,EAAYrN,IAAI2P,EAAMnG,OAMrChB,EAAUrL,OAAS,EAErBqQ,EAAWhF,EAEFA,EAAUrL,OAAS,EAE5BqQ,EAAWhF,EAAU,IAIrBgF,EAAW,IAAI5I,MAAMmJ,mBAAmBM,MAAO,WAC/C7F,EAAUnM,KAAKmR,IAIb,UAAWsK,EAASC,YAEtBvP,EAAU5I,QAAQ,SAAU4N,GAE1BA,EAASwK,aAAepT,MAAMqT,eAM9BH,EAASI,cAEX1P,EAAU5I,QAAQ,SAAU4N,GAE1BA,EAAS2K,UAAW,KAItBlF,EAAQ,IAAIrO,MAAMwT,YAAYN,EAAUtK,IAClC6K,wBAINpF,EAAQ,IAAIrO,MAAM0T,KAAKR,EAAUtK,GAI5ByF,GAITwB,YAAa,SAAU1D,EAAenI,GAEpC,IAAIkP,EAAW/G,EAAczH,SAASiP,OAAO,SAAUC,EAAK7I,GAI1D,OAFI/G,EAAY7I,IAAI4P,EAAMnG,MAAKgP,EAAM5P,EAAY5I,IAAI2P,EAAMnG,KAEpDgP,GAEN,MAGChL,EAAW,IAAI5I,MAAM6T,mBAAmBpK,MAAO,QAAUqK,UAAW,IACxE,OAAO,IAAI9T,MAAM+T,KAAKb,EAAUtK,IAKlCqH,iBAAkB,SAAU5B,EAAOC,GAEjC,IAAIW,KAEA,gBAAiBX,IAAWW,EAAc+E,YAAc7S,SAASmN,EAAU2F,YAAY3Y,QAEzD2T,EAAciF,WAA5C,kBAAmB5F,EAAsC6F,EAAc7F,EAAU8F,cAAc9Y,OACnE,MAE5B,oBAAqBgT,IAAWW,EAAcoF,YAAc/F,EAAUgG,gBAAgBhZ,OAEtF,gBAAiBgT,IAAWW,EAAcsF,YAAcjG,EAAUkG,YAAYlZ,OAC9E,iBAAkBgT,IAAWW,EAAcwF,SAAWnG,EAAUoG,aAAapZ,OAC7E,iBAAkBgT,IAAWW,EAAc0F,aAAerG,EAAUsG,aAAatZ,OAEjF,gBAAiBgT,IAAWW,EAAc4F,MAAQvG,EAAUwG,YAAYxZ,OAExE,kBAAmBgT,IAAWW,EAAc8F,cAAgBzG,EAAU0G,cAAc1Z,OACpF,iBAAkBgT,IAAWW,EAAcgG,aAAe3G,EAAU4G,aAAa5Z,OAEjF,mBAAoBgT,IAAWW,EAAckG,eAAiB7G,EAAU8G,eAAe9Z,OACvF,kBAAmBgT,IAAWW,EAAcoG,cAAgB/G,EAAUgH,cAAcha,OAExF+S,EAAMW,SAASC,cAAgBA,GAIjCV,oBAAqB,SAAUF,EAAOC,GAEhC,mBAAoBA,GAEP1O,EAAYxE,IAAIiT,EAAMzJ,IAAIF,SAEhC1J,QAAQ,SAAU+P,GAEzB,GAA2B,mBAAvBA,EAAMvG,aAAmC,CAE3C,IAAI+Q,EAAe5V,EAAQoF,QAAQqJ,MAAMrD,EAAMnG,IAE/C,GAAI,oBAAqB2Q,EAAc,CAErC,IAAIC,EAAMD,EAAajB,gBAAgBhZ,WAGlBpD,IAAjBmW,EAAMvP,QAERuP,EAAMvP,OAAO2W,SAAS9L,UAAU6L,GAChC3V,EAAW6O,IAAIL,EAAMvP,SAIrBuP,EAAMqH,QAAO,IAAI1V,MAAM2V,SAAUhM,UAAU6L,SAcvD7G,aAAc,SAAU7C,EAAW9H,EAAaiK,GAE9C,IAAI2H,EAAeld,KAAKmd,iBAExB,IAAK,IAAIjR,KAAMkH,EAAW,CAExB,IAAIO,EAAWP,EAAUlH,GAEXhF,EAAYxE,IAAI+F,SAASkL,EAASzH,KAAKH,QAE7CzJ,QAAQ,SAAUyT,GAExB,GAAIzK,EAAY7I,IAAIsT,EAAO7J,IAAK,CAE9B,IAAIkJ,EAAQW,EAAO7J,GACIhF,EAAYxE,IAAI0S,GAEtBrJ,QAAQzJ,QAAQ,SAAU8a,GAErC7H,EAAS9S,IAAI2a,EAAclR,KAEjBqJ,EAAS7S,IAAI0a,EAAclR,IAEjCmR,KAAK,IAAI/V,MAAMgW,SAAS3J,EAASiB,OAAQsI,EAAaE,EAAclR,YActFiR,eAAgB,WAEd,IAAID,KAEJ,GAAI,SAAUjW,EAAQoF,QAAS,CAE7B,IAAIkR,EAAetW,EAAQoF,QAAQmR,KAEnC,IAAK,IAAIhR,KAAU+Q,EAEjB,GAAsC,aAAlCA,EAAa/Q,GAAQkH,SAAyB,CAEhD,IAAI+J,EAAYF,EAAa/Q,GAAQkR,SAEjCpe,MAAML,QAAQwe,GAEhBA,EAAUnb,QAAQ,SAAUqb,GAE1BT,EAAaS,EAASC,OAAQ,IAAItW,MAAMkN,SAAUvD,UAAU0M,EAASE,OAAOpX,KAM9EyW,EAAaO,EAAUG,OAAQ,IAAItW,MAAMkN,SAAUvD,UAAUwM,EAAUI,OAAOpX,IAUtF,OAAOyW,GAKThH,mBAAoB,WAElB,GAAI,mBAAoBjP,GAAW,iBAAkBA,EAAQ6W,eAAgB,CAE3E,IAAIC,EAAe9W,EAAQ6W,eAAeE,aAAapb,MACnDX,EAAI8b,EAAa,GACjBE,EAAIF,EAAa,GACjBrX,EAAIqX,EAAa,GAErB,GAAU,IAAN9b,GAAiB,IAANgc,GAAiB,IAANvX,EAAS,CAEjC,IAAIqK,EAAQ,IAAIzJ,MAAM0J,MAAM/O,EAAGgc,EAAGvX,GAClCS,EAAW6O,IAAI,IAAI1O,MAAM4W,aAAanN,EAAO,OAQnDoF,oBAAqB,WAEnB,IAAInS,EAAOhE,KACXmH,EAAWiP,SAAS,SAAU/D,GAExBA,EAAM8L,QAEJ9L,EAAMmI,SAAS4D,gBAAgBrB,UAAY1K,EAAMmI,SAAS4D,gBAAgBrB,SAASld,SAEjFP,MAAML,QAAQoT,EAAMnC,UAEtBmC,EAAMnC,SAAS5N,QAAQ,SAAU4N,EAAUhO,GAEzC8B,EAAKqa,mBAAmBhM,EAAOnC,EAAUhO,KAM3C8B,EAAKqa,mBAAmBhM,EAAOA,EAAMnC,cAY/CmO,mBAAoB,SAAUhM,EAAOnC,EAAUhP,GAE7C,IAAIod,EAAOjM,EAAMiM,KACbC,EAAUrO,EAASoO,KAGnBE,GAAY,EAoBhB,GAlBArX,EAAWiP,SAAS,SAAUC,GAExBA,EAAK8H,SAEH7e,MAAML,QAAQoX,EAAKnG,UAErBmG,EAAKnG,SAAS5N,QAAQ,SAAUmc,GAE1BA,EAAIH,OAASC,GAAWlI,EAAKiI,OAASA,IAAME,GAAY,KAIrDnI,EAAKnG,SAASoO,OAASC,GAAWlI,EAAKiI,OAASA,IAAME,GAAY,OAM/D,IAAdA,EAAoB,CAEtB,IAAIE,EAAYxO,EAASyO,QACzBD,EAAUrL,cAAe,OAEX7T,IAAV0B,EAAqBmR,EAAMnC,SAAWwO,EACrCrM,EAAMnC,SAAShP,GAASwd,OAExBxO,EAASmD,cAAe,IAUnC1L,EAAepI,WAEbF,YAAasI,EAGbgC,MAAO,SAAUyB,GAEf,IAAIE,EAAc,IAAIG,EAAAhF,EAEtB,GAAI,aAAcQ,EAAQoF,QAAS,CAEjC,IAAIuS,EAAW3X,EAAQoF,QAAQwS,SAE/B,IAAK,IAAIrS,KAAUoS,EAAU,CAE3B,IAAInL,EAAgBvM,EAAYxE,IAAI+F,SAAS+D,IACzC0O,EAAMlb,KAAK8e,cAAcrL,EAAemL,EAASpS,GAASpB,GAE9DE,EAAY/F,IAAIkD,SAAS+D,GAAS0O,IAMtC,OAAO5P,GAKTwT,cAAe,SAAUrL,EAAesL,EAAS3T,GAE/C,OAAQ2T,EAAQrL,UAEd,IAAK,OACH,OAAO1T,KAAKgf,kBAAkBvL,EAAesL,EAAS3T,GAGxD,IAAK,aACH,OAAOpL,KAAKif,mBAAmBF,KASrCC,kBAAmB,SAAUvL,EAAesL,EAAS3T,GAEnD,IAAIgI,EAAYhI,EAAUgI,UACtBC,KAEAoC,EAAahC,EAAc1H,QAAQ0G,IAAI,SAAUsD,GAEnD,OAAO9O,EAAQoF,QAAQqJ,MAAMK,EAAO7J,MAKtC,GAA0B,IAAtBuJ,EAAW5V,OAAf,CAEA,IAAI8T,EAAWF,EAAczH,SAASiP,OAAO,SAAUtH,EAAUtB,GAI/D,YAF4B7S,IAAxB4T,EAAUf,EAAMnG,MAAmByH,EAAWP,EAAUf,EAAMnG,KAE3DyH,GAEN,MAEHF,EAAczH,SAAS1J,QAAQ,SAAU+P,QAEE7S,IAArC4L,EAAUiI,aAAahB,EAAMnG,KAE/BmH,EAAatU,KAAKqM,EAAUiI,aAAahB,EAAMnG,OAQnD,IAAI0J,EAAYH,EAAW,GAEvBc,KAEA,kBAAmBX,IAAWW,EAAciF,WAAaC,EAAc7F,EAAU8F,cAAc9Y,QAC/F,gBAAiBgT,IAAWW,EAAc+E,YAAc7S,SAASmN,EAAU2F,YAAY3Y,QAEvF,yBAA0BgT,IAAWW,EAAcoF,YAAc/F,EAAUsJ,qBAAqBtc,OAChG,sBAAuBgT,IAAWW,EAAcwF,SAAWnG,EAAUuJ,kBAAkBvc,OACvF,qBAAsBgT,IAAWW,EAAc4F,MAAQvG,EAAUwJ,iBAAiBxc,OAEtF,IAAI8T,EAAYC,EAAkBJ,GAElC,OAAOvW,KAAKqf,YAAYN,EAASpL,EAAUN,EAAcqD,KAK3D2I,YAAa,SAAUN,EAASpL,EAAUN,EAAciM,GAEtD,IAAIpE,EAAM,IAAI5T,MAAMiY,eAChBR,EAAQnQ,WAAUsM,EAAIvM,KAAOoQ,EAAQnQ,UAEzC,IAAI4Q,EAAUxf,KAAKyf,aAAaV,EAASpL,GACrC+L,EAAU1f,KAAK2f,WAAWH,GAE1BI,EAAoB,IAAItY,MAAMuY,uBAAuBH,EAAQI,OAAQ,GAuBzE,GArBAF,EAAkBG,aAAaT,GAE/BpE,EAAI8E,aAAa,WAAYJ,GAEzBF,EAAQO,OAAOpgB,OAAS,GAE1Bqb,EAAI8E,aAAa,QAAS,IAAI1Y,MAAMuY,uBAAuBH,EAAQO,OAAQ,IAIzEtM,IAEFuH,EAAI8E,aAAa,YAAa,IAAI1Y,MAAM4Y,sBAAsBR,EAAQS,eAAgB,IAEtFjF,EAAI8E,aAAa,aAAc,IAAI1Y,MAAMuY,uBAAuBH,EAAQU,cAAe,IAGvFlF,EAAIN,aAAejH,GAIjB+L,EAAQW,OAAOxgB,OAAS,EAAG,CAE7B,IAAIygB,GAAe,IAAIhZ,MAAMiZ,SAAUC,gBAAgBlB,GAEnDmB,EAAkB,IAAInZ,MAAMuY,uBAAuBH,EAAQW,OAAQ,GACvEI,EAAgBC,kBAAkBJ,GAElCpF,EAAI8E,aAAa,SAAUS,GAoB7B,GAhBAf,EAAQiB,IAAIre,QAAQ,SAAUse,EAAU1e,GAGtC,IAAIyM,EAAO,MAAQzM,EAAI,GAAG2e,WAGhB,IAAN3e,IAEFyM,EAAO,MAITuM,EAAI8E,aAAarR,EAAM,IAAIrH,MAAMuY,uBAAuBH,EAAQiB,IAAIze,GAAI,MAItEsd,EAAQtP,UAA6C,YAAjCsP,EAAQtP,SAAS4Q,YAA2B,CAGlE,IAAIC,EAAoBrB,EAAQsB,cAAc,GAC1CC,EAAa,EAgBjB,GAdAvB,EAAQsB,cAAc1e,QAAQ,SAAU4e,EAAchf,GAEhDgf,IAAiBH,IAEnB7F,EAAIiG,SAASF,EAAY/e,EAAI+e,EAAYF,GAEzCA,EAAoBG,EACpBD,EAAa/e,KAObgZ,EAAIkG,OAAOvhB,OAAS,EAAG,CAEzB,IAAIwhB,EAAYnG,EAAIkG,OAAOlG,EAAIkG,OAAOvhB,OAAS,GAC3CyhB,EAAYD,EAAUE,MAAQF,EAAUG,MAExCF,IAAc5B,EAAQsB,cAAcnhB,QAEtCqb,EAAIiG,SAASG,EAAW5B,EAAQsB,cAAcnhB,OAASyhB,EAAWP,GAQ5C,IAAtB7F,EAAIkG,OAAOvhB,QAEbqb,EAAIiG,SAAS,EAAGzB,EAAQsB,cAAcnhB,OAAQ6f,EAAQsB,cAAc,IAQxE,OAFAhhB,KAAKyhB,gBAAgBvG,EAAK6D,EAAS1L,EAAciM,GAE1CpE,GAITuE,aAAc,SAAUV,EAASpL,GAE/B,IAAI6L,KAuBJ,GArBAA,EAAQkC,qBAAwCliB,IAArBuf,EAAQ4C,SAA0B5C,EAAQ4C,SAASlb,KAC9E+Y,EAAQoC,mBAAgDpiB,IAA/Buf,EAAQ8C,mBAAoC9C,EAAQ8C,mBAAmBpb,KAE5FsY,EAAQ+C,oBAEVtC,EAAQzO,MAAQ/Q,KAAK+hB,kBAAkBhD,EAAQ+C,kBAAkB,KAI/D/C,EAAQiD,uBAEVxC,EAAQtP,SAAWlQ,KAAKiiB,qBAAqBlD,EAAQiD,qBAAqB,KAIxEjD,EAAQmD,qBAEV1C,EAAQa,OAASrgB,KAAKmiB,aAAapD,EAAQmD,mBAAmB,KAI5DnD,EAAQqD,eAAgB,CAE1B5C,EAAQ6C,MAGR,IADA,IAAIngB,EAAI,EACD6c,EAAQqD,eAAelgB,IAE5Bsd,EAAQ6C,GAAGtjB,KAAKiB,KAAKsiB,SAASvD,EAAQqD,eAAelgB,KACrDA,IAgCJ,OA1BAsd,EAAQ+C,eAES,OAAb5O,IAEF6L,EAAQ7L,SAAWA,EAEnBA,EAASO,SAAS5R,QAAQ,SAAU8R,EAASlS,GAG3CkS,EAAQC,QAAQ/R,QAAQ,SAAUpB,EAAOshB,QAEJhjB,IAA/BggB,EAAQ+C,YAAYrhB,KAAsBse,EAAQ+C,YAAYrhB,OAElEse,EAAQ+C,YAAYrhB,GAAOnC,MAEzB2N,GAAIxK,EACJugB,OAAQrO,EAAQE,QAAQkO,UAUzBhD,GAITG,WAAY,SAAUH,GAEpB,IAAIE,GACFI,UACAO,UACAJ,UACAU,OACAK,iBACAZ,iBACAD,mBAGEuC,EAAe,EACfC,EAAa,EACbC,GAA0B,EAG1BC,KACAC,KACAC,KACAC,KACAC,KACAC,KAEAlf,EAAOhE,KA4JX,OA3JAwf,EAAQoC,cAActf,QAAQ,SAAU6gB,EAAaC,GAEnD,IAAIC,GAAY,EASZF,EAAc,IAEhBA,IAA6B,EAC7BE,GAAY,GAId,IAAIC,KACAhP,KAIJ,GAFAuO,EAAoB9jB,KAAmB,EAAdokB,EAA+B,EAAdA,EAAkB,EAAiB,EAAdA,EAAkB,GAE7E3D,EAAQzO,MAAO,CAEjB,IAAI/O,EAAOuhB,EAAQH,EAAoBV,EAAcS,EAAa3D,EAAQzO,OAE1EgS,EAAWhkB,KAAKiD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAIzC,GAAIwd,EAAQ7L,SAAU,CAcpB,QAZyCnU,IAArCggB,EAAQ+C,YAAYY,IAEtB3D,EAAQ+C,YAAYY,GAAa7gB,QAAQ,SAAUkhB,GAEjDlP,EAAQvV,KAAKykB,EAAGf,QAChBa,EAAcvkB,KAAKykB,EAAG9W,MAOtB4H,EAAQzU,OAAS,EAAG,CAEjB+iB,IAEHhV,QAAQC,KAAK,6GACb+U,GAA0B,GAI5B,IAAIa,GAAU,EAAG,EAAG,EAAG,GACnBC,GAAU,EAAG,EAAG,EAAG,GAEvBpP,EAAQhS,QAAQ,SAAUmgB,EAAQkB,GAEhC,IAAIC,EAAgBnB,EAChBvB,EAAeoC,EAAcK,GAEjCD,EAAOphB,QAAQ,SAAUuhB,EAAgBC,EAAqBC,GAE5D,GAAIH,EAAgBC,EAAgB,CAElCE,EAAoBD,GAAuBF,EAC3CA,EAAgBC,EAEhB,IAAIG,EAAMP,EAAOK,GACjBL,EAAOK,GAAuB5C,EAC9BA,EAAe8C,OAQrBV,EAAgBG,EAChBnP,EAAUoP,EAKZ,KAAOpP,EAAQzU,OAAS,GAEtByU,EAAQvV,KAAK,GACbukB,EAAcvkB,KAAK,GAIrB,IAAK,IAAImD,EAAI,EAAGA,EAAI,IAAKA,EAEvB+gB,EAAYlkB,KAAKuV,EAAQpS,IACzBghB,EAAkBnkB,KAAKukB,EAAcphB,IAMzC,GAAIsd,EAAQa,OAAQ,CAEdre,EAAOuhB,EAAQH,EAAoBV,EAAcS,EAAa3D,EAAQa,QAE1EyC,EAAY/jB,KAAKiD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAI1C,GAAIwd,EAAQtP,UAA6C,YAAjCsP,EAAQtP,SAAS4Q,YAEvC,IAAIE,EAAgBuC,EAAQH,EAAoBV,EAAcS,EAAa3D,EAAQtP,UAAU,GAI3FsP,EAAQ6C,IAEV7C,EAAQ6C,GAAG/f,QAAQ,SAAU+f,EAAIngB,GAE/B,IAAIF,EAAOuhB,EAAQH,EAAoBV,EAAcS,EAAad,QAE/C7iB,IAAfwjB,EAAQ9gB,KAEV8gB,EAAQ9gB,OAIV8gB,EAAQ9gB,GAAGnD,KAAKiD,EAAK,IACrBghB,EAAQ9gB,GAAGnD,KAAKiD,EAAK,MAMzB2gB,IAEIU,IAEFrf,EAAKigB,QAAQvE,EAASF,EAASqD,EAAqB7B,EAAe8B,EAAaC,EAAYC,EAASC,EAAaC,EAAmBP,GAErID,IACAC,EAAa,EAGbE,KACAC,KACAC,KACAC,KACAC,KACAC,QAMGxD,GAKTuE,QAAS,SAAUvE,EAASF,EAASqD,EAAqB7B,EAAe8B,EAAaC,EAAYC,EAASC,EAAaC,EAAmBP,GAEzI,IAAK,IAAIzgB,EAAI,EAAGA,EAAIygB,EAAYzgB,IAE9Bwd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAoB,KAChEnD,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAoB,KAChEnD,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAoB,KAEhEnD,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAA8B,GAAT3gB,EAAI,MACrEwd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAA8B,GAAT3gB,EAAI,GAAS,KAC9Ewd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAA8B,GAAT3gB,EAAI,GAAS,KAE9Ewd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAwB,EAAJ3gB,KAChEwd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAwB,EAAJ3gB,EAAQ,KACxEwd,EAAQI,OAAO/gB,KAAKygB,EAAQkC,gBAAgBmB,EAAwB,EAAJ3gB,EAAQ,KAEpEsd,EAAQ7L,WAEV+L,EAAQU,cAAcrhB,KAAKkkB,EAAY,IACvCvD,EAAQU,cAAcrhB,KAAKkkB,EAAY,IACvCvD,EAAQU,cAAcrhB,KAAKkkB,EAAY,IACvCvD,EAAQU,cAAcrhB,KAAKkkB,EAAY,IAEvCvD,EAAQU,cAAcrhB,KAAKkkB,EAAsB,GAAT/gB,EAAI,KAC5Cwd,EAAQU,cAAcrhB,KAAKkkB,EAAsB,GAAT/gB,EAAI,GAAS,IACrDwd,EAAQU,cAAcrhB,KAAKkkB,EAAsB,GAAT/gB,EAAI,GAAS,IACrDwd,EAAQU,cAAcrhB,KAAKkkB,EAAsB,GAAT/gB,EAAI,GAAS,IAErDwd,EAAQU,cAAcrhB,KAAKkkB,EAAgB,EAAJ/gB,IACvCwd,EAAQU,cAAcrhB,KAAKkkB,EAAgB,EAAJ/gB,EAAQ,IAC/Cwd,EAAQU,cAAcrhB,KAAKkkB,EAAgB,EAAJ/gB,EAAQ,IAC/Cwd,EAAQU,cAAcrhB,KAAKkkB,EAAgB,EAAJ/gB,EAAQ,IAE/Cwd,EAAQS,eAAephB,KAAKmkB,EAAkB,IAC9CxD,EAAQS,eAAephB,KAAKmkB,EAAkB,IAC9CxD,EAAQS,eAAephB,KAAKmkB,EAAkB,IAC9CxD,EAAQS,eAAephB,KAAKmkB,EAAkB,IAE9CxD,EAAQS,eAAephB,KAAKmkB,EAA4B,GAAThhB,EAAI,KACnDwd,EAAQS,eAAephB,KAAKmkB,EAA4B,GAAThhB,EAAI,GAAS,IAC5Dwd,EAAQS,eAAephB,KAAKmkB,EAA4B,GAAThhB,EAAI,GAAS,IAC5Dwd,EAAQS,eAAephB,KAAKmkB,EAA4B,GAAThhB,EAAI,GAAS,IAE5Dwd,EAAQS,eAAephB,KAAKmkB,EAAsB,EAAJhhB,IAC9Cwd,EAAQS,eAAephB,KAAKmkB,EAAsB,EAAJhhB,EAAQ,IACtDwd,EAAQS,eAAephB,KAAKmkB,EAAsB,EAAJhhB,EAAQ,IACtDwd,EAAQS,eAAephB,KAAKmkB,EAAsB,EAAJhhB,EAAQ,KAIpDsd,EAAQzO,QAEV2O,EAAQO,OAAOlhB,KAAKgkB,EAAW,IAC/BrD,EAAQO,OAAOlhB,KAAKgkB,EAAW,IAC/BrD,EAAQO,OAAOlhB,KAAKgkB,EAAW,IAE/BrD,EAAQO,OAAOlhB,KAAKgkB,EAAqB,GAAT7gB,EAAI,KACpCwd,EAAQO,OAAOlhB,KAAKgkB,EAAqB,GAAT7gB,EAAI,GAAS,IAC7Cwd,EAAQO,OAAOlhB,KAAKgkB,EAAqB,GAAT7gB,EAAI,GAAS,IAE7Cwd,EAAQO,OAAOlhB,KAAKgkB,EAAe,EAAJ7gB,IAC/Bwd,EAAQO,OAAOlhB,KAAKgkB,EAAe,EAAJ7gB,EAAQ,IACvCwd,EAAQO,OAAOlhB,KAAKgkB,EAAe,EAAJ7gB,EAAQ,KAIrCsd,EAAQtP,UAA6C,YAAjCsP,EAAQtP,SAAS4Q,cAEvCpB,EAAQsB,cAAcjiB,KAAKiiB,GAC3BtB,EAAQsB,cAAcjiB,KAAKiiB,GAC3BtB,EAAQsB,cAAcjiB,KAAKiiB,IAIzBxB,EAAQa,SAEVX,EAAQW,OAAOthB,KAAK+jB,EAAY,IAChCpD,EAAQW,OAAOthB,KAAK+jB,EAAY,IAChCpD,EAAQW,OAAOthB,KAAK+jB,EAAY,IAEhCpD,EAAQW,OAAOthB,KAAK+jB,EAAsB,GAAT5gB,EAAI,KACrCwd,EAAQW,OAAOthB,KAAK+jB,EAAsB,GAAT5gB,EAAI,GAAS,IAC9Cwd,EAAQW,OAAOthB,KAAK+jB,EAAsB,GAAT5gB,EAAI,GAAS,IAE9Cwd,EAAQW,OAAOthB,KAAK+jB,EAAgB,EAAJ5gB,IAChCwd,EAAQW,OAAOthB,KAAK+jB,EAAgB,EAAJ5gB,EAAQ,IACxCwd,EAAQW,OAAOthB,KAAK+jB,EAAgB,EAAJ5gB,EAAQ,KAItCsd,EAAQ6C,IAEV7C,EAAQ6C,GAAG/f,QAAQ,SAAU+f,EAAIG,QAERhjB,IAAnBkgB,EAAQiB,IAAI6B,KAAkB9C,EAAQiB,IAAI6B,OAE9C9C,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAG,IAC/B9C,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAG,IAE/B9C,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAa,GAATtgB,EAAI,KACpCwd,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAa,GAATtgB,EAAI,GAAS,IAE7Cwd,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAO,EAAJtgB,IAC/Bwd,EAAQiB,IAAI6B,GAAGzjB,KAAKikB,EAAQR,GAAO,EAAJtgB,EAAQ,OAU/Cuf,gBAAiB,SAAUyC,EAAWC,EAAe9Q,EAAciM,GAEjE,GAA4B,IAAxBjM,EAAaxT,OAAjB,CAEAqkB,EAAUE,sBAAuB,EAEjCF,EAAU9F,gBAAgBrB,YAG1B,IAAI/Y,EAAOhE,KACXqT,EAAa/Q,QAAQ,SAAUwR,GAE7BA,EAAYC,WAAWzR,QAAQ,SAAU+hB,GAEvC,IAAIC,EAAerd,EAAQoF,QAAQwS,SAASwF,EAAUjP,YAEjC5V,IAAjB8kB,GAEFtgB,EAAKugB,iBAAiBL,EAAWC,EAAeG,EAAchF,EAAc+E,EAAU1V,YAc9F4V,iBAAkB,SAAUL,EAAWC,EAAeG,EAAchF,EAAc3Q,GAUhF,IARA,IAAIiT,OAAsDpiB,IAArC2kB,EAActC,mBAAoCsC,EAActC,mBAAmBpb,KAEpG+d,OAAkDhlB,IAA1B8kB,EAAa3C,SAA0B2C,EAAa3C,SAASlb,KACrF4N,OAAoC7U,IAAzB8kB,EAAa5P,QAAyB4P,EAAa5P,QAAQjO,KAEtE5G,EAA+C,EAAtCqkB,EAAUzJ,WAAWsC,SAASyE,MACvCiD,EAAiB,IAAIC,aAAa7kB,GAE7BqC,EAAI,EAAGA,EAAImS,EAAQxU,OAAQqC,IAAK,CAEvC,IAAIyiB,EAA0B,EAAbtQ,EAAQnS,GAEzBuiB,EAAeE,GAAcH,EAAyB,EAAJtiB,GAClDuiB,EAAeE,EAAa,GAAKH,EAAyB,EAAJtiB,EAAQ,GAC9DuiB,EAAeE,EAAa,GAAKH,EAAyB,EAAJtiB,EAAQ,GAKhE,IAAI0iB,GACFhD,cAAeA,EACfF,gBAAiB+C,GAIfI,EAAe7kB,KAAK2f,WAAWiF,GAE/BhF,EAAoB,IAAItY,MAAMuY,uBAAuBgF,EAAa/E,OAAQ,GAC9EF,EAAkBjR,KAAOA,GAAQ2V,EAAa1V,SAE9CgR,EAAkBG,aAAaT,GAE/B4E,EAAU9F,gBAAgBrB,SAAShe,KAAK6gB,IAK1CuC,aAAc,SAAU2C,GAEtB,IAAIhE,EAAcgE,EAAWC,uBACzBC,EAAgBF,EAAWG,yBAC3Bjd,EAAS8c,EAAWI,QAAQze,EAC5B0e,KAeJ,MAdsB,kBAAlBH,IAEE,gBAAiBF,EAEnBK,EAAcL,EAAWM,YAAY3e,EAE5B,iBAAkBqe,IAE3BK,EAAcL,EAAWO,aAAa5e,KAOxC6e,SAAU,EACVtd,OAAQA,EACRqM,QAAS8Q,EACTrE,YAAaA,EACbkE,cAAeA,IAMnB1C,SAAU,SAAUiD,GAElB,IAAIzE,EAAcyE,EAAOR,uBACrBC,EAAgBO,EAAON,yBACvBjd,EAASud,EAAOC,GAAG/e,EACnB0e,KAOJ,MANsB,kBAAlBH,IAEFG,EAAcI,EAAOE,QAAQhf,IAK7B6e,SAAU,EACVtd,OAAQA,EACRqM,QAAS8Q,EACTrE,YAAaA,EACbkE,cAAeA,IAMnBjD,kBAAmB,SAAU2D,GAE3B,IAAI5E,EAAc4E,EAAUX,uBACxBC,EAAgBU,EAAUT,yBAC1Bjd,EAAS0d,EAAUC,OAAOlf,EAC1B0e,KAOJ,MANsB,kBAAlBH,IAEFG,EAAcO,EAAUE,WAAWnf,IAKnC6e,SAAU,EACVtd,OAAQA,EACRqM,QAAS8Q,EACTrE,YAAaA,EACbkE,cAAeA,IAMnB/C,qBAAsB,SAAU4D,GAE9B,IAAI/E,EAAc+E,EAAad,uBAC3BC,EAAgBa,EAAaZ,yBAEjC,GAAoB,yBAAhBnE,EAEF,OACEwE,SAAU,EACVtd,QAAS,GACTqM,SAAU,GACVyM,YAAa,UACbkE,cAAeA,GAYnB,IAPA,IAAIc,EAAsBD,EAAaE,UAAUtf,EAK7Cuf,KAEK9jB,EAAI,EAAGA,EAAI4jB,EAAoBjmB,SAAUqC,EAEhD8jB,EAAgBjnB,KAAKmD,GAIvB,OACEojB,SAAU,EACVtd,OAAQ8d,EACRzR,QAAS2R,EACTlF,YAAaA,EACbkE,cAAeA,IAMnB/F,mBAAoB,SAAUF,GAE5B,QAAyBvf,IAArB8H,MAAM2e,WAGR,OADArY,QAAQhE,MAAM,oIACP,IAAItC,MAAMiY,eAInB,IAAI2G,EAAQzd,SAASsW,EAAQoH,OAE7B,GAAIC,MAAMF,GAGR,OADAtY,QAAQhE,MAAM,8DAA+DmV,EAAQoH,MAAOpH,EAAQrS,IAC7F,IAAIpF,MAAMiY,eAUnB,IANA,IAYI8G,EAAWC,EAZXC,EAASL,EAAQ,EAEjBM,EAAQzH,EAAQ0H,WAAWhgB,EAC3BigB,KACAC,EAAe5H,EAAQ6H,OAAOngB,EAEzBvE,EAAI,EAAG2kB,EAAIF,EAAa9mB,OAAQqC,EAAI2kB,EAAG3kB,GAAK,EAEnDwkB,EAAc3nB,MAAK,IAAIuI,MAAMwf,SAAU7V,UAAU0V,EAAczkB,IAMjE,GAAqB,WAAjB6c,EAAQgI,KAEVL,EAAc3nB,KAAK2nB,EAAc,SAE5B,GAAqB,aAAjB3H,EAAQgI,KAAqB,CAEtCV,EAAYE,EACZD,EAAUE,EAAM3mB,OAAS,EAAIwmB,EAE7B,IAASnkB,EAAI,EAAGA,EAAIqkB,IAAUrkB,EAE5BwkB,EAAc3nB,KAAK2nB,EAAcxkB,IAMrC,IACI8kB,EADQ,IAAI1f,MAAM2e,WAAWM,EAAQC,EAAOE,EAAeL,EAAWC,GACrDW,UAAiC,EAAvBP,EAAc7mB,QAEzCqnB,EAAY,IAAIxC,aAA+B,EAAlBsC,EAASnnB,QAE1CmnB,EAAS1kB,QAAQ,SAAUwd,EAAQ5d,GAEjC4d,EAAOqH,QAAQD,EAAe,EAAJhlB,KAI5B,IAAIsY,EAAW,IAAIlT,MAAMiY,eAGzB,OAFA/E,EAASwF,aAAa,WAAY,IAAI1Y,MAAM8f,gBAAgBF,EAAW,IAEhE1M,IAUX5S,EAAgBrI,WAEdF,YAAauI,EAGb+B,MAAO,WAEL,IAAI0d,KAEAC,EAAWtnB,KAAKunB,aAEpB,QAAiB/nB,IAAb8nB,EAEF,IAAK,IAAItmB,KAAOsmB,EAAU,CAExB,IAAIE,EAAUF,EAAStmB,GAEnBymB,EAAOznB,KAAK0nB,QAAQF,GAExBH,EAAetoB,KAAK0oB,GAMxB,OAAOJ,GAITE,WAAY,WAIV,QAAuC/nB,IAAnCyH,EAAQoF,QAAQsb,eAApB,CAEA,IAAIC,EAAgB5nB,KAAK6nB,2BAEzB7nB,KAAK8nB,qBAAqBF,GAE1B,IAAIG,EAAY/nB,KAAKgoB,qBAAqBJ,GAG1C,OAFe5nB,KAAKioB,gBAAgBF,KAStCF,yBAA0B,WAExB,IAAIK,EAAgBjhB,EAAQoF,QAAQ8b,mBAEhCP,EAAgB,IAAInc,EAAAhF,EAExB,IAAK,IAAI+F,KAAU0b,EAAe,CAEhC,IAAIE,EAAeF,EAAc1b,GAEjC,GAA2D,OAAvD4b,EAAaxZ,SAASpG,MAAM,uBAAiC,CAE/D,IAAI6f,GAEF3b,GAAI0b,EAAa1b,GACjBmL,KAAMuQ,EAAaxZ,SACnB0Z,WAIFV,EAAcriB,IAAI8iB,EAAU3b,GAAI2b,IAMpC,OAAOT,GAOTE,qBAAsB,SAAUF,GAE9B,IAAIW,EAAYthB,EAAQoF,QAAQsb,eAShC,IAAK,IAAInb,KAAU+b,EAAW,CAE5B,IAAIC,GAEF9b,GAAI6b,EAAU/b,GAAQE,GACtB+b,MAAOF,EAAU/b,GAAQkc,QAAQjiB,EAAEgM,IAAI9J,GACvC4G,OAAQgZ,EAAU/b,GAAQmc,cAAcliB,GAItCgN,EAAgBvM,EAAYxE,IAAI8lB,EAAe9b,IAEnD,QAAsBlN,IAAlBiU,EAA6B,CAE/B,IAAImV,EAAmBnV,EAAc1H,QAAQ,GAAGG,GAC5C2c,EAA6BpV,EAAc1H,QAAQ,GAAGD,aAEtD+c,EAA2BrgB,MAAM,KAEnCof,EAAcllB,IAAIkmB,GAAkBN,OAApC,EAAkDE,EAEzCK,EAA2BrgB,MAAM,KAE1Cof,EAAcllB,IAAIkmB,GAAkBN,OAApC,EAAkDE,EAEzCK,EAA2BrgB,MAAM,KAE1Cof,EAAcllB,IAAIkmB,GAAkBN,OAApC,EAAkDE,EAEzCK,EAA2BrgB,MAAM,oBAAsBof,EAAcnlB,IAAImmB,KAElFhB,EAAcllB,IAAIkmB,GAAkBN,OAApC,MAAsDE,MAa9DR,qBAAsB,SAAUJ,GAE9B,IAAIkB,EAAY7hB,EAAQoF,QAAQ0c,eAE5BhB,EAAY,IAAItc,EAAAhF,EAEpB,IAAK,IAAI+F,KAAUsc,EAAW,CAE5B,IAAIE,KAEAlT,EAAa5O,EAAYxE,IAAI+F,SAAS+D,IAE1C,QAAmBhN,IAAfsW,EAGaA,EAAW9J,SAEjB1J,QAAQ,SAAU+P,EAAOnQ,GAEhC,GAAI0lB,EAAcnlB,IAAI4P,EAAMnG,IAAK,CAE/B,IAAImc,EAAYT,EAAcllB,IAAI2P,EAAMnG,IAGxC,QAA2B1M,IAAvB6oB,EAAUC,OAAO5Y,QAA0ClQ,IAAvB6oB,EAAUC,OAAO3Y,QAA0CnQ,IAAvB6oB,EAAUC,OAAOW,EAAiB,CAE5G,QAA2BzpB,IAAvBwpB,EAAgB9mB,GAQlB,QAAgB1C,KANZ0pB,EAAUhiB,EAAYxE,IAAI2P,EAAMnG,IAAIH,QAAQsJ,OAAO,SAAUU,GAE/D,YAA+BvW,IAAxBuW,EAAOjK,eAEb,GAAGI,IAEqB,CAEzB,IAEImK,GAEF8S,WAJEC,EAAWniB,EAAQoF,QAAQqJ,MAAMwT,EAAQrI,aAIvBjS,SAAWtH,MAAM+P,gBAAgBC,iBAAiB8R,EAASxa,UAAY,GAC3F1C,GAAIkd,EAAS1c,GACb2c,iBAAkB,EAAG,EAAG,GACxBC,iBAAkB,EAAG,EAAG,GACxBC,cAAe,EAAG,EAAG,IAIvBpiB,EAAWiP,SAAS,SAAU/D,GAExBA,EAAMnG,KAAOkd,EAAS1c,KAExB2J,EAAKK,UAAYrE,EAAMoE,OAEnBpE,EAAMiE,SAASC,gBAAeF,EAAKmF,WAAanJ,EAAMiE,SAASC,cAAciF,eAMhFnF,EAAKK,YAAWL,EAAKK,UAAY,IAAIpP,MAAMkN,SAI5C,gBAAiB4U,IAAU/S,EAAKwF,YAAcuN,EAAStN,YAAYlZ,OACnE,iBAAkBwmB,IAAU/S,EAAK4F,aAAemN,EAASlN,aAAatZ,OAE1EomB,EAAgB9mB,GAAKmU,EAMrB2S,EAAgB9mB,KAAI8mB,EAAgB9mB,GAAGmmB,EAAUxQ,MAAQwQ,QAExD,QAA+B7oB,IAA3B6oB,EAAUC,OAAOkB,MAAqB,CAE/C,QAA2BhqB,IAAvBwpB,EAAgB9mB,GAAkB,CAEpC,IAYIknB,EAZAK,EAAaviB,EAAYxE,IAAI2P,EAAMnG,IAAIH,QAAQsJ,OAAO,SAAUU,GAElE,YAA+BvW,IAAxBuW,EAAOjK,eAEb,GAAGI,GAEFwd,EAAYxiB,EAAYxE,IAAI+mB,GAAY1d,QAAQ,GAAGG,GACnDkJ,EAAQlO,EAAYxE,IAAIgnB,GAAW3d,QAAQ,GAAGG,GAG9Cgd,EAAUhiB,EAAYxE,IAAI0S,GAAOrJ,QAAQ,GAAGG,GAI5CmK,GAEF8S,WAJEC,EAAWniB,EAAQoF,QAAQqJ,MAAMwT,IAIfta,SAAWtH,MAAM+P,gBAAgBC,iBAAiB8R,EAASxa,UAAY,GAC3F+a,UAAW1iB,EAAQoF,QAAQkH,SAASkW,GAAY7a,UAIlDoa,EAAgB9mB,GAAKmU,EAIvB2S,EAAgB9mB,GAAGmmB,EAAUxQ,MAAQwQ,MAQ3CN,EAAUxiB,IAAIkD,SAAS+D,GAASwc,GAMpC,OAAOjB,GAMTE,gBAAiB,SAAUF,GAEzB,IAAI6B,EAAY3iB,EAAQoF,QAAQwd,eAG5BvC,KAEJ,IAAK,IAAI9a,KAAUod,EAAW,CAE5B,IAAI5d,EAAW9E,EAAYxE,IAAI+F,SAAS+D,IAASR,SAE7CA,EAASnM,OAAS,GAIpB+N,QAAQC,KAAK,sIAIf,IAAIic,EAAQ/B,EAAUrlB,IAAIsJ,EAAS,GAAGE,IAEtCob,EAAS9a,IAEPmC,KAAMib,EAAUpd,GAAQoC,SACxBkb,MAAOA,GAMX,OAAOxC,GAITI,QAAS,SAAUF,GAEjB,IAAIuC,KAEA/lB,EAAOhE,KAOX,OANAwnB,EAAQsC,MAAMxnB,QAAQ,SAAU0nB,GAE9BD,EAASA,EAAOE,OAAOjmB,EAAKkmB,eAAeF,MAItC,IAAI1iB,MAAM6iB,cAAc3C,EAAQ7Y,MAAO,EAAGob,IAInDG,eAAgB,SAAUF,GAExB,IAAID,KAEAV,EAAkB,IAAI/hB,MAAM2V,QAC5BqM,EAAkB,IAAIhiB,MAAM8iB,WAC5Bb,EAAe,IAAIjiB,MAAM2V,QAQ7B,GANI+M,EAAUtT,WAAWsT,EAAUtT,UAAU2T,UAAUhB,EAAiBC,EAAiBC,GAEzFF,EAAkBA,EAAgBlC,UAClCmC,GAAkB,IAAIhiB,MAAMgjB,OAAQC,kBAAkBjB,EAAiBU,EAAUxO,YAAY2L,UAC7FoC,EAAeA,EAAapC,eAER3nB,IAAhBwqB,EAAUQ,GAAmBC,IAAYT,EAAUQ,EAAElC,QAAQzoB,OAAS,EAAG,CAE3E,IAAI6qB,EAAgB1qB,KAAK2qB,oBAAoBX,EAAUb,UAAWa,EAAUQ,EAAElC,OAAQe,EAAiB,iBACjF7pB,IAAlBkrB,GAA6BX,EAAOhrB,KAAK2rB,GAI/C,QAAoBlrB,IAAhBwqB,EAAUllB,GAAmB2lB,IAAYT,EAAUllB,EAAEwjB,QAAQzoB,OAAS,EAAG,CAE3E,IAAI+qB,EAAgB5qB,KAAK6qB,sBAAsBb,EAAUb,UAAWa,EAAUllB,EAAEwjB,OAAQgB,EAAiBU,EAAUnO,YAAamO,EAAU/N,aAAc+N,EAAUxO,iBAC5Ihc,IAAlBorB,GAA6Bb,EAAOhrB,KAAK6rB,GAI/C,QAAoBprB,IAAhBwqB,EAAUrqB,GAAmB8qB,IAAYT,EAAUrqB,EAAE2oB,QAAQzoB,OAAS,EAAG,CAE3E,IAAIirB,EAAa9qB,KAAK2qB,oBAAoBX,EAAUb,UAAWa,EAAUrqB,EAAE2oB,OAAQiB,EAAc,cAC9E/pB,IAAfsrB,GAA0Bf,EAAOhrB,KAAK+rB,GAI5C,QAAgCtrB,IAA5BwqB,EAAU/U,cAA6B,CAEzC,IAAI8V,EAAa/qB,KAAKgrB,mBAAmBhB,QACtBxqB,IAAfurB,GAA0BhB,EAAOhrB,KAAKgsB,GAI5C,OAAOhB,GAITY,oBAAqB,SAAUxB,EAAWb,EAAQ2C,EAAc5d,GAE9D,IAAIob,EAAQzoB,KAAKkrB,mBAAmB5C,GAChC/Y,EAASvP,KAAKmrB,uBAAuB1C,EAAOH,EAAQ2C,GAExD,OAAO,IAAI3jB,MAAM8jB,oBAAoBjC,EAAY,IAAM9b,EAAMob,EAAOlZ,IAItEsb,sBAAuB,SAAU1B,EAAWb,EAAQ2C,EAAcpP,EAAaI,EAAcT,QAE1Ehc,IAAb8oB,EAAO5Y,IAET1P,KAAKqrB,qBAAqB/C,EAAO5Y,GACjC4Y,EAAO5Y,EAAEH,OAAS+Y,EAAO5Y,EAAEH,OAAOkD,IAAInL,MAAMwS,KAAKG,gBAGlCza,IAAb8oB,EAAO3Y,IAET3P,KAAKqrB,qBAAqB/C,EAAO3Y,GACjC2Y,EAAO3Y,EAAEJ,OAAS+Y,EAAO3Y,EAAEJ,OAAOkD,IAAInL,MAAMwS,KAAKG,gBAGlCza,IAAb8oB,EAAOW,IAETjpB,KAAKqrB,qBAAqB/C,EAAOW,GACjCX,EAAOW,EAAE1Z,OAAS+Y,EAAOW,EAAE1Z,OAAOkD,IAAInL,MAAMwS,KAAKG,WAInD,IAAIwO,EAAQzoB,KAAKkrB,mBAAmB5C,GAChC/Y,EAASvP,KAAKmrB,uBAAuB1C,EAAOH,EAAQ2C,QAEpCzrB,IAAhBqc,KAEFA,EAAcA,EAAYpJ,IAAInL,MAAMwS,KAAKG,WAC7Blb,KAAKyc,GAEjBK,GAAc,IAAIvU,MAAMgjB,OAAQrZ,UAAU4K,GAC1CA,GAAc,IAAIvU,MAAM8iB,YAAakB,aAAazP,SAI/Brc,IAAjByc,KAEFA,EAAeA,EAAaxJ,IAAInL,MAAMwS,KAAKG,WAC9Blb,KAAKyc,GAElBS,GAAe,IAAI3U,MAAMgjB,OAAQrZ,UAAUgL,GAC3CA,GAAe,IAAI3U,MAAM8iB,YAAakB,aAAarP,GAAcsP,WASnE,IALA,IAAIC,EAAa,IAAIlkB,MAAM8iB,WACvBqB,EAAQ,IAAInkB,MAAMgjB,MAElBoB,KAEKxpB,EAAI,EAAGA,EAAIqN,EAAO1P,OAAQqC,GAAK,EAEtCupB,EAAMlmB,IAAIgK,EAAOrN,GAAIqN,EAAOrN,EAAI,GAAIqN,EAAOrN,EAAI,GAAIsZ,GAEnDgQ,EAAWF,aAAaG,QAEJjsB,IAAhBqc,GAA2B2P,EAAWG,YAAY9P,QACjCrc,IAAjByc,GAA4BuP,EAAWI,SAAS3P,GAEpDuP,EAAWrE,QAAQuE,EAAmBxpB,EAAI,EAAK,GAIjD,OAAO,IAAIoF,MAAMukB,wBAAwB1C,EAAY,cAAeV,EAAOiD,IAI7EV,mBAAoB,SAAUhB,GAE5B,IAAI1B,EAAS0B,EAAU/U,cAAcqT,OAAOkB,MACxCja,EAAS+Y,EAAO/Y,OAAOkD,IAAI,SAAU5O,GAEvC,OAAOA,EAAM,MAIXioB,EAAW3kB,EAAW4kB,gBAAgB/B,EAAUb,WAAW6C,sBAAsBhC,EAAUL,WAE/F,OAAO,IAAIriB,MAAM2kB,oBAAoBjC,EAAUb,UAAY,0BAA4B2C,EAAW,IAAKxD,EAAOG,MAAOlZ,IAMvH2b,mBAAoB,SAAU5C,GAE5B,IAAIG,KAkBJ,YAfiBjpB,IAAb8oB,EAAO5Y,IAAiB+Y,EAAQA,EAAMwB,OAAO3B,EAAO5Y,EAAE+Y,aACzCjpB,IAAb8oB,EAAO3Y,IAAiB8Y,EAAQA,EAAMwB,OAAO3B,EAAO3Y,EAAE8Y,aACzCjpB,IAAb8oB,EAAOW,IAAiBR,EAAQA,EAAMwB,OAAO3B,EAAOW,EAAER,QAG1DA,EAAQA,EAAMyD,KAAK,SAAUzlB,EAAGC,GAE9B,OAAOD,EAAIC,IAEV2O,OAAO,SAAU8W,EAAMjrB,EAAO4M,GAE/B,OAAOA,EAAM+B,QAAQsc,IAASjrB,KAQlCiqB,uBAAwB,SAAU1C,EAAOH,EAAQ2C,GAE/C,IAAImB,EAAYnB,EAEZ1b,KAEA8c,GAAU,EACVC,GAAU,EACVC,GAAU,EAgDd,OA9CA9D,EAAMnmB,QAAQ,SAAUsG,GAOtB,GALI0f,EAAO5Y,IAAG2c,EAAS/D,EAAO5Y,EAAE+Y,MAAM5Y,QAAQjH,IAC1C0f,EAAO3Y,IAAG2c,EAAShE,EAAO3Y,EAAE8Y,MAAM5Y,QAAQjH,IAC1C0f,EAAOW,IAAGsD,EAASjE,EAAOW,EAAER,MAAM5Y,QAAQjH,KAG9B,IAAZyjB,EAAe,CAEjB,IAAIG,EAASlE,EAAO5Y,EAAEH,OAAO8c,GAC7B9c,EAAOxQ,KAAKytB,GACZJ,EAAU,GAAKI,OAKfjd,EAAOxQ,KAAKqtB,EAAU,IAIxB,IAAgB,IAAZE,EAAe,CAEjB,IAAIG,EAASnE,EAAO3Y,EAAEJ,OAAO+c,GAC7B/c,EAAOxQ,KAAK0tB,GACZL,EAAU,GAAKK,OAIfld,EAAOxQ,KAAKqtB,EAAU,IAIxB,IAAgB,IAAZG,EAAe,CAEjB,IAAIG,EAASpE,EAAOW,EAAE1Z,OAAOgd,GAC7Bhd,EAAOxQ,KAAK2tB,GACZN,EAAU,GAAKM,OAIfnd,EAAOxQ,KAAKqtB,EAAU,MAMnB7c,GAOT8b,qBAAsB,SAAUsB,GAE9B,IAAK,IAAIzqB,EAAI,EAAGA,EAAIyqB,EAAMpd,OAAO1P,OAAQqC,IAAK,CAE5C,IAAI+oB,EAAe0B,EAAMpd,OAAOrN,EAAI,GAChC0qB,EAAaD,EAAMpd,OAAOrN,GAAK+oB,EAE/B4B,EAAe/S,KAAKgT,IAAIF,GAE5B,GAAIC,GAAgB,IAAK,CAevB,IAbA,IAAIE,EAAkBF,EAAe,IAEjCrsB,EAAOosB,EAAaG,EACpBC,EAAY/B,EAAezqB,EAE3BysB,EAAcN,EAAMlE,MAAMvmB,EAAI,GAE9BgrB,GADWP,EAAMlE,MAAMvmB,GAAK+qB,GACNF,EACtBI,EAAWF,EAAcC,EAEzBE,KACAC,KAEGF,EAAWR,EAAMlE,MAAMvmB,IAE5BkrB,EAAkBruB,KAAKouB,GACvBA,GAAYD,EAEZG,EAAmBtuB,KAAKiuB,GACxBA,GAAaxsB,EAIfmsB,EAAMlE,MAAQ6E,EAAOX,EAAMlE,MAAOvmB,EAAGkrB,GACrCT,EAAMpd,OAAS+d,EAAOX,EAAMpd,OAAQrN,EAAGmrB,OAc/CxlB,EAAWtI,WAETF,YAAawI,EAEb0lB,YAAa,WAEX,OAAOvtB,KAAKwtB,UAAUxtB,KAAKytB,cAAgB,IAI7CC,eAAgB,WAEd,OAAO1tB,KAAKwtB,UAAUxtB,KAAKytB,cAAgB,IAI7CE,eAAgB,WAEd,OAAO3tB,KAAK4tB,aAIdC,UAAW,SAAUxX,GAEnBrW,KAAKwtB,UAAUzuB,KAAKsX,GACpBrW,KAAKytB,eAAiB,GAIxBK,SAAU,WAER9tB,KAAKwtB,UAAUpgB,MACfpN,KAAKytB,eAAiB,GAIxBM,eAAgB,SAAUlqB,EAAK8K,GAE7B3O,KAAK4tB,YAAc/pB,EACnB7D,KAAKguB,gBAAkBrf,GAIzBhF,MAAO,SAAUpB,GAEfvI,KAAKytB,cAAgB,EAErBztB,KAAKiuB,SAAW,IAAI5lB,EACpBrI,KAAKwtB,aACLxtB,KAAK4tB,eACL5tB,KAAKguB,gBAAkB,GAEvB,IAAIhqB,EAAOhE,KAEPsG,EAAQiC,EAAKjC,MAAM,WAmCvB,OAjCAA,EAAMhE,QAAQ,SAAU4rB,EAAMhsB,GAE5B,IAAIisB,EAAeD,EAAK1lB,MAAM,aAC1B4lB,EAAaF,EAAK1lB,MAAM,aAE5B,IAAI2lB,IAAgBC,EAApB,CAEA,IAAIC,EAAiBH,EAAK1lB,MAAM,QAAUxE,EAAKypB,cAAgB,gBAAiB,IAC5Ea,EAAgBJ,EAAK1lB,MAAM,QAAWxE,EAAKypB,cAAiB,8BAC5Dc,EAAWL,EAAK1lB,MAAM,SAAWxE,EAAKypB,cAAgB,GAAK,MAE3DY,EAEFrqB,EAAKwqB,eAAeN,EAAMG,GAEjBC,EAETtqB,EAAKyqB,kBAAkBP,EAAMI,EAAehoB,IAAQpE,IAE3CqsB,EAETvqB,EAAK8pB,WAEII,EAAK1lB,MAAM,cAIpBxE,EAAK0qB,2BAA2BR,MAM7BluB,KAAKiuB,UAIdO,eAAgB,SAAUN,EAAMS,GAE9B,IAAIC,EAAWD,EAAS,GAAGE,OAAOC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAE9DC,EAAYJ,EAAS,GAAGroB,MAAM,KAAKmM,IAAI,SAAUoF,GAEnD,OAAOA,EAAKgX,OAAOC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,MAIjDzY,GAAQ1H,KAAMigB,GACdI,EAAQhvB,KAAKivB,cAAcF,GAE3BG,EAAclvB,KAAK0tB,iBAGI,IAAvB1tB,KAAKytB,cAEPztB,KAAKiuB,SAASjY,IAAI4Y,EAAUvY,GAKxBuY,KAAYM,GAGG,aAAbN,EAEFM,EAAYxR,SAAS3e,KAAKsX,QAEY7W,IAA7B0vB,EAAYN,GAAUliB,KAE/BwiB,EAAYN,MACZM,EAAYN,GAAUM,EAAYN,GAAUliB,IAAMwiB,EAAYN,IAI/C,KAAbI,EAAMtiB,KAAWwiB,EAAYN,GAAUI,EAAMtiB,IAAM2J,IAE1B,iBAAb2Y,EAAMtiB,IAEtBwiB,EAAYN,MACZM,EAAYN,GAAUI,EAAMtiB,IAAM2J,GAEZ,iBAAbuY,IAEoBM,EAAYN,GAAxB,aAAbA,GAAkDvY,GACzBA,GAMT,iBAAb2Y,EAAMtiB,KAAiB2J,EAAK3J,GAAKsiB,EAAMtiB,IAC/B,KAAfsiB,EAAMrgB,OAAa0H,EAAKzH,SAAWogB,EAAMrgB,MAC1B,KAAfqgB,EAAM3hB,OAAagJ,EAAK3C,SAAWsb,EAAM3hB,MAE7CrN,KAAK6tB,UAAUxX,IAIjB4Y,cAAe,SAAUD,GAEvB,IAAItiB,EAAKsiB,EAAM,GAEE,KAAbA,EAAM,KAERtiB,EAAKjE,SAASumB,EAAM,IAEhB5I,MAAM1Z,KAERA,EAAKsiB,EAAM,KAMf,IAAIrgB,EAAO,GAAItB,EAAO,GAStB,OAPI2hB,EAAMnvB,OAAS,IAEjB8O,EAAOqgB,EAAM,GAAGF,QAAQ,WAAY,IACpCzhB,EAAO2hB,EAAM,KAIPtiB,GAAIA,EAAIiC,KAAMA,EAAMtB,KAAMA,IAIpCohB,kBAAmB,SAAUP,EAAMS,EAAUQ,GAE3C,IAAIC,EAAWT,EAAS,GAAGG,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAID,OAC3DQ,EAAYV,EAAS,GAAGG,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAID,OAK/C,YAAbO,GAAwC,MAAdC,IAE5BA,EAAYF,EAAYL,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAID,QAI9D,IAAIK,EAAclvB,KAAK0tB,iBAGvB,GAAmB,iBAFFwB,EAAYvgB,KAE7B,CAQA,GAAiB,MAAbygB,EAAkB,CAEpB,IAAIE,EAAYD,EAAU/oB,MAAM,KAAKgE,MAAM,GACvClG,EAAOqE,SAAS6mB,EAAU,IAC1BC,EAAK9mB,SAAS6mB,EAAU,IAExBE,EAAOH,EAAU/oB,MAAM,KAAKgE,MAAM,GAQtC8kB,EAAW,cAi8BjB,SAAgB3oB,EAAGC,GAEjB,IAAK,IAAIxE,EAAI,EAAGsgB,EAAI/b,EAAE5G,OAAQgnB,EAAIngB,EAAE7G,OAAQqC,EAAI2kB,EAAG3kB,IAAKsgB,IAEtD/b,EAAE+b,GAAK9b,EAAExE,GAn8BPutB,CADAJ,GAAajrB,EAAMmrB,GAPnBC,EAAOA,EAAK/c,IAAI,SAAU0Z,GAExB,OAAOA,EAAK0C,OAAOC,QAAQ,KAAM,YAQLtvB,IAA1B0vB,EAAYE,KAEdF,EAAYE,OAOC,SAAbA,IAAqBF,EAAYxiB,GAAK2iB,GAGtCD,KAAYF,GAAe5vB,MAAML,QAAQiwB,EAAYE,IAEvDF,EAAYE,GAAUrwB,KAAKswB,GAIV,MAAbD,EAAkBF,EAAYE,GAAYC,EACzCH,EAAYzoB,EAAI4oB,EAIvBrvB,KAAK+tB,eAAemB,EAAaE,GAGhB,MAAbA,GAA4C,MAAxBC,EAAU/kB,OAAO,KAEvC4kB,EAAYzoB,EAAIipB,EAAiBL,SApDjCrvB,KAAK2vB,yBAAyBzB,EAAMkB,EAAUC,IA0DlDX,2BAA4B,SAAUR,GAEpC,IAAIgB,EAAclvB,KAAK0tB,iBAEvBwB,EAAYzoB,GAAKynB,EAIM,MAAnBA,EAAK5jB,OAAO,KAEd4kB,EAAYzoB,EAAIipB,EAAiBR,EAAYzoB,KAOjDkpB,yBAA0B,SAAUzB,EAAMkB,EAAUC,GAMlD,IAAIO,EAAQP,EAAU/oB,MAAM,MAAMmM,IAAI,SAAUod,GAE9C,OAAOA,EAAKhB,OAAOC,QAAQ,MAAO,IAAIA,QAAQ,KAAM,OAIlDgB,EAAgBF,EAAM,GACtBG,EAAiBH,EAAM,GACvBI,EAAiBJ,EAAM,GACvBK,EAAgBL,EAAM,GACtBM,EAAiBN,EAAM,GAG3B,OAAQG,GAEN,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,cACHG,EAAiBxe,WAAWwe,GAC5B,MAEF,IAAK,QACL,IAAK,WACL,IAAK,WACL,IAAK,kBACL,IAAK,eACL,IAAK,cACHA,EAAiBR,EAAiBQ,GAMtClwB,KAAKutB,cAAcuC,IAEjBziB,KAAQ0iB,EACRI,MAASH,EACTI,KAAQH,EACRrtB,MAASstB,GAIXlwB,KAAK+tB,eAAe/tB,KAAKutB,cAAeuC,KAU5ChoB,EAAavI,WAEXF,YAAayI,EAEb6B,MAAO,SAAU3B,GAEf,IAAIqoB,EAAS,IAAItoB,EAAaC,GAC9BqoB,EAAOC,KAAK,IAEZ,IAAIC,EAAUF,EAAOG,YAErB5iB,QAAQ6iB,IAAI,wCAA0CF,GAItD,IAFA,IAAItC,EAAW,IAAI5lB,GAEXrI,KAAK0wB,aAAaL,IAAS,CAEjC,IAAIha,EAAOrW,KAAK2wB,UAAUN,EAAQE,GACrB,OAATla,GAAe4X,EAASjY,IAAIK,EAAK1H,KAAM0H,GAI7C,OAAO4X,GAKTyC,aAAc,SAAUL,GAUtB,OAAIA,EAAO1pB,OAAS,IAAO,GAEhB0pB,EAAOO,YAAc,IAAM,IAAM,KAASP,EAAO1pB,OAInD0pB,EAAOO,YAAc,IAAM,IAAMP,EAAO1pB,QAOnDgqB,UAAW,SAAUN,EAAQE,GAE3B,IAAIla,KAGAwa,EAAaN,GAAW,KAAQF,EAAOS,YAAcT,EAAOG,YAC5DO,EAAiBR,GAAW,KAAQF,EAAOS,YAAcT,EAAOG,YAKhEQ,GAFmBT,GAAW,KAAQF,EAAOS,YAAcT,EAAOG,YAExDH,EAAOY,YACjBtiB,EAAO0hB,EAAOa,UAAUF,GAG5B,GAAkB,IAAdH,EAAiB,OAAO,KAI5B,IAFA,IAAIM,KAEKjvB,EAAI,EAAGA,EAAI6uB,EAAe7uB,IAEjCivB,EAAapyB,KAAKiB,KAAKoxB,cAAcf,IAKvC,IAAI3jB,EAAKykB,EAAatxB,OAAS,EAAIsxB,EAAa,GAAK,GACjDviB,EAAWuiB,EAAatxB,OAAS,EAAIsxB,EAAa,GAAK,GACvDzd,EAAWyd,EAAatxB,OAAS,EAAIsxB,EAAa,GAAK,GAM3D,IAFA9a,EAAKgb,eAAoC,IAAlBN,GAAuBV,EAAOO,cAAgBC,EAE9DA,EAAYR,EAAOO,aAAa,CAErC,IAAIU,EAAUtxB,KAAK2wB,UAAUN,EAAQE,GAErB,OAAZe,GAAkBtxB,KAAKuxB,aAAa5iB,EAAM0H,EAAMib,GAWtD,OAPAjb,EAAK8a,aAAeA,EAEF,iBAAPzkB,IAAiB2J,EAAK3J,GAAKA,GACrB,KAAbkC,IAAiByH,EAAKzH,SAAWA,GACpB,KAAb8E,IAAiB2C,EAAK3C,SAAWA,GACxB,KAAT/E,IAAa0H,EAAK1H,KAAOA,GAEtB0H,GAITkb,aAAc,SAAU5iB,EAAM0H,EAAMib,GAGlC,IAA+B,IAA3BA,EAAQD,eAAyB,CAEnC,IAAIzuB,EAAQ0uB,EAAQH,aAAa,GAE7B7xB,MAAML,QAAQ2D,IAEhByT,EAAKib,EAAQ3iB,MAAQ2iB,EAErBA,EAAQ7qB,EAAI7D,GAIZyT,EAAKib,EAAQ3iB,MAAQ/L,OAIlB,GAAa,gBAAT+L,GAA2C,MAAjB2iB,EAAQ3iB,KAAc,CAEzD,IAAIb,KAEJwjB,EAAQH,aAAa7uB,QAAQ,SAAUqsB,EAAUzsB,GAGrC,IAANA,GAAS4L,EAAM/O,KAAK4vB,UAIDnvB,IAArB6W,EAAKnP,cAEPmP,EAAKnP,gBAIPmP,EAAKnP,YAAYnI,KAAK+O,QAEjB,GAAqB,iBAAjBwjB,EAAQ3iB,KAAyB,CAE/B8b,IAAY6G,GAElBhvB,QAAQ,SAAUtB,GAErBqV,EAAKrV,GAAOswB,EAAQtwB,UAIjB,GAAa,iBAAT2N,GAA4C,MAAjB2iB,EAAQ3iB,KAAc,CAE1D,IAIIuhB,EAJAJ,EAAgBwB,EAAQH,aAAa,GACrCpB,EAAiBuB,EAAQH,aAAa,GACtCnB,EAAiBsB,EAAQH,aAAa,GACtClB,EAAgBqB,EAAQH,aAAa,GAGH,IAAlCrB,EAAcjgB,QAAQ,UAAeigB,EAAgBA,EAAchB,QAAQ,OAAQ,SAChD,IAAnCiB,EAAelgB,QAAQ,UAAekgB,EAAiBA,EAAejB,QAAQ,OAAQ,SAIxFoB,EAFqB,UAAnBH,GAAiD,aAAnBA,GAAoD,WAAnBA,GAAkD,aAAnBA,GAAoE,IAAnCA,EAAelgB,QAAQ,SAGtJyhB,EAAQH,aAAa,GACrBG,EAAQH,aAAa,GACrBG,EAAQH,aAAa,IAKNG,EAAQH,aAAa,GAKxC9a,EAAKyZ,IAEHziB,KAAQ0iB,EACRI,MAASH,EACTI,KAAQH,EACRrtB,MAASstB,aAIqB1wB,IAAvB6W,EAAKib,EAAQ3iB,MAEI,iBAAf2iB,EAAQ5kB,IAEjB2J,EAAKib,EAAQ3iB,SACb0H,EAAKib,EAAQ3iB,MAAM2iB,EAAQ5kB,IAAM4kB,GAIjCjb,EAAKib,EAAQ3iB,MAAQ2iB,EAMF,aAAjBA,EAAQ3iB,MAELrP,MAAML,QAAQoX,EAAKib,EAAQ3iB,SAE9B0H,EAAKib,EAAQ3iB,OAAS0H,EAAKib,EAAQ3iB,QAIrC0H,EAAKib,EAAQ3iB,MAAM5P,KAAKuyB,SAEoB9xB,IAAnC6W,EAAKib,EAAQ3iB,MAAM2iB,EAAQ5kB,MAEpC2J,EAAKib,EAAQ3iB,MAAM2iB,EAAQ5kB,IAAM4kB,IAQvCF,cAAe,SAAUf,GAEvB,IAAIhjB,EAAOgjB,EAAOa,UAAU,GAE5B,OAAQ7jB,GAEN,IAAK,IACH,OAAOgjB,EAAOmB,aAEhB,IAAK,IACH,OAAOnB,EAAOoB,aAEhB,IAAK,IACH,OAAOpB,EAAOqB,aAEhB,IAAK,IACH,OAAOrB,EAAOsB,WAEhB,IAAK,IACH,OAAOtB,EAAOuB,WAEhB,IAAK,IACH,IAAI/xB,EAASwwB,EAAOG,YACpB,OAAOH,EAAOwB,eAAehyB,GAE/B,IAAK,IACCA,EAASwwB,EAAOG,YACpB,OAAOH,EAAOa,UAAUrxB,GAE1B,IAAK,IACH,OAAOwwB,EAAOyB,WAEhB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,IAAIC,EAAc1B,EAAOG,YACrB9d,EAAW2d,EAAOG,YAClBwB,EAAmB3B,EAAOG,YAE9B,GAAiB,IAAb9d,EAEF,OAAQrF,GAEN,IAAK,IACL,IAAK,IACH,OAAOgjB,EAAO4B,gBAAgBF,GAEhC,IAAK,IACH,OAAO1B,EAAO6B,gBAAgBH,GAEhC,IAAK,IACH,OAAO1B,EAAO8B,gBAAgBJ,GAEhC,IAAK,IACH,OAAO1B,EAAO+B,cAAcL,GAE9B,IAAK,IACH,OAAO1B,EAAOgC,cAAcN,QAMR,IAAfzqB,MAAMgrB,MAEf1kB,QAAQhE,MAAM,qHAIhB,IACI2oB,EAAU,IAAIxqB,EADJ,IAAIT,MAAMgrB,KAAKE,QAAQ,IAAIzkB,WAAWsiB,EAAOwB,eAAeG,KACnCS,aAAazqB,QAEpD,OAAQqF,GAEN,IAAK,IACL,IAAK,IACH,OAAOklB,EAAQN,gBAAgBF,GAEjC,IAAK,IACH,OAAOQ,EAAQL,gBAAgBH,GAEjC,IAAK,IACH,OAAOQ,EAAQJ,gBAAgBJ,GAEjC,IAAK,IACH,OAAOQ,EAAQH,cAAcL,GAE/B,IAAK,IACH,OAAOQ,EAAQF,cAAcN,GAInC,QACE,MAAM,IAAIrpB,MAAM,0CAA4C2E,MAgBpEtF,EAAaxI,WAEXF,YAAa0I,EAEb6oB,UAAW,WAET,OAAO5wB,KAAKoI,QAIdzB,KAAM,WAEJ,OAAO3G,KAAKkI,GAAGF,OAAOiC,YAIxBqmB,KAAM,SAAUzwB,GAEdG,KAAKoI,QAAUvI,GAOjB2xB,WAAY,WAEV,OAAiC,IAAP,EAAlBxxB,KAAKixB,aAIfgB,gBAAiB,SAAUtrB,GAIzB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAE1H,KAAKiB,KAAKwxB,cAId,OAAO/qB,GAITwqB,SAAU,WAER,IAAIruB,EAAQ5C,KAAKkI,GAAG+oB,SAASjxB,KAAKoI,QAElC,OADApI,KAAKoI,QAAU,EACRxF,GAITkvB,SAAU,WAER,IAAIlvB,EAAQ5C,KAAKkI,GAAG4pB,SAAS9xB,KAAKoI,OAAQpI,KAAKiI,cAE/C,OADAjI,KAAKoI,QAAU,EACRxF,GAIT+uB,SAAU,WAER,IAAI/uB,EAAQ5C,KAAKkI,GAAGypB,SAAS3xB,KAAKoI,OAAQpI,KAAKiI,cAE/C,OADAjI,KAAKoI,QAAU,EACRxF,GAITwvB,cAAe,SAAUzrB,GAIvB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAE1H,KAAKiB,KAAK2xB,YAId,OAAOlrB,GAIT+pB,UAAW,WAET,IAAI5tB,EAAQ5C,KAAKkI,GAAGsoB,UAAUxwB,KAAKoI,OAAQpI,KAAKiI,cAEhD,OADAjI,KAAKoI,QAAU,EACRxF,GASTgvB,SAAU,WAER,IAAIc,EAAKC,EAeT,OAbI3yB,KAAKiI,cAEPyqB,EAAM1yB,KAAKwwB,YACXmC,EAAO3yB,KAAKwwB,cAIZmC,EAAO3yB,KAAKwwB,YACZkC,EAAM1yB,KAAKwwB,aAKF,WAAPmC,GAEFA,EAAe,YAAPA,EAGI,cAFZD,EAAa,YAANA,KAEiBC,EAAQA,EAAO,EAAK,cAI5B,WAAPA,GAFTD,EAAOA,EAAM,EAAK,cAMN,WAAPC,EAAqBD,GAI9BL,cAAe,SAAU1rB,GAIvB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAE1H,KAAKiB,KAAK4xB,YAId,OAAOnrB,GAKTqqB,UAAW,WAET,IAAI4B,EAAKC,EAcT,OAZI3yB,KAAKiI,cAEPyqB,EAAM1yB,KAAKwwB,YACXmC,EAAO3yB,KAAKwwB,cAIZmC,EAAO3yB,KAAKwwB,YACZkC,EAAM1yB,KAAKwwB,aAIC,WAAPmC,EAAqBD,GAI9BhB,WAAY,WAEV,IAAI9uB,EAAQ5C,KAAKkI,GAAGwpB,WAAW1xB,KAAKoI,OAAQpI,KAAKiI,cAEjD,OADAjI,KAAKoI,QAAU,EACRxF,GAITuvB,gBAAiB,SAAUxrB,GAIzB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAE1H,KAAKiB,KAAK0xB,cAId,OAAOjrB,GAITgrB,WAAY,WAEV,IAAI7uB,EAAQ5C,KAAKkI,GAAGupB,WAAWzxB,KAAKoI,OAAQpI,KAAKiI,cAEjD,OADAjI,KAAKoI,QAAU,EACRxF,GAITsvB,gBAAiB,SAAUvrB,GAIzB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAE1H,KAAKiB,KAAKyxB,cAId,OAAOhrB,GAITorB,eAAgB,SAAUlrB,GAExB,IAAI/D,EAAQ5C,KAAKkI,GAAGF,OAAOsC,MAAMtK,KAAKoI,OAAQpI,KAAKoI,OAASzB,GAE5D,OADA3G,KAAKoI,QAAUzB,EACR/D,GAITsuB,UAAW,SAAUvqB,GAKnB,IAFA,IAAIF,KAEKvE,EAAI,EAAGA,EAAIyE,EAAMzE,IAExBuE,EAAEvE,GAAKlC,KAAKixB,WAId,IAAI2B,EAAWnsB,EAAEoJ,QAAQ,GAGzB,OAFI+iB,GAAY,IAAGnsB,EAAIA,EAAE6D,MAAM,EAAGsoB,IAE3BtrB,MAAM+B,YAAYwpB,WAAW,IAAI9kB,WAAWtH,MAWvD4B,EAAQ9I,WAENF,YAAagJ,EAEb2N,IAAK,SAAUhV,EAAK6C,GAElB7D,KAAKgB,GAAO6C,IAmEhB,IAAIivB,KAGJ,SAASvP,EAAQH,EAAoBV,EAAcS,EAAa4P,GAE9D,IAAI7xB,EAEJ,OAAQ6xB,EAAWjS,aAEjB,IAAK,kBACH5f,EAAQkiB,EACR,MACF,IAAK,YACHliB,EAAQwhB,EACR,MACF,IAAK,YACHxhB,EAAQiiB,EACR,MACF,IAAK,UACHjiB,EAAQ6xB,EAAW1e,QAAQ,GAC3B,MACF,QACEzG,QAAQC,KAAK,mDAAqDklB,EAAWjS,aAIhD,kBAA7BiS,EAAW/N,gBAAmC9jB,EAAQ6xB,EAAW1e,QAAQnT,IAE7E,IAAIkD,EAAOlD,EAAQ6xB,EAAWzN,SAC1BiK,EAAKnrB,EAAO2uB,EAAWzN,SAE3B,OA8KF,SAAe7e,EAAGC,EAAGtC,EAAMmrB,GAEzB,IAAK,IAAIrtB,EAAIkC,EAAMoe,EAAI,EAAGtgB,EAAIqtB,EAAIrtB,IAAKsgB,IAErC/b,EAAE+b,GAAK9b,EAAExE,GAIX,OAAOuE,EAtLA6D,CAAMwoB,EAAWC,EAAW/qB,OAAQ5D,EAAMmrB,GAInD,IAAIyD,EAAY,IAAI1rB,MAAMgjB,MACtB2I,EAAU,IAAI3rB,MAAM2V,QAKxB,SAAStG,EAAkBJ,GAEzB,IAoCMzI,EApCFolB,EAAgB,IAAI5rB,MAAMkN,QAC1B2e,EAAgB,IAAI7rB,MAAMkN,QAC1B4e,EAAa,IAAI9rB,MAAMkN,QACvB6e,EAAiB,IAAI/rB,MAAMkN,QAE3B8e,EAAY,IAAIhsB,MAAMkN,QACtB+e,EAAiB,IAAIjsB,MAAMkN,QAC3Bgf,EAAkB,IAAIlsB,MAAMkN,QAC5Bif,EAAmB,IAAInsB,MAAMkN,QAC7Bkf,EAAkB,IAAIpsB,MAAMkN,QAE5Bmf,EAAY,IAAIrsB,MAAMkN,QACtBof,EAAW,IAAItsB,MAAMkN,QAErB8G,EAAe/E,EAAc+E,YAAe/E,EAAc+E,YAAc,GAExE/E,EAAcoF,aAAauX,EAAcW,YAAYZ,EAAQhiB,UAAUsF,EAAcoF,cAErFpF,EAAcsF,gBAEZ/N,EAAQyI,EAAcsF,YAAYpJ,IAAInL,MAAMwS,KAAKG,WAC/Clb,KAAKwX,EAAciF,YACzB2X,EAAcW,sBAAsBd,EAAU/hB,UAAUnD,KAItDyI,EAAcwF,YAEZjO,EAAQyI,EAAcwF,SAAStJ,IAAInL,MAAMwS,KAAKG,WAC5Clb,KAAKwX,EAAciF,YACzB4X,EAAWU,sBAAsBd,EAAU/hB,UAAUnD,KAInDyI,EAAc0F,gBAEZnO,EAAQyI,EAAc0F,aAAaxJ,IAAInL,MAAMwS,KAAKG,WAChDlb,KAAKwX,EAAciF,YACzB6X,EAAeS,sBAAsBd,EAAU/hB,UAAUnD,KAIvDyI,EAAc4F,OAAOmX,EAAUnX,MAAM8W,EAAQhiB,UAAUsF,EAAc4F,QAGrE5F,EAAc8F,eAAemX,EAAgBK,YAAYZ,EAAQhiB,UAAUsF,EAAc8F,gBACzF9F,EAAcgG,cAAcgX,EAAeM,YAAYZ,EAAQhiB,UAAUsF,EAAcgG,eACvFhG,EAAckG,gBAAgBgX,EAAiBI,YAAYZ,EAAQhiB,UAAUsF,EAAckG,iBAC3FlG,EAAcoG,eAAe+W,EAAgBG,YAAYZ,EAAQhiB,UAAUsF,EAAcoG,gBAGzFpG,EAAcC,oBAAmBmd,EAAYpd,EAAcC,mBAG/D,IAAIud,EAAOZ,EAAcvH,SAASwH,GAAYxH,SAASyH,GACnDW,EAAa,IAAI1sB,MAAMkN,QAC3Bmf,EAAUM,gBAAgBD,GAG1B,IACIE,EACAC,EACAC,EAOAC,EAVAC,EAAY,IAAIhtB,MAAMkN,QAW1B,GANA8f,EAAUC,aAAaZ,GACvBS,EAAcE,EAAUE,WAAWF,GAAW1I,SAAS+H,GACvDQ,EAAaH,EAAWQ,WAAWR,GAAYpI,SAASwI,GACxDF,EAAOZ,EAGa,IAAhBhY,EAEF+Y,EAAYL,EAAWpI,SAASmI,GAAMnI,SAASuI,GAAYvI,SAASsI,QAE/D,GAAoB,IAAhB5Y,EAET+Y,EAAYL,EAAWpI,SAASuI,GAAYvI,SAASmI,GAAMnI,SAASsI,OAE/D,CAEL,IAAIO,GAAa,IAAIntB,MAAMkN,SAAUmD,KAAK2b,GAEtCoB,EAAqBP,EAAWvI,SAAS6I,EAAWD,WAAWC,IAEnEJ,EAAYL,EAAWpI,SAASmI,GAAMnI,SAAS8I,GAAoB9I,SAASsI,GAK9E,IAAIS,EAAazB,EAActH,SAAS6H,GAAkB7H,SAAS8H,GAAiB9H,SAASuH,GAAevH,SAASwH,GAAYxH,SAASyH,GAAgBzH,SAAS8H,EAAgBc,WAAWd,IAAkB9H,SAAS4H,GAAiB5H,SAAS2H,GAAgB3H,SAAS0H,GAAW1H,SAAS2H,EAAeiB,WAAWjB,IAEtTqB,GAAmC,IAAIttB,MAAMkN,SAAU+f,aAAaI,GAEpEE,EAAqBlB,EAAU/H,SAASgJ,GAK5C,OAJAhB,EAASW,aAAaM,GAEtBF,EAAaf,EAAShI,SAASyI,GAQjC,SAAS5Y,EAAcyK,GAIrB,IAAI4O,GACF,MACA,MACA,MACA,MACA,MACA,OAIF,OAAc,KAZd5O,EAAQA,GAAS,IAcftY,QAAQC,KAAK,uGACNinB,EAAM,IAIRA,EAAM5O,GAMf,SAASwJ,EAAiB9sB,GAQxB,OANYA,EAAM0D,MAAM,KAAKmM,IAAI,SAAU5O,GAEzC,OAAO6N,WAAW7N,KAQtB,SAASqG,EAA2BlC,EAAQ5D,EAAMmrB,GAKhD,YAHa/vB,IAAT4E,IAAoBA,EAAO,QACpB5E,IAAP+vB,IAAkBA,EAAKvnB,EAAOiC,YAE3B3C,MAAM+B,YAAYwpB,WAAW,IAAI9kB,WAAW/F,EAAQ5D,EAAMmrB,IA2BnE,SAASjC,EAAOyH,EAAI7zB,EAAO8zB,GAEzB,OAAOD,EAAGzqB,MAAM,EAAGpJ,GAAO+oB,OAAO+K,GAAI/K,OAAO8K,EAAGzqB,MAAMpJ,IAIvD,OAAOkG,EA//HX,2BCbA6tB,uBAAA,WAGA,SAAAA,EAAA5tB,GAEAC,MAAAC,OAAAC,KAAAxH,KAAAqH,GAEArH,KAAAk1B,YAAA,KACAl1B,KAAAm1B,UAAA,KAIAF,EAAA11B,UAAAyF,OAAAowB,OAAApwB,OAAA7E,OAAAmH,MAAAC,OAAAhI,YAEAF,YAAA41B,EAEAlsB,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAEAuB,EAFA2qB,EAAAr1B,KAMA0K,EAFA,KAAA1K,KAAA0K,aAEA1K,KAAA0K,aAEI,KAAA1K,KAAAoJ,KAEJpJ,KAAAoJ,KAIA9B,MAAA+B,YAAAC,eAAAN,GAOAqsB,EAAAhuB,QAAAiuB,UAAAtsB,GAEA,IAAAusB,EAAA,SAAAC,GAEArsB,EAEAA,EAAAqsB,GAIA5nB,QAAAhE,MAAA4rB,GAIAH,EAAAhuB,QAAAyC,UAAAd,GACAqsB,EAAAhuB,QAAAouB,QAAAzsB,IAIAO,EAAA,IAAAjC,MAAAkC,WAAA6rB,EAAAhuB,SAEAkC,EAAAE,QAAAzJ,KAAAoJ,MACAG,EAAAG,gBAAA,eAEA,oBAAA2rB,EAAAzqB,aAEArB,EAAAmsB,oBAAA,GAIAnsB,EAAAR,KAAAC,EAAA,SAAAhH,GAEA,IAEAqzB,EAAA1rB,MAAA3H,EAAA0I,EAAA,SAAAirB,GAEA1sB,EAAA0sB,GAEAN,EAAAhuB,QAAAouB,QAAAzsB,IAEMusB,GAED,MAAAC,GAELD,EAAAC,KAIItsB,EAAAqsB,IAIJK,eAAA,SAAAV,GAGA,OADAl1B,KAAAk1B,cACAl1B,MAIA61B,aAAA,SAAAV,GAGA,OADAn1B,KAAAm1B,YACAn1B,MAIA2J,MAAA,SAAA3H,EAAAoH,EAAAH,EAAAE,GAEA,IAAAmE,EACAwoB,KAEA,oBAAA9zB,EAEAsL,EAAAtL,OAMA,GAFAsF,MAAA+B,YAAAwpB,WAAA,IAAA9kB,WAAA/L,EAAA,QAEA+zB,EAAA,CAEA,IAEAD,EAAAE,EAAAC,iBAAA,IA8RA,SAAAj0B,GAEAhC,KAAA2O,KAAAqnB,EAAAC,gBACAj2B,KAAAsN,QAAA,KACAtN,KAAAk2B,KAAA,KAEA,IAAAC,EAAA,IAAAhuB,SAAAnG,EAAA,EAAAo0B,GAQA,GANAp2B,KAAAq2B,QACAC,MAAAhvB,MAAA+B,YAAAwpB,WAAA,IAAA9kB,WAAA/L,EAAAsI,MAAA,OACAimB,QAAA4F,EAAA3F,UAAA,MACA3wB,OAAAs2B,EAAA3F,UAAA,OAGAxwB,KAAAq2B,OAAAC,QAAAP,EAEA,UAAArtB,MAAA,qDAEG,GAAA1I,KAAAq2B,OAAA9F,QAAA,EAEH,UAAA7nB,MAAA,kDAIA,IAAA6tB,EAAA,IAAApuB,SAAAnG,EAAAo0B,GACAI,EAAA,EAEA,KAAAA,EAAAD,EAAAtsB,YAAA,CAEA,IAAAwsB,EAAAF,EAAA/F,UAAAgG,GAAA,GACAA,GAAA,EAEA,IAAAE,EAAAH,EAAA/F,UAAAgG,GAAA,GAGA,GAFAA,GAAA,EAEAE,IAAAC,EAAAC,KAAA,CAEA,IAAAC,EAAA,IAAA9oB,WAAA/L,EAAAo0B,EAAAI,EAAAC,GACAz2B,KAAAsN,QAAAhG,MAAA+B,YAAAwpB,WAAAgE,QAEI,GAAAH,IAAAC,EAAAG,IAAA,CAEJ,IAAAC,EAAAX,EAAAI,EACAx2B,KAAAk2B,KAAAl0B,EAAAsI,MAAAysB,IAAAN,GAMAD,GAAAC,EAIA,UAAAz2B,KAAAsN,QAEA,UAAA5E,MAAA,6CArVA,CAAA1G,GAEM,MAAA4H,GAGN,YADAT,KAAAS,IAKA0D,EAAAwoB,EAAAE,EAAAC,iBAAA3oB,aAIAA,EAAAhG,MAAA+B,YAAAwpB,WAAA,IAAA9kB,WAAA/L,IAMA,IAAAg1B,EAAAJ,KAAAjtB,MAAA2D,GAEA,QAAA9N,IAAAw3B,EAAAC,OAAAD,EAAAC,MAAA1G,QAAA,KAEApnB,KAAA,IAAAT,MAAA,gFAFA,CAOA,GAAAsuB,EAAAE,eAEA,QAAAh1B,EAAA,EAAoBA,EAAA80B,EAAAE,eAAAr3B,SAAgCqC,EAAA,CAEpD,IAAAi1B,EAAAH,EAAAE,eAAAh1B,GACAk1B,EAAAJ,EAAAI,uBAEA,OAAAD,GAEA,KAAAnB,EAAAqB,oBACAvB,EAAAqB,GAAA,IAAAG,EAAAN,GACA,MAEA,KAAAhB,EAAAuB,oBACAzB,EAAAqB,GAAA,IAAAK,EACA,MAEA,KAAAxB,EAAAyB,sCACA3B,EAAAqB,GAAA,IAAAO,EACA,MAEA,KAAA1B,EAAA2B,2BACA7B,EAAAqB,GAAA,IAAAS,EAAAZ,EAAAh3B,KAAAk1B,aACA,MAEA,KAAAc,EAAA6B,iBACA/B,EAAAqB,GAAA,IAAAW,EAAA93B,KAAAm1B,WACA,MAEA,KAAAa,EAAA+B,sBACAjC,EAAAqB,GAAA,IAAAa,EACA,MAEA,KAAAhC,EAAAiC,sBACAnC,EAAAqB,GAAA,IAAAe,EACA,MAEA,QAEAd,EAAAvnB,QAAAsnB,IAAA,GAEAvpB,QAAAC,KAAA,wCAAAspB,EAAA,OAUA,IAAAgB,EAAAnB,EAAAlB,GAEA1sB,QAAApJ,KAAA0K,cAAA,GACAE,YAAA5K,KAAA4K,YACAvD,QAAArH,KAAAqH,UAIAsC,MAAAV,EAAAE,OA8CA,IAAA6sB,GACAC,gBAAA,kBACA0B,2BAAA,6BACAN,oBAAA,sBACAI,sCAAA,sCACAF,oBAAA,sBACAQ,sBAAA,wBACAE,sBAAA,wBACAJ,iBAAA,oBASA,SAAAC,EAAA3C,GAEA,IAAAA,EAEA,UAAAzsB,MAAA,uFAIA1I,KAAA2O,KAAAqnB,EAAA6B,iBACA73B,KAAAm1B,YASA,SAAAmC,EAAAN,GAEAh3B,KAAA2O,KAAAqnB,EAAAqB,oBAEA,IAAA7pB,EAAAwpB,EAAAlB,YAAAkB,EAAAlB,WAAAE,EAAAqB,yBACAr3B,KAAAo4B,UAAA5qB,EAAA6qB,WAgEA,SAAAb,IAEAx3B,KAAA2O,KAAAqnB,EAAAuB,oBA9DAD,EAAA/3B,UAAA+4B,UAAA,SAAAC,GAEA,IACAC,EADAC,EAAAz4B,KAAAo4B,UAAAG,GAGAxnB,EAAA,IAAAzJ,MAAA0J,MAAA,eACAxR,IAAAi5B,EAAA1nB,SAAAE,UAAAwnB,EAAA1nB,OAEA,IAAA2nB,OAAAl5B,IAAAi5B,EAAAC,MAAAD,EAAAC,MAAA,EAEA,OAAAD,EAAAprB,MAEA,mBACAmrB,EAAA,IAAAlxB,MAAAsS,iBAAA7I,IACA3K,OAAA2W,SAAAxX,IAAA,QACAizB,EAAAxiB,IAAAwiB,EAAApyB,QACA,MAEA,aACAoyB,EAAA,IAAAlxB,MAAAqS,WAAA5I,IACAyI,SAAAkf,EACA,MAEA,YACAF,EAAA,IAAAlxB,MAAA+S,UAAAtJ,IACAyI,SAAAkf,EAEAD,EAAAE,KAAAF,EAAAE,SACAF,EAAAE,KAAAC,oBAAAp5B,IAAAi5B,EAAAE,KAAAC,eAAAH,EAAAE,KAAAC,eAAA,EACAH,EAAAE,KAAAE,oBAAAr5B,IAAAi5B,EAAAE,KAAAE,eAAAJ,EAAAE,KAAAE,eAAA/e,KAAAC,GAAA,EACAye,EAAA3e,MAAA4e,EAAAE,KAAAE,eACAL,EAAAte,SAAA,EAAAue,EAAAE,KAAAC,eAAAH,EAAAE,KAAAE,eACAL,EAAApyB,OAAA2W,SAAAxX,IAAA,QACAizB,EAAAxiB,IAAAwiB,EAAApyB,QACA,MAEA,QACA,UAAAsC,MAAA,6CAAA+vB,EAAAprB,KAAA,MAcA,OARAmrB,EAAAzb,SAAAxX,IAAA,OAEAizB,EAAAM,MAAA,OAEAt5B,IAAAi5B,EAAApf,YAAAmf,EAAAnf,UAAAof,EAAApf,WAEAmf,EAAA7pB,KAAA8pB,EAAA9pB,MAAA,SAAA4pB,EAEAQ,QAAAC,QAAAR,IAeAhB,EAAAj4B,UAAA05B,gBAAA,WAEA,OAAA3xB,MAAA4xB,mBAIA1B,EAAAj4B,UAAA45B,aAAA,SAAAC,EAAAC,EAAAC,GAEA,IAAAC,KAEAH,EAAAroB,MAAA,IAAAzJ,MAAA0J,MAAA,OACAooB,EAAAxnB,QAAA,EAEA,IAAA4nB,EAAAH,EAAAI,qBAEA,GAAAD,EAAA,CAEA,GAAAl6B,MAAAL,QAAAu6B,EAAAE,iBAAA,CAEA,IAAA5rB,EAAA0rB,EAAAE,gBAEAN,EAAAroB,MAAAE,UAAAnD,GACAsrB,EAAAxnB,QAAA9D,EAAA,QAIAtO,IAAAg6B,EAAAG,kBAEAJ,EAAAx6B,KAAAu6B,EAAAM,cAAAR,EAAA,MAAAI,EAAAG,mBAMA,OAAAZ,QAAAc,IAAAN,IAKA,IAAAxD,EAAA,OACAK,EAAA,GACAO,GAAqCC,KAAA,WAAAE,IAAA,SAoErC,SAAAc,EAAAZ,EAAA9B,GAEA,IAAAA,EAEA,UAAAxsB,MAAA,uDAIA1I,KAAA2O,KAAAqnB,EAAA2B,2BACA33B,KAAAg3B,OACAh3B,KAAAk1B,cACAl1B,KAAAk1B,YAAA4E,UAoEA,SAAA9B,IAEAh4B,KAAA2O,KAAAqnB,EAAA+B,sBA2CA,SAAAL,IAEA,OAEA/oB,KAAAqnB,EAAAyB,sCAEAsC,0BACA,QACA,MACA,WACA,oBACA,QACA,iBACA,WACA,oBACA,cACA,UACA,YACA,YACA,kBACA,oBACA,mBACA,cACA,WACA,gBACA,aACA,WACA,SACA,kBACA,mBAGAd,gBAAA,WAEA,OAAA3xB,MAAA0yB,gBAIAb,aAAA,SAAAC,EAAAC,EAAAC,GAEA,IAAAW,EAAAZ,EAAAvD,WAAA91B,KAAA2O,MAEAurB,EAAA5yB,MAAA6yB,UAAA,SAEAC,EAAA9yB,MAAA+yB,cAAA1b,MAAAub,EAAAE,UAEAE,GACA,yBACA,mCACA,UACAC,KAAA,MAEAC,GACA,2BACA,qCACA,UACAD,KAAA,MAEAE,GACA,kCACA,yBACA,wDACA,mDACA,oFACA,yCACA,UACAF,KAAA,MAEAG,GACA,uCACA,2BACA,4DACA,kFACA,2CACA,UACAH,KAAA,MAEAI,GACA,6BACA,4CACA,2EACA,gDACAJ,KAAA,MAEAK,EAAAV,EAAAU,eACA9L,QAAA,2BAAwC,0BACxCA,QAAA,2BAAwC,6BACxCA,QAAA,wCAAAwL,GACAxL,QAAA,wCAAA0L,GACA1L,QAAA,mCAAA2L,GACA3L,QAAA,mCAAA4L,GACA5L,QAAA,sCAAA6L,UAEAP,EAAAS,iBACAT,EAAAU,iBACAV,EAAAW,oBACAX,EAAAY,aAEAZ,EAAAjoB,UAAyBvP,OAAA,IAAA0E,MAAA0J,OAAAiqB,OAAA,UACzBb,EAAAc,YAA2Bt4B,MAAA,IAC3Bw3B,EAAAnnB,aAA4BrQ,MAAA,MAC5Bw3B,EAAAe,eAA8Bv4B,MAAA,MAE9Bw2B,EAAAgC,aAAAlB,EAAAkB,aACAhC,EAAAwB,iBACAxB,EAAAgB,WACAhB,EAAAiC,SAA8BC,SAAA,IAE9BlC,EAAAroB,MAAA,IAAAzJ,MAAA0J,MAAA,OACAooB,EAAAxnB,QAAA,EAEA,IAAA2nB,KAEA,GAAAj6B,MAAAL,QAAAg7B,EAAAsB,eAAA,CAEA,IAAAztB,EAAAmsB,EAAAsB,cAEAnC,EAAAroB,MAAAE,UAAAnD,GACAsrB,EAAAxnB,QAAA9D,EAAA,GAoBA,QAhBAtO,IAAAy6B,EAAAuB,gBAEAjC,EAAAx6B,KAAAu6B,EAAAM,cAAAR,EAAA,MAAAa,EAAAuB,iBAIApC,EAAA9nB,SAAA,IAAAhK,MAAA0J,MAAA,OACAooB,EAAA8B,gBAAA17B,IAAAy6B,EAAAwB,iBAAAxB,EAAAwB,iBAAA,EACArC,EAAAjnB,SAAA,IAAA7K,MAAA0J,MAAA,OAEA1R,MAAAL,QAAAg7B,EAAAyB,iBAEAtC,EAAAjnB,SAAAlB,UAAAgpB,EAAAyB,qBAIAl8B,IAAAy6B,EAAA0B,0BAAA,CAEA,IAAAC,EAAA3B,EAAA0B,0BACApC,EAAAx6B,KAAAu6B,EAAAM,cAAAR,EAAA,gBAAAwC,IACArC,EAAAx6B,KAAAu6B,EAAAM,cAAAR,EAAA,cAAAwC,IAIA,OAAA7C,QAAAc,IAAAN,IAIAsC,eAAA,SAAAC,GAIA,IAAA5rB,EAAA,IAAA5I,MAAA0yB,gBACAqB,QAAAS,EAAAT,QACAD,aAAAU,EAAAV,aACAR,eAAAkB,EAAAlB,eACAR,SAAA0B,EAAA1B,SACA2B,KAAA,EACA1D,QAAA,EACAzmB,QAAAkqB,EAAAlqB,QACAC,YAAAiqB,EAAAjqB,cA6CA,OA1CA3B,EAAA8rB,kCAAA,EAEA9rB,EAAAa,MAAA+qB,EAAA/qB,MAEAb,EAAAuC,SAAAjT,IAAAs8B,EAAArpB,IAAA,KAAAqpB,EAAArpB,IAEAvC,EAAA+rB,SAAA,KACA/rB,EAAAgsB,kBAAA,EAEAhsB,EAAAsC,WAAAhT,IAAAs8B,EAAAtpB,MAAA,KAAAspB,EAAAtpB,MACAtC,EAAAisB,eAAA,EAEAjsB,EAAAoB,SAAAwqB,EAAAxqB,SACApB,EAAAuB,kBAAA,EACAvB,EAAA2C,iBAAArT,IAAAs8B,EAAAjpB,YAAA,KAAAipB,EAAAjpB,YAEA3C,EAAAoC,aAAA9S,IAAAs8B,EAAAxpB,QAAA,KAAAwpB,EAAAxpB,QACApC,EAAAW,UAAA,EAEAX,EAAA4C,eAAAtT,IAAAs8B,EAAAhpB,UAAA,KAAAgpB,EAAAhpB,UAEAgpB,EAAAM,cAAAlsB,EAAAksB,YAAAN,EAAAM,aAEAlsB,EAAA0C,gBAAA,KACA1C,EAAAkB,kBAAA,EACAlB,EAAAmsB,iBAAA,EAEAnsB,EAAA+C,iBAAAzT,IAAAs8B,EAAA7oB,YAAA,KAAA6oB,EAAA7oB,YACA/C,EAAAiC,SAAA2pB,EAAA3pB,SAEAjC,EAAAirB,mBAAA37B,IAAAs8B,EAAAX,cAAA,KAAAW,EAAAX,cACAjrB,EAAAgrB,WAAAY,EAAAZ,WAEAhrB,EAAAgD,SAAA,KAEAhD,EAAA6C,YAAAvT,IAAAs8B,EAAA/oB,OAAA,KAAA+oB,EAAA/oB,OACA7C,EAAAosB,gBAAA,EAEApsB,EAAAqsB,gBAAA,IAEArsB,EAAA4lB,WAAA0G,aAAA,EAEAtsB,GAgBAusB,cAAA,SAAAp4B,GAEA,IAAA+B,EAAA/B,EAAAsa,QAEAvY,EAAA41B,kCAAA,EAIA,IAFA,IAAAF,EAAA97B,KAAA+5B,yBAEA73B,EAAA,EAAAw6B,EAAAZ,EAAAj8B,OAAwCqC,EAAAw6B,EAAQx6B,IAAA,CAEhD,IAAAU,EAAAyB,EAAAy3B,EAAA55B,IACAkE,EAAA01B,EAAA55B,IAAAU,KAAA+5B,QAAA/5B,EAAA+b,QAAA/b,EAIA,OAAAwD,GAKAw2B,gBAAA,SAAAC,EAAAC,EAAAC,EAAAviB,EAAAtK,GAEA,QAAAA,EAAA8rB,iCAAA,CAMA,IA0BAgB,EA1BA5C,EAAAlqB,EAAAkqB,SACAiB,EAAAnrB,EAAAmrB,QAEAjB,EAAAxoB,QAAAhP,MAAAsN,EAAA0B,QAEAwoB,EAAA6C,QAAAr6B,MAAA+U,KAAAzH,EAAAa,OACAqpB,EAAA9oB,SAAA1O,MAAA+U,KAAAzH,EAAAoB,UAAA4rB,eAAAhtB,EAAAuB,mBAEA2oB,EAAA3nB,IAAA7P,MAAAsN,EAAAuC,IACA2nB,EAAAnnB,YAAArQ,MAAAsN,EAAA+C,YACAmnB,EAAAlnB,SAAAtQ,MAAAsN,EAAAgD,SAEAknB,EAAA6B,SAAAr5B,MAAAsN,EAAA+rB,SACA7B,EAAA8B,kBAAAt5B,MAAAsN,EAAAgsB,kBAEA9B,EAAA5nB,MAAA5P,MAAAsN,EAAAsC,MACA4nB,EAAA+B,eAAAv5B,MAAAsN,EAAAisB,eAYAjsB,EAAAuC,IAEAuqB,EAAA9sB,EAAAuC,IAEKvC,EAAA+C,YAEL+pB,EAAA9sB,EAAA+C,YAEK/C,EAAA0C,gBAELoqB,EAAA9sB,EAAA0C,gBAEK1C,EAAA4C,UAELkqB,EAAA9sB,EAAA4C,UAEK5C,EAAAoC,QAEL0qB,EAAA9sB,EAAAoC,QAEKpC,EAAAirB,cAEL6B,EAAA9sB,EAAAirB,cAEKjrB,EAAAgD,SAEL8pB,EAAA9sB,EAAAgD,SAEKhD,EAAA2C,cAELmqB,EAAA9sB,EAAA2C,kBAIArT,IAAAw9B,IAGAA,EAAAG,sBAEAH,IAAAzuB,UAIA,IAAAyuB,EAAAI,kBAEAJ,EAAAK,eAIAjD,EAAAkD,YAAA16B,MAAA+U,KAAAqlB,EAAAvmB,SAIAvG,EAAA6C,SAEAqnB,EAAArnB,OAAAnQ,MAAAsN,EAAA6C,OACAqnB,EAAAkC,gBAAA15B,MAAAsN,EAAAosB,gBAMAlC,EAAAmD,WAAA36B,MAAAsN,EAAA6C,OAAAyqB,eAAA,IAEApD,EAAAroB,aAAAnP,MAAAsN,EAAA6B,aACAqoB,EAAAmC,gBAAA35B,MAAAsN,EAAAqsB,gBAEAnC,EAAAqD,YAAA76B,MAAAi6B,EAAAa,WAAAh7B,IAAAwN,EAAA6C,QAAA4qB,eAIAvD,EAAAjoB,SAAAvP,MAAA+U,KAAAzH,EAAAiC,UACAioB,EAAAc,WAAAt4B,MAAAsN,EAAAgrB,WAEAd,EAAAe,cAAAv4B,MAAAsN,EAAAirB,cAEAf,EAAAvnB,YAAAjQ,MAAAsN,EAAA2C,YACAunB,EAAA9nB,QAAA1P,MAAAsN,EAAAoC,QACA8nB,EAAAtnB,UAAAlQ,MAAAsN,EAAA4C,UAEAsnB,EAAAxnB,gBAAAhQ,MAAAsN,EAAA0C,gBACAwnB,EAAAhpB,kBAAAxO,MAAAsN,EAAAkB,kBACAgpB,EAAAiC,iBAAAz5B,MAAAsN,EAAAmsB,iBAEA,OAAAjC,EAAAe,cAAAv4B,YAAApD,IAAA67B,EAAAuC,oBAEAvC,EAAAuC,kBAAA,GAEAvC,EAAAwC,iBAAA,IAIA,OAAAzD,EAAAe,cAAAv4B,YAAApD,IAAA67B,EAAAuC,2BAEAvC,EAAAuC,yBACAvC,EAAAwC,qBAeA,SAAA3F,IAEAl4B,KAAA2O,KAAAqnB,EAAAiC,sBAUA,SAAA6F,EAAAC,EAAAC,EAAAC,EAAAC,GAEA52B,MAAA62B,YAAA32B,KAAAxH,KAAA+9B,EAAAC,EAAAC,EAAAC,GAhgBAtG,EAAAr4B,UAAA6+B,gBAAA,SAAAC,EAAA/E,GAEA,IAAAtC,EAAAh3B,KAAAg3B,KACA9B,EAAAl1B,KAAAk1B,YACAoJ,EAAAD,EAAAvI,WAAA91B,KAAA2O,MAAA4vB,WACAC,EAAAH,EAAAvI,WAAA91B,KAAA2O,MAAA8L,WACAgkB,KACAC,KACAC,KAEA,QAAAC,KAAAJ,EAAA,CAEA,IAAAK,EAAAC,EAAAF,MAAAlxB,cAEA+wB,EAAAI,GAAAL,EAAAI,GAIA,IAAAA,KAAAP,EAAA5jB,WAAA,CAEAokB,EAAAC,EAAAF,MAAAlxB,cAEA,QAAAlO,IAAAg/B,EAAAI,GAAA,CAEA,IAAAG,EAAA/H,EAAAgI,UAAAX,EAAA5jB,WAAAmkB,IACAK,EAAAC,EAAAH,EAAAE,eAEAN,EAAAE,GAAAI,EACAP,EAAAG,IAAA,IAAAE,EAAAI,YAMA,OAAA7F,EAAA8F,cAAA,aAAAd,GAAAe,KAAA,SAAAd,GAEA,WAAAxF,QAAA,SAAAC,GAEA9D,EAAAoK,gBAAAf,EAAA,SAAA/jB,GAEA,QAAAokB,KAAApkB,EAAAC,WAAA,CAEA,IAAA8kB,EAAA/kB,EAAAC,WAAAmkB,GACAO,EAAAT,EAAAE,QAEAp/B,IAAA2/B,IAAAI,EAAAJ,cAIAnG,EAAAxe,IAEKikB,EAAAE,QAmBL3G,EAAAz4B,UAAAigC,cAAA,SAAAjxB,EAAAmI,GA8BA,OA5BAnI,IAAAoQ,aAEAnf,IAAAkX,EAAAtO,QAEAmG,EAAAnG,OAAA6I,UAAAyF,EAAAtO,aAIA5I,IAAAkX,EAAAqF,WAEAxN,EAAAwN,SAAArF,EAAAqF,eAIAvc,IAAAkX,EAAAyF,OAEA5N,EAAAkB,OAAAwB,UAAAyF,EAAAyF,YAIA3c,IAAAkX,EAAA+oB,UAEA7xB,QAAAC,KAAA,wCAAA7N,KAAA2O,KAAA,kCAIAJ,EAAAmxB,aAAA,EAEAnxB,GAgaAuvB,EAAAv+B,UAAAyF,OAAA7E,OAAAmH,MAAA62B,YAAA5+B,WACAu+B,EAAAv+B,UAAAF,YAAAy+B,EAEAA,EAAAv+B,UAAAogC,iBAAA,SAAAz+B,GAUA,IALA,IAAApC,EAAAkB,KAAAk+B,aACA3uB,EAAAvP,KAAAg+B,aACA4B,EAAA5/B,KAAA4/B,UACAx3B,EAAAlH,EAAA0+B,EAAA,EAAAA,EAEA19B,EAAA,EAAkBA,IAAA09B,EAAiB19B,IAEnCpD,EAAAoD,GAAAqN,EAAAnH,EAAAlG,GAIA,OAAApD,GAIAg/B,EAAAv+B,UAAAsgC,aAAA/B,EAAAv+B,UAAAogC,iBAEA7B,EAAAv+B,UAAAugC,UAAAhC,EAAAv+B,UAAAogC,iBAEA7B,EAAAv+B,UAAAwgC,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAyBA,IAvBA,IAAArhC,EAAAkB,KAAAk+B,aACA3uB,EAAAvP,KAAAg+B,aACAoC,EAAApgC,KAAA4/B,UAEAS,EAAA,EAAAD,EACAE,EAAA,EAAAF,EAEAG,EAAAJ,EAAAF,EAEAxhC,GAAAyhC,EAAAD,GAAAM,EACAC,EAAA/hC,IACAgiC,EAAAD,EAAA/hC,EAEAiiC,EAAAV,EAAAM,EACAK,EAAAD,EAAAJ,EAEAM,GAAA,EAAAH,EAAA,EAAAD,EACAK,EAAAJ,EAAAD,EACAM,EAAA,EAAAF,EACAG,EAAAF,EAAAL,EAAA/hC,EAIAyD,EAAA,EAAkBA,IAAAk+B,EAAcl+B,IAAA,CAEhC,IAAA8+B,EAAAzxB,EAAAoxB,EAAAz+B,EAAAk+B,GACAa,EAAA1xB,EAAAoxB,EAAAz+B,EAAAm+B,GAAAE,EACAW,EAAA3xB,EAAAmxB,EAAAx+B,EAAAk+B,GACAe,EAAA5xB,EAAAmxB,EAAAx+B,GAAAq+B,EAEAzhC,EAAAoD,GAAA4+B,EAAAE,EAAAD,EAAAE,EAAAL,EAAAM,EAAAL,EAAAM,EAIA,OAAAriC,GAUA,IAAAsiC,EAWA,EAXAA,EAYA,EAZAA,EAaA,EAbAA,EAcA,EAdAA,EAeA,EAfAA,EAgBA,EAhBAA,EAiBA,EAKAlC,GACAmC,KAAAC,UACAC,KAAAxzB,WACAyzB,KAAAC,WACAC,KAAAC,YACAC,KAAAC,YACAC,KAAApd,cAGAqd,GACAC,KAAA16B,MAAA26B,cACAC,KAAA56B,MAAA66B,aACAC,KAAA96B,MAAA+6B,2BACAC,KAAAh7B,MAAAi7B,0BACAC,KAAAl7B,MAAAm7B,0BACAC,KAAAp7B,MAAAq7B,0BAGAC,GACAC,MAAAv7B,MAAA+H,oBACAyzB,MAAAx7B,MAAAy7B,uBACAC,MAAA17B,MAAA8H,gBAGA6zB,GACAC,OAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAGA1E,GACA2E,SAAA,WACAC,OAAA,SACAC,QAAA,UACAC,WAAA,KACAC,WAAA,MACAC,QAAA,QACAC,UAAA,aACAC,SAAA,aAGAC,GACA9nB,MAAA,QACAR,YAAA,WACAI,SAAA,aACAzH,QAAA,yBAGA4vB,GACAC,iBAAA3kC,EAEA4kC,OAAA98B,MAAA+8B,kBACAC,KAAAh9B,MAAAi9B,qBAGAC,EACA,SADAA,EAEA,OAFAA,EAGA,QAGAC,GACAC,YAAAp9B,MAAAq9B,WACAC,aAAAt9B,MAAAu9B,WAKA,SAAAC,EAAA97B,EAAAI,GAGA,uBAAAJ,GAAA,KAAAA,EAAA,IAGA,gBAAA+7B,KAAA37B,IAAA,MAAA27B,KAAA/7B,KAEAI,IAAA0lB,QAAA,iCAKA,mBAAAiW,KAAA/7B,KAGA,gBAAA+7B,KAAA/7B,KAGA,aAAA+7B,KAAA/7B,KAGAI,EAAAJ,GA2BA,SAAAg8B,EAAAC,EAAAC,EAAAC,GAIA,QAAAx2B,KAAAw2B,EAAArP,gBAEAt2B,IAAAylC,EAAAt2B,KAEAu2B,EAAA5uB,SAAA8uB,eAAAF,EAAA5uB,SAAA8uB,mBACAF,EAAA5uB,SAAA8uB,eAAAz2B,GAAAw2B,EAAArP,WAAAnnB,IAYA,SAAA02B,EAAAH,EAAAI,QAEA9lC,IAAA8lC,EAAAC,SAEA,iBAAAD,EAAAC,OAEAvgC,OAAAowB,OAAA8P,EAAA5uB,SAAAgvB,EAAAC,QAIA33B,QAAAC,KAAA,sDAAAy3B,EAAAC,SAqFA,SAAAC,EAAAC,EAAAC,GAIA,GAFAD,EAAAD,0BAEAhmC,IAAAkmC,EAAApxB,QAEA,QAAApS,EAAA,EAAAw6B,EAAAgJ,EAAApxB,QAAAzU,OAAgDqC,EAAAw6B,EAAQx6B,IAExDujC,EAAAE,sBAAAzjC,GAAAwjC,EAAApxB,QAAApS,GAOA,GAAAwjC,EAAAH,QAAAjmC,MAAAL,QAAAymC,EAAAH,OAAAK,aAAA,CAEA,IAAAA,EAAAF,EAAAH,OAAAK,YAEA,GAAAH,EAAAE,sBAAA9lC,SAAA+lC,EAAA/lC,OAAA,CAEA4lC,EAAAzZ,yBAEA,IAAA9pB,EAAA,EAAAw6B,EAAAkJ,EAAA/lC,OAA6CqC,EAAAw6B,EAAQx6B,IAErDujC,EAAAzZ,sBAAA4Z,EAAA1jC,WAMA0L,QAAAC,KAAA,yEA6BA,SAAAg4B,EAAAprB,GAMA,IAJA,IAAAqrB,EAAA,GAEA7gC,EAAAD,OAAAC,KAAAwV,GAAAyR,OAEAhqB,EAAA,EAAAw6B,EAAAz3B,EAAApF,OAAoCqC,EAAAw6B,EAAQx6B,IAE5C4jC,GAAA7gC,EAAA/C,GAAA,IAAAuY,EAAAxV,EAAA/C,IAAA,IAIA,OAAA4jC,EAMA,SAAA3N,EAAAnB,EAAAlB,EAAAiQ,GAEA/lC,KAAAg3B,WACAh3B,KAAA81B,iBACA91B,KAAA+lC,cAGA/lC,KAAAgmC,MAAA,IArrCA,WAEA,IAAAC,KAEA,OAEAvjC,IAAA,SAAA1B,GAEA,OAAAilC,EAAAjlC,IAIAgV,IAAA,SAAAhV,EAAAkkC,GAEAe,EAAAjlC,GAAAkkC,GAIAgB,OAAA,SAAAllC,UAEAilC,EAAAjlC,IAIAmlC,UAAA,WAEAF,QA8pCAjmC,KAAAomC,kBAEApmC,KAAA0H,cAAA,IAAAJ,MAAAmD,cAAAzK,KAAA+lC,QAAA1+B,SACArH,KAAA0H,cAAAiD,eAAA3K,KAAA+lC,QAAAn7B,aAEA5K,KAAAqmC,WAAA,IAAA/+B,MAAAkC,WAAAxJ,KAAA+lC,QAAA1+B,SACArH,KAAAqmC,WAAA38B,gBAAA,eAEA,oBAAA1J,KAAA+lC,QAAAn7B,aAEA5K,KAAAqmC,WAAA3Q,oBAAA,GA46BA,SAAA4Q,EAAA9rB,EAAA+rB,EAAAjN,GAEA,IAAA7e,EAAA8rB,EAAA9rB,WAEA8e,KAEA,SAAAiN,EAAAC,EAAA7H,GAEA,OAAAtF,EAAA8F,cAAA,WAAAqH,GACApH,KAAA,SAAAqH,GAEAlsB,EAAAwF,aAAA4e,EAAA8H,KAMA,QAAAC,KAAAlsB,EAAA,CAEA,IAAAokB,EAAAC,EAAA6H,MAAAj5B,cAGAmxB,KAAArkB,EAAAC,YAEA8e,EAAAx6B,KAAAynC,EAAA/rB,EAAAksB,GAAA9H,IAIA,QAAAr/B,IAAA+mC,EAAAlyB,UAAAmG,EAAAtZ,MAAA,CAEA,IAAAwlC,EAAApN,EAAA8F,cAAA,WAAAmH,EAAAlyB,SAAAgrB,KAAA,SAAAqH,GAEAlsB,EAAAosB,SAAAF,KAIAnN,EAAAx6B,KAAA2nC,GAQA,OAJArB,EAAA7qB,EAAA+rB,GAnIA,SAAA/rB,EAAA+rB,EAAAjN,GAEA,IAAA7e,EAAA8rB,EAAA9rB,WAEAosB,EAAA,IAAAv/B,MAAAw/B,KAEA,QAAAtnC,IAAAib,EAAAgpB,SAAA,CAEA,IAEAsD,GAFAL,EAAApN,EAAAtC,KAAAgI,UAAAvkB,EAAAgpB,WAEAsD,IACA3sB,EAAAssB,EAAAtsB,IAIA,QAAA5a,IAAAunC,QAAAvnC,IAAA4a,EAAA,CAEAysB,EAAAthC,IACA,IAAA+B,MAAA2V,QAAA8pB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,IAAAz/B,MAAA2V,QAAA7C,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAgBA,IAAA4sB,EAAAT,EAAAS,QAEA,QAAAxnC,IAAAwnC,EAIA,IAFA,IAAAC,EAAA,IAAA3/B,MAAA2V,QAEA/a,EAAA,EAAAw6B,EAAAsK,EAAAnnC,OAAwCqC,EAAAw6B,EAAQx6B,IAAA,CAEhD,IAIAwkC,EAJAtgC,EAAA4gC,EAAA9kC,GAEA,QAAA1C,IAAA4G,EAAAq9B,SAGAsD,GADAL,EAAApN,EAAAtC,KAAAgI,UAAA54B,EAAAq9B,WACAsD,IACA3sB,EAAAssB,EAAAtsB,SAIA5a,IAAAunC,QAAAvnC,IAAA4a,GAGA6sB,EAAAC,KAAAptB,KAAAM,IAAAN,KAAAgT,IAAAia,EAAA,IAAAjtB,KAAAgT,IAAA1S,EAAA,MACA6sB,EAAAE,KAAArtB,KAAAM,IAAAN,KAAAgT,IAAAia,EAAA,IAAAjtB,KAAAgT,IAAA1S,EAAA,MACA6sB,EAAAG,KAAAttB,KAAAM,IAAAN,KAAAgT,IAAAia,EAAA,IAAAjtB,KAAAgT,IAAA1S,EAAA,MAEAysB,EAAAQ,eAAAJ,IAIAr5B,QAAAC,KAAA,uEAUA2M,EAAA8sB,YAAAT,EAEA,IAAAU,EAAA,IAAAjgC,MAAAkgC,OAEAX,EAAAY,UAAAF,EAAAG,QACAH,EAAAI,OAAAd,EAAAE,IAAAa,WAAAf,EAAAzsB,KAAA,EAEAI,EAAAqtB,eAAAN,OA1DA35B,QAAAC,KAAA,wEA8GAi6B,CAAAttB,EAAA+rB,EAAAjN,GAEAP,QAAAc,IAAAN,GAAA8F,KAAA,WAEA,YAAA7/B,IAAA+mC,EAAAS,QAjoCA,SAAAxsB,EAAAwsB,EAAA1N,GAKA,IAHA,IAAAyO,GAAA,EACAC,GAAA,EAEA9lC,EAAA,EAAAw6B,EAAAsK,EAAAnnC,OAAuCqC,EAAAw6B,SAIvCl9B,KAFA4G,EAAA4gC,EAAA9kC,IAEAuhC,WAAAsE,GAAA,QACAvoC,IAAA4G,EAAAs9B,SAAAsE,GAAA,IAEAD,IAAAC,GAP+C9lC,KAW/C,IAAA6lC,IAAAC,EAAA,OAAAjP,QAAAC,QAAAxe,GAEA,IAAAytB,KACAC,KAEA,IAAAhmC,EAAA,EAAAw6B,EAAAsK,EAAAnnC,OAAuCqC,EAAAw6B,EAAQx6B,IAAA,CAE/C,IAAAkE,EAAA4gC,EAAA9kC,GAEA,GAAA6lC,EAAA,CAEA,IAAAI,OAAA3oC,IAAA4G,EAAAq9B,SACAnK,EAAA8F,cAAA,WAAAh5B,EAAAq9B,UACAjpB,EAAAC,WAAAsC,SAEAkrB,EAAAlpC,KAAAopC,GAIAH,IAEAG,OAAA3oC,IAAA4G,EAAAs9B,OACApK,EAAA8F,cAAA,WAAAh5B,EAAAs9B,QACAlpB,EAAAC,WAAA4F,OAEA6nB,EAAAnpC,KAAAopC,IAMA,OAAApP,QAAAc,KACAd,QAAAc,IAAAoO,GACAlP,QAAAc,IAAAqO,KACA7I,KAAA,SAAAL,GAEA,IAAAva,EAAAua,EAAA,GACAoJ,EAAApJ,EAAA,GAMA,OAJA+I,IAAAvtB,EAAA4D,gBAAArB,SAAA0H,GACAujB,IAAAxtB,EAAA4D,gBAAAiC,OAAA+nB,GACA5tB,EAAA4J,sBAAA,EAEA5J,IAukCAiH,CAAAjH,EAAA+rB,EAAAS,QAAA1N,GACA9e,IAWA,SAAA6tB,EAAA7tB,EAAA8tB,GAEA,IAAApnC,EAAAsZ,EAAA+tB,WAIA,UAAArnC,EAAA,CAEA,IAAAmT,KAEA0I,EAAAvC,EAAAguB,aAAA,YAEA,QAAAhpC,IAAAud,EAcA,OADAnP,QAAAhE,MAAA,kGACA4Q,EAZA,QAAAtY,EAAA,EAAoBA,EAAA6a,EAAAyE,MAAoBtf,IAExCmS,EAAAtV,KAAAmD,GAIAsY,EAAAosB,SAAAvyB,GACAnT,EAAAsZ,EAAA+tB,WAaA,IAAAE,EAAAvnC,EAAAsgB,MAAA,EACAknB,KAEA,GAAAJ,IAAAhhC,MAAAqhC,oBAIA,IAAAzmC,EAAA,EAAmBA,GAAAumC,EAAwBvmC,IAE3CwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA,IACAF,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,IACAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,EAAA,SAQA,IAAAA,EAAA,EAAmBA,EAAAumC,EAAuBvmC,IAE1CA,EAAA,MAEAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,IACAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,EAAA,IACAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,EAAA,MAKAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,EAAA,IACAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,EAAA,IACAwmC,EAAA3pC,KAAAmC,EAAA0nC,KAAA1mC,KAQAwmC,EAAA7oC,OAAA,IAAA4oC,GAEA76B,QAAAhE,MAAA,2FAMA,IAAAi/B,EAAAruB,EAAAmE,QAGA,OAFAkqB,EAAAjC,SAAA8B,GAEAG,EAiwBA,OAvzDA1Q,EAAA54B,UAAAoK,MAAA,SAAAV,EAAAE,GAEA,IAAAmwB,EAAAt5B,KACAg3B,EAAAh3B,KAAAg3B,KACAlB,EAAA91B,KAAA81B,WAGA91B,KAAAgmC,MAAAG,YAGAnmC,KAAA8oC,WAEA/P,QAAAc,KAEA75B,KAAA+oC,gBAAA,SACA/oC,KAAA+oC,gBAAA,aACA/oC,KAAA+oC,gBAAA,YAEA1J,KAAA,SAAA2J,GAEA,IAAAlqC,GACAg+B,MAAAkM,EAAA,GAAAhS,EAAA8F,OAAA,GACAmM,OAAAD,EAAA,GACAnyB,WAAAmyB,EAAA,GACAE,QAAAF,EAAA,GACA/R,MAAAD,EAAAC,MACAqC,SACAhjB,aAGA0uB,EAAAlP,EAAAh3B,EAAAk4B,GAEAqO,EAAAvmC,EAAAk4B,GAEA/tB,EAAAnK,KAEGqqC,MAAAhgC,IAOHgvB,EAAA54B,UAAAupC,SAAA,WAWA,IATA,IAAAM,EAAAppC,KAAAg3B,KAAAqS,UACAC,EAAAtpC,KAAAg3B,KAAAuS,UACAC,EAAAxpC,KAAAg3B,KAAAyS,WAEAC,KACAC,KAIAC,EAAA,EAAAC,EAAAP,EAAAzpC,OAAwD+pC,EAAAC,EAAwBD,IAIhF,IAFA,IAAAE,EAAAR,EAAAM,GAAAE,OAEA5nC,EAAA,EAAAw6B,EAAAoN,EAAAjqC,OAAuCqC,EAAAw6B,EAAQx6B,IAE/CknC,EAAAU,EAAA5nC,IAAA6nC,QAAA,EAWA,QAAAC,EAAA,EAAAC,EAAAb,EAAAvpC,OAAwDmqC,EAAAC,EAAwBD,IAAA,CAEhF,IAAAE,EAAAd,EAAAY,QAEAxqC,IAAA0qC,EAAAzE,YAEAjmC,IAAAkqC,EAAAQ,EAAAzE,QAEAiE,EAAAQ,EAAAzE,MAAAkE,EAAAO,EAAAzE,MAAA,GAIAiE,EAAAQ,EAAAzE,aAKAjmC,IAAA0qC,EAAAC,OAEAX,EAAAU,EAAAzE,MAAA2E,eAAA,IAQApqC,KAAAg3B,KAAA0S,iBACA1pC,KAAAg3B,KAAA2S,YAUAxR,EAAA54B,UAAA6/B,cAAA,SAAA/xB,EAAAnM,GAEA,IAAAmpC,EAAAh9B,EAAA,IAAAnM,EACAopC,EAAAtqC,KAAAgmC,MAAAtjC,IAAA2nC,GAEA,IAAAC,EAAA,CAEA,OAAAj9B,GAEA,YACAi9B,EAAAtqC,KAAAuqC,UAAArpC,GACA,MAEA,WACAopC,EAAAtqC,KAAAwqC,SAAAtpC,GACA,MAEA,WACAopC,EAAAtqC,KAAAyqC,SAAAvpC,GACA,MAEA,eACAopC,EAAAtqC,KAAA0qC,aAAAxpC,GACA,MAEA,iBACAopC,EAAAtqC,KAAA2qC,eAAAzpC,GACA,MAEA,aACAopC,EAAAtqC,KAAA4qC,WAAA1pC,GACA,MAEA,eACAopC,EAAAtqC,KAAA6qC,aAAA3pC,GACA,MAEA,cACAopC,EAAAtqC,KAAA0O,YAAAxN,GACA,MAEA,WACAopC,EAAAtqC,KAAA8qC,SAAA5pC,GACA,MAEA,gBACAopC,EAAAtqC,KAAA+qC,cAAA7pC,GACA,MAEA,aACAopC,EAAAtqC,KAAAgrC,WAAA9pC,GACA,MAEA,YACAopC,EAAAtqC,KAAA81B,WAAAE,EAAAqB,qBAAAiB,UAAAp3B,GACA,MAEA,QACA,UAAAwH,MAAA,iBAAA2E,GAIArN,KAAAgmC,MAAAhwB,IAAAq0B,EAAAC,GAIA,OAAAA,GASAnS,EAAA54B,UAAAwpC,gBAAA,SAAA17B,GAEA,IAAA27B,EAAAhpC,KAAAgmC,MAAAtjC,IAAA2K,GAEA,IAAA27B,EAAA,CAEA,IAAA1P,EAAAt5B,KACAirC,EAAAjrC,KAAAg3B,KAAA3pB,GAAA,SAAAA,EAAA,eAEA27B,EAAAjQ,QAAAc,IAAAoR,EAAAx4B,IAAA,SAAA9P,EAAAzB,GAEA,OAAAo4B,EAAA8F,cAAA/xB,EAAAnM,MAIAlB,KAAAgmC,MAAAhwB,IAAA3I,EAAA27B,GAIA,OAAAA,GASA7Q,EAAA54B,UAAAqrC,WAAA,SAAAM,GAEA,IAAAC,EAAAnrC,KAAAg3B,KAAAtX,QAAAwrB,GACA3hC,EAAAvJ,KAAAqmC,WAEA,GAAA8E,EAAA99B,MAAA,gBAAA89B,EAAA99B,KAEA,UAAA3E,MAAA,qBAAAyiC,EAAA99B,KAAA,kCAKA,QAAA7N,IAAA2rC,EAAAC,KAAA,IAAAF,EAEA,OAAAnS,QAAAC,QAAAh5B,KAAA81B,WAAAE,EAAAC,iBAAAC,MAIA,IAAA6P,EAAA/lC,KAAA+lC,QAEA,WAAAhN,QAAA,SAAAC,EAAAqS,GAEA9hC,EAAAR,KAAA+7B,EAAAqG,EAAAC,IAAArF,EAAA38B,MAAA4vB,OAAAx5B,EAAA,WAEA6rC,EAAA,IAAA3iC,MAAA,4CAAAyiC,EAAAC,IAAA,YAaAjT,EAAA54B,UAAAorC,eAAA,SAAArM,GAEA,IAAAgN,EAAAtrC,KAAAg3B,KAAAuU,YAAAjN,GAEA,OAAAt+B,KAAAo/B,cAAA,SAAAkM,EAAAtjC,QAAAq3B,KAAA,SAAAr3B,GAEA,IAAAiC,EAAAqhC,EAAArhC,YAAA,EACA8sB,EAAAuU,EAAAvU,YAAA,EACA,OAAA/uB,EAAAsC,MAAAysB,IAAA9sB,MAWAkuB,EAAA54B,UAAAmrC,aAAA,SAAAjE,GAEA,IAAAnN,EAAAt5B,KACAg3B,EAAAh3B,KAAAg3B,KAEA+H,EAAA/+B,KAAAg3B,KAAAgI,UAAAyH,GAEA,QAAAjnC,IAAAu/B,EAAAR,iBAAA/+B,IAAAu/B,EAAAyM,OAKA,OAAAzS,QAAAC,QAAA,MAIA,IAAAyS,KAmBA,YAjBAjsC,IAAAu/B,EAAAR,WAEAkN,EAAA1sC,KAAAiB,KAAAo/B,cAAA,aAAAL,EAAAR,aAIAkN,EAAA1sC,KAAA,WAIAS,IAAAu/B,EAAAyM,SAEAC,EAAA1sC,KAAAiB,KAAAo/B,cAAA,aAAAL,EAAAyM,OAAAn3B,QAAAkqB,aACAkN,EAAA1sC,KAAAiB,KAAAo/B,cAAA,aAAAL,EAAAyM,OAAAj8B,OAAAgvB,cAIAxF,QAAAc,IAAA4R,GAAApM,KAAA,SAAAkM,GAEA,IAWAz9B,EAAA49B,EAXAnN,EAAAgN,EAAA,GAEAI,EAAA1I,EAAAlE,EAAA1xB,MACAu+B,EAAA1M,EAAAH,EAAAE,eAGA4M,EAAAD,EAAAE,kBACAC,EAAAF,EAAAF,EACA5U,EAAAgI,EAAAhI,YAAA,EACAiV,OAAAxsC,IAAAu/B,EAAAR,WAAAvH,EAAAuU,YAAAxM,EAAAR,YAAAyN,gBAAAxsC,EACA2/B,GAAA,IAAAJ,EAAAI,WAIA,GAAA6M,OAAAD,EAAA,CAIA,IAAAE,EAAAnyB,KAAAoyB,MAAAnV,EAAAiV,GACAG,EAAA,qBAAApN,EAAAR,WAAA,IAAAQ,EAAAE,cAAA,IAAAgN,EAAA,IAAAlN,EAAAvd,MACA4qB,EAAA9S,EAAA0M,MAAAtjC,IAAAypC,GAEAC,IAEAt+B,EAAA,IAAA89B,EAAArN,EAAA0N,EAAAD,EAAAjN,EAAAvd,MAAAwqB,EAAAH,GAGAO,EAAA,IAAA9kC,MAAA+kC,kBAAAv+B,EAAAk+B,EAAAH,GAEAvS,EAAA0M,MAAAhwB,IAAAm2B,EAAAC,IAIAV,EAAA,IAAApkC,MAAAglC,2BAAAF,EAAAT,EAAA5U,EAAAiV,EAAAH,EAAA1M,QAMArxB,EAFA,OAAAywB,EAEA,IAAAqN,EAAA7M,EAAAvd,MAAAmqB,GAIA,IAAAC,EAAArN,EAAAxH,EAAAgI,EAAAvd,MAAAmqB,GAIAD,EAAA,IAAApkC,MAAA8f,gBAAAtZ,EAAA69B,EAAAxM,GAKA,QAAA3/B,IAAAu/B,EAAAyM,OAAA,CAEA,IAAAe,EAAAtJ,EAAAC,OACAsJ,EAAAtN,EAAAH,EAAAyM,OAAAn3B,QAAA4qB,eAEAwN,EAAA1N,EAAAyM,OAAAn3B,QAAA0iB,YAAA,EACA2V,EAAA3N,EAAAyM,OAAAj8B,OAAAwnB,YAAA,EAEA4V,EAAA,IAAAH,EAAAjB,EAAA,GAAAkB,EAAA1N,EAAAyM,OAAAhqB,MAAA+qB,GACAK,EAAA,IAAAhB,EAAAL,EAAA,GAAAmB,EAAA3N,EAAAyM,OAAAhqB,MAAAmqB,GAEA,OAAApN,IAGAmN,EAAA,IAAApkC,MAAA8f,gBAAAskB,EAAA59B,MAAAxD,QAAAohC,EAAAC,SAAAD,EAAAvM,aAIA,QAAAj9B,EAAA,EAAAw6B,EAAAiQ,EAAA9sC,OAA+CqC,EAAAw6B,EAAQx6B,IAAA,CAEvD,IAAAhB,EAAAyrC,EAAAzqC,GAMA,GAJAwpC,EAAAxE,KAAAhmC,EAAA0rC,EAAA1qC,EAAAypC,IACAA,GAAA,GAAAD,EAAAvE,KAAAjmC,EAAA0rC,EAAA1qC,EAAAypC,EAAA,IACAA,GAAA,GAAAD,EAAAtE,KAAAlmC,EAAA0rC,EAAA1qC,EAAAypC,EAAA,IACAA,GAAA,GAAAD,EAAAmB,KAAA3rC,EAAA0rC,EAAA1qC,EAAAypC,EAAA,IACAA,GAAA,YAAAjjC,MAAA,sEAMA,OAAAgjC,KAWAvT,EAAA54B,UAAAmP,YAAA,SAAAo+B,GAEA,IAWAzoC,EAXAi1B,EAAAt5B,KACAg3B,EAAAh3B,KAAAg3B,KACA+O,EAAA/lC,KAAA+lC,QACAr+B,EAAA1H,KAAA0H,cAEAuG,EAAAD,OAAAC,KAAAD,OAAA++B,UAEAC,EAAAhW,EAAAhsB,SAAA8hC,GAEAG,EAAAD,EAAAlX,eAcAoX,GARA7oC,EAFA4oC,EAAAjX,EAAA6B,kBAEAb,EAAAlsB,OAAAmiC,EAAAjX,EAAA6B,kBAAAxzB,QAIA2yB,EAAAlsB,OAAAkiC,EAAA3oC,SAIA+mC,IACA+B,GAAA,EAiBA,YAfA3tC,IAAA6E,EAAAk6B,aAIA2O,EAAA5T,EAAA8F,cAAA,aAAA/6B,EAAAk6B,YAAAc,KAAA,SAAAd,GAEA4O,GAAA,EACA,IAAAC,EAAA,IAAAj/B,MAAAowB,IAA0ClxB,KAAAhJ,EAAAgpC,WAE1C,OADAH,EAAAj/B,EAAAC,gBAAAk/B,MAOArU,QAAAC,QAAAkU,GAAA7N,KAAA,SAAA6N,GAIA,IAAA3jC,EAAAw8B,EAAA1+B,QAAAsG,WAAAu/B,GAUA,OARA3jC,IAEAA,EAAA0jC,EAAAjX,EAAA6B,kBACAyB,EAAAxD,WAAAE,EAAA6B,kBAAA1C,UACAztB,GAIA,IAAAqxB,QAAA,SAAAC,EAAAqS,GAEA9hC,EAAAR,KAAA+7B,EAAAoI,EAAAnH,EAAA38B,MAAA4vB,OAAAx5B,EAAA6rC,OAIGhM,KAAA,SAAA9wB,IAIH,IAAA4+B,GAEAl/B,EAAAq/B,gBAAAJ,GAIA3+B,EAAAg/B,OAAA,OAEA/tC,IAAAwtC,EAAAr+B,OAAAJ,EAAAI,KAAAq+B,EAAAr+B,MAGAtK,EAAAgpC,YAAA5I,IAEAl2B,EAAAi/B,OAAA/I,EAAApgC,EAAAgpC,WAIA,IACAI,GADAzW,EAAA0W,cACAV,EAAAS,aAOA,OALAl/B,EAAAo/B,UAAA5L,EAAA0L,EAAAE,YAAArmC,MAAA66B,aACA5zB,EAAAq/B,UAAA7L,EAAA0L,EAAAG,YAAAtmC,MAAAq7B,yBACAp0B,EAAAY,MAAAyzB,EAAA6K,EAAAt+B,QAAA7H,MAAA8H,eACAb,EAAAe,MAAAszB,EAAA6K,EAAAn+B,QAAAhI,MAAA8H,eAEAb,KAaA4pB,EAAA54B,UAAAq6B,cAAA,SAAAR,EAAAyU,EAAAC,GAEA,IAAAxU,EAAAt5B,KAEA,OAAAA,KAAAo/B,cAAA,UAAA0O,EAAA5sC,OAAAm+B,KAAA,SAAA9wB,GAEA,IAAAA,EAAAw/B,oBAEA,OAAAF,GAEA,YACA,kBACA,mBACA,gBACA,mBACAt/B,EAAAi/B,OAAAlmC,MAAAu9B,UAeA,QANArlC,IAAAsuC,EAAArO,UAAA,GAAAqO,EAAArO,UAAA,UAAAoO,GAAA,GAAAC,EAAArO,UAEA7xB,QAAAC,KAAA,mCAAAigC,EAAArO,SAAA,gBAAAoO,EAAA,uBAIAvU,EAAAxD,WAAAE,EAAA+B,uBAAA,CAEA,IAAArhB,OAAAlX,IAAAsuC,EAAAhY,WAAAgY,EAAAhY,WAAAE,EAAA+B,4BAAAv4B,EAEAkX,IAEAnI,EAAA+qB,EAAAxD,WAAAE,EAAA+B,uBAAAyH,cAAAjxB,EAAAmI,IAMA0iB,EAAAyU,GAAAt/B,KAcA4pB,EAAA54B,UAAAyuC,oBAAA,SAAAvI,GAEA,IAAAjrB,EAAAirB,EAAAjrB,SACAtK,EAAAu1B,EAAAv1B,SACA4lB,EAAA91B,KAAA81B,WAEAmY,OAAAzuC,IAAAgb,EAAAC,WAAAyzB,QACAC,OAAA3uC,IAAAgb,EAAAC,WAAA1J,MACAq9B,OAAA5uC,IAAAgb,EAAAC,WAAA4F,OACAguB,GAAA,IAAA5I,EAAA2E,cACAkE,EAAAtpC,OAAAC,KAAAuV,EAAA4D,iBAAAve,OAAA,EACA0uC,EAAAD,QAAA9uC,IAAAgb,EAAA4D,gBAAAiC,OAEA,GAAAolB,EAAA+I,SAAA,CAEA,IAAAnE,EAAA,kBAAAn6B,EAAAoO,KAEAmwB,EAAAzuC,KAAAgmC,MAAAtjC,IAAA2nC,GAEAoE,IAEAA,EAAA,IAAAnnC,MAAAonC,eACApnC,MAAA2I,SAAA1Q,UAAAoY,KAAAnQ,KAAAinC,EAAAv+B,GACAu+B,EAAA19B,MAAA4G,KAAAzH,EAAAa,OACA09B,EAAAh8B,IAAAvC,EAAAuC,IACAg8B,EAAAE,iBAAA,EAEA3uC,KAAAgmC,MAAAhwB,IAAAq0B,EAAAoE,IAIAv+B,EAAAu+B,OAEG,GAAAhJ,EAAAmJ,OAAA,CAEHvE,EAAA,qBAAAn6B,EAAAoO,KAAA,IAEAuwB,EAAA7uC,KAAAgmC,MAAAtjC,IAAA2nC,GAEAwE,IAEAA,EAAA,IAAAvnC,MAAA6T,kBACA7T,MAAA2I,SAAA1Q,UAAAoY,KAAAnQ,KAAAqnC,EAAA3+B,GACA2+B,EAAA99B,MAAA4G,KAAAzH,EAAAa,OAEA/Q,KAAAgmC,MAAAhwB,IAAAq0B,EAAAwE,IAIA3+B,EAAA2+B,EAKA,GAAAZ,GAAAE,GAAAC,GAAAC,GAAAC,EAAA,CAEAjE,EAAA,kBAAAn6B,EAAAoO,KAAA,IAEApO,EAAA8rB,mCAAAqO,GAAA,wBACAgE,IAAAhE,GAAA,aACA4D,IAAA5D,GAAA,oBACA8D,IAAA9D,GAAA,kBACA+D,IAAA/D,GAAA,iBACAiE,IAAAjE,GAAA,kBACAkE,IAAAlE,GAAA,kBAEA,IAAAyE,EAAA9uC,KAAAgmC,MAAAtjC,IAAA2nC,GAEAyE,IAEAA,EAAA5+B,EAAA8rB,iCACAlG,EAAAE,EAAAyB,uCAAAgF,cAAAvsB,GACAA,EAAAyO,QAEA0vB,IAAAS,EAAAj0B,UAAA,GACAozB,IAAAa,EAAAC,gBAAA,GACAZ,IAAAW,EAAAp0B,aAAApT,MAAAqT,cACAyzB,IAAAU,EAAAE,aAAA,GACAV,IAAAQ,EAAAz7B,cAAA,GACAk7B,IAAAO,EAAA1G,cAAA,GAEApoC,KAAAgmC,MAAAhwB,IAAAq0B,EAAAyE,IAIA5+B,EAAA4+B,EAMA5+B,EAAAsC,YAAAhT,IAAAgb,EAAAC,WAAAw0B,UAAAzvC,IAAAgb,EAAAC,WAAA4H,IAEA7H,EAAAwF,aAAA,UAAA1Y,MAAA8f,gBAAA5M,EAAAC,WAAA4H,GAAAvU,MAAA,IAIAoC,EAAA8rB,mCAGAyJ,EAAAyJ,eAAApZ,EAAAE,EAAAyB,uCAAAmF,iBAKA1sB,EAAAksB,cAAA6R,IAEA/9B,EAAAksB,YAAAzsB,GAAAO,EAAAksB,YAAAzsB,GAIA81B,EAAAv1B,YASAioB,EAAA54B,UAAAsrC,aAAA,SAAA7pB,GAEA,IAKAmuB,EAJAnY,EAAAh3B,KAAAg3B,KACAlB,EAAA91B,KAAA81B,WACAuD,EAAArC,EAAA9rB,UAAA8V,GAGAoY,KACAgW,EAAA/V,EAAAvD,eAEAyD,KAEA,GAAA6V,EAAApZ,EAAAyB,uCAAA,CAEA,IAAA4X,EAAAvZ,EAAAE,EAAAyB,uCACA0X,EAAAE,EAAApW,kBACAM,EAAAx6B,KAAAswC,EAAAlW,aAAAC,EAAAC,EAfAr5B,YAiBG,GAAAovC,EAAApZ,EAAAuB,qBAAA,CAEH,IAAA+X,EAAAxZ,EAAAE,EAAAuB,qBACA4X,EAAAG,EAAArW,kBACAM,EAAAx6B,KAAAuwC,EAAAnW,aAAAC,EAAAC,EArBAr5B,WAuBG,CAKHmvC,EAAA7nC,MAAAioC,qBAEA,IAAA/V,EAAAH,EAAAI,yBAKA,GAHAL,EAAAroB,MAAA,IAAAzJ,MAAA0J,MAAA,OACAooB,EAAAxnB,QAAA,EAEAtS,MAAAL,QAAAu6B,EAAAE,iBAAA,CAEA,IAAA5rB,EAAA0rB,EAAAE,gBAEAN,EAAAroB,MAAAE,UAAAnD,GACAsrB,EAAAxnB,QAAA9D,EAAA,QAIAtO,IAAAg6B,EAAAG,kBAEAJ,EAAAx6B,KA9CAiB,KA8CA45B,cAAAR,EAAA,MAAAI,EAAAG,mBAIAP,EAAA0B,eAAAt7B,IAAAg6B,EAAAgW,eAAAhW,EAAAgW,eAAA,EACApW,EAAAyB,eAAAr7B,IAAAg6B,EAAAiW,gBAAAjW,EAAAiW,gBAAA,OAEAjwC,IAAAg6B,EAAAkW,2BAEAnW,EAAAx6B,KAvDAiB,KAuDA45B,cAAAR,EAAA,eAAAI,EAAAkW,2BACAnW,EAAAx6B,KAxDAiB,KAwDA45B,cAAAR,EAAA,eAAAI,EAAAkW,6BAMA,IAAArW,EAAAsW,cAEAvW,EAAAwW,KAAAtoC,MAAAuoC,YAIA,IAAAC,EAAAzW,EAAAyW,WAAAtL,EAwDA,OAtDAsL,IAAAtL,EAEApL,EAAAvnB,aAAA,GAIAunB,EAAAvnB,aAAA,EAEAi+B,IAAAtL,IAEApL,EAAA2W,eAAAvwC,IAAA65B,EAAA2W,YAAA3W,EAAA2W,YAAA,UAMAxwC,IAAA65B,EAAA4W,eAAAd,IAAA7nC,MAAA4xB,oBAEAK,EAAAx6B,KAxFAiB,KAwFA45B,cAAAR,EAAA,YAAAC,EAAA4W,gBAEA7W,EAAAgD,YAAA,IAAA90B,MAAA4oC,QAAA,UAEA1wC,IAAA65B,EAAA4W,cAAA9zB,OAEAid,EAAAgD,YAAA72B,IAAA8zB,EAAA4W,cAAA9zB,MAAAkd,EAAA4W,cAAA9zB,aAMA3c,IAAA65B,EAAA8W,kBAAAhB,IAAA7nC,MAAA4xB,oBAEAK,EAAAx6B,KAtGAiB,KAsGA45B,cAAAR,EAAA,QAAAC,EAAA8W,wBAEA3wC,IAAA65B,EAAA8W,iBAAAC,WAEAhX,EAAA+C,eAAA9C,EAAA8W,iBAAAC,gBAMA5wC,IAAA65B,EAAAgX,gBAAAlB,IAAA7nC,MAAA4xB,oBAEAE,EAAA9nB,UAAA,IAAAhK,MAAA0J,OAAAC,UAAAooB,EAAAgX,sBAIA7wC,IAAA65B,EAAAiX,iBAAAnB,IAAA7nC,MAAA4xB,mBAEAK,EAAAx6B,KAxHAiB,KAwHA45B,cAAAR,EAAA,cAAAC,EAAAiX,kBAIAvX,QAAAc,IAAAN,GAAA8F,KAAA,WAEA,IAAAnvB,EAuBA,OAnBAA,EAFAi/B,IAAA7nC,MAAA0yB,eAEAlE,EAAAE,EAAAyB,uCAAAoE,eAAAzC,GAIA,IAAA+V,EAAA/V,QAIA55B,IAAA65B,EAAA1qB,OAAAuB,EAAAvB,KAAA0qB,EAAA1qB,MAGAuB,EAAAuC,MAAAvC,EAAAuC,IAAAC,SAAApL,MAAAqL,cACAzC,EAAA2C,cAAA3C,EAAA2C,YAAAH,SAAApL,MAAAqL,cACAzC,EAAA+C,cAAA/C,EAAA+C,YAAAP,SAAApL,MAAAqL,cAEA0yB,EAAAn1B,EAAAmpB,GAEAA,EAAAvD,YAAAkP,EAAAlP,EAAA5lB,EAAAmpB,GAEAnpB,KAkQAioB,EAAA54B,UAAAgxC,eAAA,SAAAC,GAEA,IAAAlX,EAAAt5B,KACA81B,EAAA91B,KAAA81B,WACAkQ,EAAAhmC,KAAAomC,eAEA,SAAAqK,EAAApS,GAEA,OAAAvI,EAAAE,EAAA2B,4BACAyG,gBAAAC,EAAA/E,GACA+F,KAAA,SAAA7kB,GAEA,OAAA8rB,EAAA9rB,EAAA6jB,EAAA/E,KAQA,IAFA,IArpCAiN,EAEAmK,EAmpCAnX,KAEAr3B,EAAA,EAAAw6B,EAAA8T,EAAA3wC,OAA0CqC,EAAAw6B,EAAQx6B,IAAA,CAElD,IAaAyuC,EAbAtS,EAAAmS,EAAAtuC,GACAmoC,QAxpCAqG,MAFAnK,EA0pCAlI,GAxpCAvI,YAAAyQ,EAAAzQ,WAAAE,EAAA2B,6BAKA,SAAA+Y,EAAAnS,WACA,IAAAmS,EAAAr8B,QACA,IAAAwxB,EAAA6K,EAAAj2B,YAIA8rB,EAAAlyB,QAAA,IAAAwxB,EAAAU,EAAA9rB,YAAA,IAAA8rB,EAAAqK,MAgpCAC,EAAA7K,EAAAqE,GAEA,GAAAwG,EAGAtX,EAAAx6B,KAAA8xC,EAAAC,cASAH,EAHAtS,EAAAvI,YAAAuI,EAAAvI,WAAAE,EAAA2B,4BAGA8Y,EAAApS,GAKAiI,EAAA,IAAAh/B,MAAAiY,eAAA8e,EAAA/E,GAKA0M,EAAAqE,IAAyBhM,YAAAyS,QAAAH,GAEzBpX,EAAAx6B,KAAA4xC,GAMA,OAAA5X,QAAAc,IAAAN,IASApB,EAAA54B,UAAAkrC,SAAA,SAAAsG,GAUA,IARA,IAv3CA/K,EAu3CA1M,EAAAt5B,KAGA0lC,EAFA1lC,KAAAg3B,KAEAyS,OAAAsH,GACAP,EAAA9K,EAAA8K,WAEAjX,KAEAr3B,EAAA,EAAAw6B,EAAA8T,EAAA3wC,OAA0CqC,EAAAw6B,EAAQx6B,IAAA,CAElD,IAAAgO,OAAA1Q,IAAAgxC,EAAAtuC,GAAAgO,eA/3CA1Q,KAFAwmC,EAk4CAhmC,KAAAgmC,OAh4CA,kBAEAA,EAAA,oBAAA1+B,MAAAioC,sBACAx+B,MAAA,SACAO,SAAA,EACAwpB,UAAA,EACAD,UAAA,EACAhpB,aAAA,EACAm/B,WAAA,EACApB,KAAAtoC,MAAA2pC,aAKAjL,EAAA,iBAm3CAhmC,KAAAo/B,cAAA,WAAAoR,EAAAtuC,GAAAgO,UAEAqpB,EAAAx6B,KAAAmR,GAMA,OAFAqpB,EAAAx6B,KAAAu6B,EAAAiX,eAAAC,IAEAzX,QAAAc,IAAAN,GAAA8F,KAAA,SAAA6R,GAOA,IALA,IAAAhmC,EAAAgmC,EAAA5mC,MAAA,EAAA4mC,EAAArxC,OAAA,GACAsxC,EAAAD,IAAArxC,OAAA,GAEA4pC,KAEAvnC,EAAA,EAAAw6B,EAAAyU,EAAAtxC,OAA2CqC,EAAAw6B,EAAQx6B,IAAA,CAEnD,IAKAujC,EALAjrB,EAAA22B,EAAAjvC,GACAm8B,EAAAmS,EAAAtuC,GAMAgO,EAAAhF,EAAAhJ,GAEA,GAAAm8B,EAAAuS,OAAAxP,GACA/C,EAAAuS,OAAAxP,GACA/C,EAAAuS,OAAAxP,QACA5hC,IAAA6+B,EAAAuS,MAOA,KAJAnL,GAAA,IAAAC,EAAA0E,cACA,IAAA9iC,MAAAwT,YAAAN,EAAAtK,GACA,IAAA5I,MAAA0T,KAAAR,EAAAtK,IAEAk6B,eAAA3E,EAAAjrB,SAAAC,WAAA22B,WAAAjS,YAIAsG,EAAA1qB,uBAIAsjB,EAAAuS,OAAAxP,EAEAqE,EAAAjrB,SAAA6tB,EAAA5C,EAAAjrB,SAAAlT,MAAA+pC,uBAEMhT,EAAAuS,OAAAxP,IAENqE,EAAAjrB,SAAA6tB,EAAA5C,EAAAjrB,SAAAlT,MAAAqhC,2BAIK,GAAAtK,EAAAuS,OAAAxP,EAELqE,EAAA,IAAAn+B,MAAAgqC,aAAA92B,EAAAtK,QAEK,GAAAmuB,EAAAuS,OAAAxP,EAELqE,EAAA,IAAAn+B,MAAA+T,KAAAb,EAAAtK,QAEK,GAAAmuB,EAAAuS,OAAAxP,EAELqE,EAAA,IAAAn+B,MAAAiqC,SAAA/2B,EAAAtK,OAEK,IAAAmuB,EAAAuS,OAAAxP,EAML,UAAA14B,MAAA,iDAAA21B,EAAAuS,MAJAnL,EAAA,IAAAn+B,MAAAsf,OAAApM,EAAAtK,GAQAlL,OAAAC,KAAAwgC,EAAAjrB,SAAA4D,iBAAAve,OAAA,GAEA2lC,EAAAC,EAAAC,GAIAD,EAAA92B,KAAA+2B,EAAA/2B,MAAA,QAAAoiC,EAEAI,EAAAtxC,OAAA,IAAA4lC,EAAA92B,MAAA,IAAAzM,GAEAmjC,EAAAI,EAAAC,GAEApM,EAAA0U,oBAAAvI,GAEAgE,EAAA1qC,KAAA0mC,GAIA,OAAAgE,EAAA5pC,OAEA,OAAA4pC,EAAA,GAIA,IAAA+H,EAAA,IAAAlqC,MAAAgO,MAEA,IAAApT,EAAA,EAAAw6B,EAAA+M,EAAA5pC,OAAuCqC,EAAAw6B,EAAQx6B,IAE/CsvC,EAAAx7B,IAAAyzB,EAAAvnC,IAIA,OAAAsvC,KAWArZ,EAAA54B,UAAAyrC,WAAA,SAAAyG,GAEA,IAAA1U,EACA2U,EAAA1xC,KAAAg3B,KAAAkS,QAAAuI,GACA3V,EAAA4V,IAAArkC,MAEA,GAAAyuB,EAqBA,MAdA,gBAAA4V,EAAArkC,KAEA0vB,EAAA,IAAAz1B,MAAA0R,kBAAA1R,MAAAwS,KAAA63B,SAAA7V,EAAA8V,MAAA9V,EAAA+V,aAAA,EAAA/V,EAAAgW,OAAA,EAAAhW,EAAAiW,MAAA,KAEG,iBAAAL,EAAArkC,OAEH0vB,EAAA,IAAAz1B,MAAA4R,mBAAA4iB,EAAAkW,MAAA,EAAAlW,EAAAkW,KAAA,EAAAlW,EAAAmW,KAAA,EAAAnW,EAAAmW,MAAA,EAAAnW,EAAAgW,MAAAhW,EAAAiW,YAIAvyC,IAAAkyC,EAAA/iC,OAAAouB,EAAApuB,KAAA+iC,EAAA/iC,MAEA02B,EAAAtI,EAAA2U,GAEA3Y,QAAAC,QAAA+D,GAnBAnvB,QAAAC,KAAA,iDA4BAsqB,EAAA54B,UAAAurC,SAAA,SAAAlB,GAEA,IAAAsI,EAAAlyC,KAAAg3B,KAAAuS,MAAAK,GAEAuI,GAAmBrI,OAAAoI,EAAApI,QAEnB,YAAAtqC,IAAA0yC,EAAAE,oBAEArZ,QAAAC,QAAAmZ,GAIAnyC,KAAAo/B,cAAA,WAAA8S,EAAAE,qBAAA/S,KAAA,SAAAqH,GAIA,OAFAyL,EAAAC,oBAAA1L,EAEAyL,KAWAha,EAAA54B,UAAAwrC,cAAA,SAAAsH,GAYA,IAVA,IAEAC,EAFAtyC,KAAAg3B,KAEAngB,WAAAw7B,GAEAE,KACAC,KACAC,KACAC,KACAC,KAEAzwC,EAAA,EAAAw6B,EAAA4V,EAAAM,SAAA/yC,OAAqDqC,EAAAw6B,EAAQx6B,IAAA,CAE7D,IAAA2wC,EAAAP,EAAAM,SAAA1wC,GACAurC,EAAA6E,EAAA5E,SAAAmF,EAAApF,SACArnC,EAAAysC,EAAAzsC,OACAuI,OAAAnP,IAAA4G,EAAAiQ,KAAAjQ,EAAAiQ,KAAAjQ,EAAAsG,GACAomC,OAAAtzC,IAAA8yC,EAAA/hC,WAAA+hC,EAAA/hC,WAAAk9B,EAAAqF,OAAArF,EAAAqF,MACAC,OAAAvzC,IAAA8yC,EAAA/hC,WAAA+hC,EAAA/hC,WAAAk9B,EAAAsF,QAAAtF,EAAAsF,OAEAR,EAAAxzC,KAAAiB,KAAAo/B,cAAA,OAAAzwB,IACA6jC,EAAAzzC,KAAAiB,KAAAo/B,cAAA,WAAA0T,IACAL,EAAA1zC,KAAAiB,KAAAo/B,cAAA,WAAA2T,IACAL,EAAA3zC,KAAA0uC,GACAkF,EAAA5zC,KAAAqH,GAIA,OAAA2yB,QAAAc,KAEAd,QAAAc,IAAA0Y,GACAxZ,QAAAc,IAAA2Y,GACAzZ,QAAAc,IAAA4Y,GACA1Z,QAAAc,IAAA6Y,GACA3Z,QAAAc,IAAA8Y,KAEAtT,KAAA,SAAA2J,GAUA,IARA,IAAAK,EAAAL,EAAA,GACAgK,EAAAhK,EAAA,GACAiK,EAAAjK,EAAA,GACA0E,EAAA1E,EAAA,GACAhC,EAAAgC,EAAA,GAEAjf,KAEA7nB,EAAA,EAAAw6B,EAAA2M,EAAAxpC,OAAsCqC,EAAAw6B,EAAQx6B,IAAA,CAE9C,IAAAmU,EAAAgzB,EAAAnnC,GACAgxC,EAAAF,EAAA9wC,GACAixC,EAAAF,EAAA/wC,GACAurC,EAAAC,EAAAxrC,GACAkE,EAAA4gC,EAAA9kC,GAEA,QAAA1C,IAAA6W,EAAA,CAKA,IAAA+8B,EAEA,OALA/8B,EAAAgnB,eACAhnB,EAAA+mB,kBAAA,EAIA6G,EAAA79B,EAAAgD,OAEA,KAAA66B,EAAA3vB,QAEA8+B,EAAA9rC,MAAA2kB,oBACA,MAEA,KAAAgY,EAAAloB,SAEAq3B,EAAA9rC,MAAAukB,wBACA,MAEA,KAAAoY,EAAAlnB,SACA,KAAAknB,EAAA9nB,MACA,QAEAi3B,EAAA9rC,MAAA8jB,oBAKA,IAAAioB,EAAAh9B,EAAA1H,KAAA0H,EAAA1H,KAAA0H,EAAAiI,KAEAg1B,OAAA9zC,IAAAiuC,EAAA6F,cAAApP,EAAAuJ,EAAA6F,eAAAhsC,MAAA+8B,kBAEAuB,KAEA3B,EAAA79B,EAAAgD,QAAA66B,EAAA3vB,QAGA+B,EAAAD,SAAA,SAAA8uB,IAEA,IAAAA,EAAA/mB,QAAA+mB,EAAAS,uBAEAC,EAAA7mC,KAAAmmC,EAAAv2B,KAAAu2B,EAAAv2B,KAAAu2B,EAAA5mB,QAQAsnB,EAAA7mC,KAAAs0C,GAIA,IAAAE,EAAAJ,EAAArlC,MAEA,GAAAqlC,EAAAhU,WAAA,CAEA,IAAAhjB,EAEA,GAAAo3B,EAAAl0C,cAAAiiC,UAEAnlB,EAAA,WAEM,GAAAo3B,EAAAl0C,cAAA0O,WAENoO,EAAA,WAEM,GAAAo3B,EAAAl0C,aAAAoiC,WAENtlB,EAAA,YAEM,IAAAo3B,EAAAl0C,cAAAsiC,YAMN,UAAAj5B,MAAA,iEAJAyT,EAAA,QAUA,IAFA,IAAAq3B,EAAA,IAAA9uB,aAAA6uB,EAAA1zC,QAEA2iB,EAAA,EAAAixB,EAAAF,EAAA1zC,OAA8C2iB,EAAAixB,EAAQjxB,IAEtDgxB,EAAAhxB,GAAA+wB,EAAA/wB,GAAArG,EAIAo3B,EAAAC,EAIA,IAAAhxB,EAAA,EAAAixB,EAAA7N,EAAA/lC,OAA6C2iB,EAAAixB,EAAQjxB,IAAA,CAErD,IAAAkxB,EAAA,IAAAN,EACAxN,EAAApjB,GAAA,IAAAyhB,EAAA79B,EAAAgD,MACA8pC,EAAAplC,MACAylC,EACAD,GAIA,gBAAA7F,EAAA6F,gBAEAI,EAAAC,kBAAA,SAAA70C,GAMA,WAAAg/B,EAAA99B,KAAAyoB,MAAAzoB,KAAAuP,OAAAvP,KAAA4zC,eAAA,EAAA90C,IAKA40C,EAAAC,kBAAAE,2CAAA,GAIA9pB,EAAAhrB,KAAA20C,KAMA,IAAA/kC,OAAAnP,IAAA8yC,EAAA3jC,KAAA2jC,EAAA3jC,KAAA,aAAA0jC,EAEA,WAAA/qC,MAAA6iB,cAAAxb,OAAAnP,EAAAuqB,MAWAoO,EAAA54B,UAAAirC,SAAA,SAAAR,GAEA,IAWAzQ,EAXAvC,EAAAh3B,KAAAg3B,KACAlB,EAAA91B,KAAA81B,WACAwD,EAAAt5B,KAEA0pC,EAAA1S,EAAA0S,eACAC,EAAA3S,EAAA2S,SAEAO,EAAAlT,EAAAqS,MAAAW,GAEA,OAEAzQ,UAEA/5B,IAAA0qC,EAAAzE,MAEAlM,EAAAx6B,KAAAu6B,EAAA8F,cAAA,OAAA8K,EAAAzE,MAAApG,KAAA,SAAAoG,GAEA,IAAApvB,EAEA,GAAAqzB,EAAAQ,EAAAzE,MAAA,GAEA,IAAAqO,EAAAnK,EAAAO,EAAAzE,SAEApvB,EAAAovB,EAAA9mB,SACAhQ,MAAA,aAAAmlC,EAGAz9B,EAAA64B,eAAAzJ,EAAAyJ,eAEA,QAAAhtC,EAAA,EAAAw6B,EAAArmB,EAAArK,SAAAnM,OAAiDqC,EAAAw6B,EAAQx6B,IAEzDmU,EAAArK,SAAA9J,GAAAyM,MAAA,aAAAmlC,EACAz9B,EAAArK,SAAA9J,GAAAgtC,eAAAzJ,EAAAz5B,SAAA9J,GAAAgtC,oBAMA74B,EAAAovB,EAqBA,YAhBAjmC,IAAA0qC,EAAA51B,SAEA+B,EAAAD,SAAA,SAAA29B,GAEA,GAAAA,EAAA51B,OAEA,QAAAjc,EAAA,EAAAw6B,EAAAwN,EAAA51B,QAAAzU,OAAoDqC,EAAAw6B,EAAQx6B,IAE5D6xC,EAAApO,sBAAAzjC,GAAAgoC,EAAA51B,QAAApS,KAQAmU,UAMA7W,IAAA0qC,EAAAnN,QAEAxD,EAAAx6B,KAAAu6B,EAAA8F,cAAA,SAAA8K,EAAAnN,SAIAmN,EAAApU,YACAoU,EAAApU,WAAAE,EAAAqB,2BACA73B,IAAA0qC,EAAApU,WAAAE,EAAAqB,qBAAA2c,OAEAza,EAAAx6B,KAAAu6B,EAAA8F,cAAA,QAAA8K,EAAApU,WAAAE,EAAAqB,qBAAA2c,QAIAjb,QAAAc,IAAAN,IAEG8F,KAAA,SAAA4G,GAEH,IAAA5vB,EAqBA,IAhBAA,GAFA,IAAA6zB,EAAAH,OAEA,IAAAziC,MAAA8P,KAEI6uB,EAAApmC,OAAA,EAEJ,IAAAyH,MAAAgO,MAEI,IAAA2wB,EAAApmC,OAEJomC,EAAA,GAIA,IAAA3+B,MAAAyQ,YAIAkuB,EAAA,GAEA,QAAA/jC,EAAA,EAAAw6B,EAAAuJ,EAAApmC,OAAyCqC,EAAAw6B,EAAQx6B,IAEjDmU,EAAAL,IAAAiwB,EAAA/jC,IAiBA,QAXA1C,IAAA0qC,EAAAv7B,OAEA0H,EAAAC,SAAA3H,KAAAu7B,EAAAv7B,KACA0H,EAAA1H,KAAArH,MAAA+P,gBAAAC,iBAAA4yB,EAAAv7B,OAIA02B,EAAAhvB,EAAA6zB,GAEAA,EAAApU,YAAAkP,EAAAlP,EAAAzf,EAAA6zB,QAEA1qC,IAAA0qC,EAAAzzB,OAAA,CAEA,IAAAA,EAAA,IAAAnP,MAAAkN,QACAiC,EAAAxF,UAAAi5B,EAAAzzB,QACAJ,EAAAO,YAAAH,aAIAjX,IAAA0qC,EAAAvuB,aAEAtF,EAAA0G,SAAA9L,UAAAi5B,EAAAvuB,kBAIAnc,IAAA0qC,EAAAnuB,UAEA1F,EAAAmV,WAAAva,UAAAi5B,EAAAnuB,eAIAvc,IAAA0qC,EAAA/tB,OAEA9F,EAAA8F,MAAAlL,UAAAi5B,EAAA/tB,OAMA,OAAA9F,KAWA8hB,EAAA54B,UAAAgrC,UAAA,WAIA,SAAA0J,EAAAC,EAAAC,EAAAnd,EAAAsC,GAEA,IAAA4Q,EAAAlT,EAAAqS,MAAA6K,GAEA,OAAA5a,EAAA8F,cAAA,OAAA8U,GAAA7U,KAAA,SAAAhpB,GAEA,YAAA7W,IAAA0qC,EAAAC,KAAA9zB,EAMAijB,EAAA8F,cAAA,OAAA8K,EAAAC,MAAA9K,KAAA,SAAA8K,GAMA,IAFA,IAAAiK,KAEAlyC,EAAA,EAAAw6B,GAJAyV,EAAAhI,GAIAL,OAAAjqC,OAAmDqC,EAAAw6B,EAAQx6B,IAE3DkyC,EAAAr1C,KAAAu6B,EAAA8F,cAAA,OAAA+S,EAAArI,OAAA5nC,KAIA,OAAA62B,QAAAc,IAAAua,KAEK/U,KAAA,SAAAgV,GAuCL,OArCAh+B,EAAAD,SAAA,SAAAqvB,GAEA,GAAAA,EAAAtnB,OAAA,CAKA,IAHA,IAAAvJ,KACA0/B,KAEA9xB,EAAA,EAAAixB,EAAAY,EAAAx0C,OAA8C2iB,EAAAixB,EAAQjxB,IAAA,CAEtD,IAAA+xB,EAAAF,EAAA7xB,GAEA,GAAA+xB,EAAA,CAEA3/B,EAAA7V,KAAAw1C,GAEA,IAAA91B,EAAA,IAAAnX,MAAAkN,aAEAhV,IAAA2yC,EAAAC,qBAEA3zB,EAAAxN,UAAAkhC,EAAAC,oBAAAtkC,MAAA,GAAA0U,GAIA8xB,EAAAv1C,KAAA0f,QAIA7Q,QAAAC,KAAA,mDAAAskC,EAAArI,OAAAtnB,IAMAijB,EAAApoB,KAAA,IAAA/V,MAAAgW,SAAA1I,EAAA0/B,GAAA7O,EAAA/tB,gBAIArB,IAvDA,IAAA87B,IA2DI9S,KAAA,SAAAhpB,GAIJ89B,EAAAn+B,IAAAK,GAEA,IAAAkjB,KAEA,GAAA2Q,EAAAl+B,SAIA,IAFA,IAAAA,EAAAk+B,EAAAl+B,SAEA9J,EAAA,EAAAw6B,EAAA1wB,EAAAnM,OAA2CqC,EAAAw6B,EAAQx6B,IAAA,CAEnD,IAAAmQ,EAAArG,EAAA9J,GACAq3B,EAAAx6B,KAAAk1C,EAAA5hC,EAAAgE,EAAA2gB,EAAAsC,IAMA,OAAAP,QAAAc,IAAAN,KAMA,gBAAAib,GAEA,IAAAxd,EAAAh3B,KAAAg3B,KACAlB,EAAA91B,KAAA81B,WACA2e,EAAAz0C,KAAAg3B,KAAAiS,OAAAuL,GAGA1X,EAAA,IAAAx1B,MAAAotC,WACAl1C,IAAAi1C,EAAA9lC,OAAAmuB,EAAAnuB,KAAA8lC,EAAA9lC,MAEA02B,EAAAvI,EAAA2X,GAEAA,EAAA3e,YAAAkP,EAAAlP,EAAAgH,EAAA2X,GAMA,IAJA,IAAAE,EAAAF,EAAApL,UAEA9P,KAEAr3B,EAAA,EAAAw6B,EAAAiY,EAAA90C,OAAwCqC,EAAAw6B,EAAQx6B,IAEhDq3B,EAAAx6B,KAAAk1C,EAAAU,EAAAzyC,GAAA46B,EAAA9F,EAfAh3B,OAmBA,OAAA+4B,QAAAc,IAAAN,GAAA8F,KAAA,WAEA,OAAAvC,KA9HA,GAsIA7H,EAxtGA,mECkCA3tB,MAAAstC,QC3CgB;0FACyE,WAEvF,IAAI/tB,OAAI,EAAQguB,EAAK70C,KAErB,SAASiC,EAAE6yC,EAAGC,GACZ,IAESvf,EAFL/uB,EAAIquC,EAAExuC,MAAM,KAAMI,EAAImuC,IACxBpuC,EAAE,KAAMC,IAAMA,EAAEsuC,YAActuC,EAAEsuC,WAAW,OAASvuC,EAAE,IACxD,KAAYA,EAAE5G,SAAW21B,EAAI/uB,EAAEwuC,UAAYxuC,EAAE5G,QAAUk1C,IAAMluB,EAAengB,EAAIA,EAAE8uB,GAAK9uB,EAAE8uB,GAAK9uB,EAAE8uB,MAA/B9uB,EAAE8uB,GAAKuf,EACxE,IAAI7U,EAAI,oBAAuBnyB,YAAc,oBAAuB4zB,aAAe,oBAAuBE,aAAe,oBAAuB15B,SAElJ,SAAS3F,EAAEsyC,GACT,IAAuDtf,EAAGt1B,EAAG+d,EAAGi3B,EAAG5zC,EAAG6zC,EAAG9zC,EAAG5C,EAAG22C,EAAG1lC,EAA9EqlC,EAAID,EAAEj1C,OAAQ4G,EAAI,EAAGC,EAAI2uC,OAAOC,kBACpC,IAAK72C,EAAI,EAAGA,EAAIs2C,IAAKt2C,EAAGq2C,EAAEr2C,GAAKgI,IAAMA,EAAIquC,EAAEr2C,IAAKq2C,EAAEr2C,GAAKiI,IAAMA,EAAIouC,EAAEr2C,IAKnE,IAJA+2B,EAAI,GAAK/uB,EACTvG,EAAI,IAAKggC,EAAI2B,YAAcviC,OAAOk2B,GAClCvX,EAAI,EACJi3B,EAAI,EACC5zC,EAAI,EAAG2c,GAAKxX,GAAI,CACnB,IAAKhI,EAAI,EAAGA,EAAIs2C,IAAKt2C,EAAG,GAAIq2C,EAAEr2C,KAAOwf,EAAG,CAGtC,IAFAk3B,EAAI,EACJ9zC,EAAI6zC,EACCE,EAAI,EAAGA,EAAIn3B,IAAKm3B,EAAGD,EAAIA,GAAK,EAAQ,EAAJ9zC,EAAOA,IAAM,EAElD,IADAqO,EAAIuO,GAAK,GAAKxf,EACT22C,EAAID,EAAGC,EAAI5f,EAAG4f,GAAK9zC,EAAGpB,EAAEk1C,GAAK1lC,IAChCwlC,IAEFj3B,EACFi3B,IAAM,EACN5zC,IAAM,EAER,OAAQpB,EAAGuG,EAAGC,GAGhB,SAAS6uC,EAAET,EAAGC,GASZ,OARA/0C,KAAKie,KACLje,KAAKk1C,EAAI,MACTl1C,KAAK+0C,EAAI/0C,KAAKE,EAAIF,KAAKyG,EAAIzG,KAAK6mB,EAAI,EACpC7mB,KAAK8yC,MAAQ5S,EAAI,IAAInyB,WAAW+mC,GAAKA,EACrC90C,KAAKm1C,GAAI,EACTn1C,KAAKkC,EAAIyN,EACT3P,KAAKiC,GAAI,GACL8yC,IAAOA,QAASA,EAAE7zC,QAAUlB,KAAKyG,EAAIsuC,EAAE7zC,OAAQ6zC,EAAES,aAAex1C,KAAKk1C,EAAIH,EAAES,YAAaT,EAAEU,aAAez1C,KAAKkC,EAAI6yC,EAAEU,YAAaV,EAAEW,SAAW11C,KAAKiC,EAAI8yC,EAAEW,SACrJ11C,KAAKkC,GACX,KAAKnC,EACHC,KAAK0G,EAAI,MACT1G,KAAK80C,EAAI,IAAK5U,EAAInyB,WAAazO,OAAO,MAAQU,KAAKk1C,EAAI,KACvD,MACF,KAAKvlC,EACH3P,KAAK0G,EAAI,EACT1G,KAAK80C,EAAI,IAAK5U,EAAInyB,WAAazO,OAAOU,KAAKk1C,GAC3Cl1C,KAAKw1B,EAAIx1B,KAAKipB,EACdjpB,KAAKqB,EAAIrB,KAAKwC,EACdxC,KAAKwiB,EAAIxiB,KAAKu1C,EACd,MACF,QACE,MAAM7sC,MAAM,yBAIlB,IAAI3I,EAAI,EAAG4P,EAAI,EAAGgmC,GAAKzV,EAAGngC,EAAGq1C,EAAGzlC,GAChC4lC,EAAEh2C,UAAU+B,EAAI,WACd,MAAQtB,KAAKm1C,GAAI,CACf,IAAIL,EAAI11C,EAAEY,KAAM,GAGhB,OAFI,EAAJ80C,IAAU90C,KAAKm1C,GAAI,GACnBL,KAAO,GAEL,KAAK,EACH,IAAIC,EAAI/0C,KAAK8yC,MAAOrsC,EAAIzG,KAAKyG,EAAGC,EAAI1G,KAAK80C,EAAGtf,EAAIx1B,KAAK0G,EAAGxG,EAAI60C,EAAEl1C,OAAQoe,EAAI4I,EAAUvlB,EAAIoF,EAAE7G,OAAQs1C,EAAItuB,EAEtG,GADA7mB,KAAK+0C,EAAI/0C,KAAKE,EAAI,EACduG,EAAI,GAAKvG,EAAG,MAAMwI,MAAM,0CAE5B,GADAuV,EAAI82B,EAAEtuC,KAAOsuC,EAAEtuC,MAAQ,EACnBA,EAAI,GAAKvG,EAAG,MAAMwI,MAAM,2CAE5B,GAAIuV,MADA82B,EAAEtuC,KAAOsuC,EAAEtuC,MAAQ,GACT,MAAMiC,MAAM,oDAC1B,GAAIjC,EAAIwX,EAAI82B,EAAEl1C,OAAQ,MAAM6I,MAAM,0BAClC,OAAQ1I,KAAKkC,GACX,KAAKnC,EACH,KAAOy1B,EACAvX,EAAIvX,EAAE7G,QAAS,CAGpB,GADAoe,GADAk3B,EAAI7zC,EAAIk0B,EAEJ0K,EAAGx5B,EAAEnB,IAAIwvC,EAAEa,SAASnvC,EAAGA,EAAI0uC,GAAI3f,GAAIA,GAAK2f,EAAG1uC,GAAK0uC,OAAQ,KAAOA,KAAMzuC,EAAE8uB,KAAOuf,EAAEtuC,KACpFzG,KAAK0G,EAAI8uB,EACT9uB,EAAI1G,KAAKw1B,IACTA,EAAIx1B,KAAK0G,EAEX,MACF,KAAKiJ,EACH,KAAO6lB,EAAIvX,EAAIvX,EAAE7G,QAAS6G,EAAI1G,KAAKw1B,GAAG/2B,EAAG,IACzC,MACF,QACE,MAAMiK,MAAM,wBAEhB,GAAIw3B,EAAGx5B,EAAEnB,IAAIwvC,EAAEa,SAASnvC,EAAGA,EAAIwX,GAAIuX,GAAIA,GAAKvX,EAAGxX,GAAKwX,OAAQ,KAAOA,KAAMvX,EAAE8uB,KAAOuf,EAAEtuC,KACpFzG,KAAKyG,EAAIA,EACTzG,KAAK0G,EAAI8uB,EACTx1B,KAAK80C,EAAIpuC,EACT,MACF,KAAK,EACH1G,KAAKwiB,EAAEqzB,EAAIC,GACX,MACF,KAAK,EACE,IAA8Gn2C,EAAO6qB,EAAOurB,EAA0CC,EAAlK30C,EAAIjC,EAAEY,KAAM,GAAK,IAAKvB,EAAIW,EAAEY,KAAM,GAAK,EAAGo1C,EAAIh2C,EAAEY,KAAM,GAAK,EAAG0P,EAAI,IAAKwwB,EAAInyB,WAAazO,OAAO8F,EAAEvF,QAA8Bo2C,EAAIpvB,EAAGqvB,EAAIrvB,EAAG9f,EAAI8f,EAAGoC,EAAIpC,EAAGsvB,EAAItvB,EAAxK,IAAkLsvB,EAAI,EAAGA,EAAIf,IAAKe,EAAGzmC,EAAEtK,EAAE+wC,IACvM/2C,EAAEY,KAAM,GACV,IAAKkgC,EAEH,IADAiW,EAAIf,EACCA,EAAI1lC,EAAE7P,OAAQs2C,EAAIf,IAAKe,EAAGzmC,EAAEtK,EAAE+wC,IAAM,EAK3C,IAHAx2C,EAAI6C,EAAEkN,GACNumC,EAAI,IAAK/V,EAAInyB,WAAazO,OAAO+B,EAAI5C,GACrC03C,EAAI,EACCH,EAAI30C,EAAI5C,EAAG03C,EAAIH,GAAI,OAAQE,EAAIE,EAAEp2C,KAAML,IAC1C,KAAK,GACH,IAAKspB,EAAI,EAAI7pB,EAAEY,KAAM,GAAIipB,KAAMgtB,EAAEE,KAAOpvC,EACxC,MACF,KAAK,GACH,IAAKkiB,EAAI,EAAI7pB,EAAEY,KAAM,GAAIipB,KAAMgtB,EAAEE,KAAO,EACxCpvC,EAAI,EACJ,MACF,KAAK,GACH,IAAKkiB,EAAI,GAAK7pB,EAAEY,KAAM,GAAIipB,KAAMgtB,EAAEE,KAAO,EACzCpvC,EAAI,EACJ,MACF,QACEA,EAAIkvC,EAAEE,KAAOD,EAEjB1rB,EAAQhoB,EAAJ09B,EAAM+V,EAAEL,SAAS,EAAGv0C,GAAQ40C,EAAE3rC,MAAM,EAAGjJ,IAC3C00C,EAAQvzC,EAAJ09B,EAAM+V,EAAEL,SAASv0C,GAAQ40C,EAAE3rC,MAAMjJ,IACrCrB,KAAKwiB,EAAEgI,EAAGurB,GACV,MACF,QACE,MAAMrtC,MAAM,kBAAoBosC,IAGtC,OAAO90C,KAAKqB,KAEd,IAQqFwD,EAAGwxC,EARpFxvC,GAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAKzB,EAAI86B,EAAI,IAAIyB,YAAY96B,GAAKA,EACvGyvC,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7HC,EAAIrW,EAAI,IAAIyB,YAAY2U,GAAKA,EAC7BE,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/FC,EAAIvW,EAAI,IAAInyB,WAAWyoC,GAAKA,EAC5BE,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OAC5IC,EAAKzW,EAAI,IAAIyB,YAAY+U,GAAKA,EAC9BE,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1F,GAAI,IAAKC,EAAI3W,EAAI,IAAInyB,WAAW6oC,GAAMA,EAAI7yC,EAAI,IAAKm8B,EAAInyB,WAAazO,OAAO,KAE/E,IADAuF,EAAI,EACCwxC,EAAKtyC,EAAElE,OAAQgF,EAAIwxC,IAAMxxC,EAAGd,EAAEc,GAAK,KAAOA,EAAI,EAAI,KAAOA,EAAI,EAAI,KAAOA,EAAI,EAAI,EACrF,IAAqDC,EAAGgyC,EAApDjB,EAAKrzC,EAAEuB,GAAIgzC,EAAI,IAAK7W,EAAInyB,WAAazO,OAAO,IAEhD,IADAwF,EAAI,EACCgyC,EAAKC,EAAEl3C,OAAQiF,EAAIgyC,IAAMhyC,EAAGiyC,EAAEjyC,GAAK,EACxC,IAAIgxC,EAAKtzC,EAAEu0C,GAEX,SAAS33C,EAAE01C,EAAGC,GACZ,IAAK,IAA0DG,EAAtDzuC,EAAIquC,EAAE50C,EAAGwG,EAAIouC,EAAEC,EAAGvf,EAAIsf,EAAEhC,MAAO5yC,EAAI40C,EAAEruC,EAAGwX,EAAIuX,EAAE31B,OAAW6G,EAAIquC,GAAI,CACxE,GAAI70C,GAAK+d,EAAG,MAAMvV,MAAM,0BACxBjC,GAAK+uB,EAAEt1B,MAAQwG,EACfA,GAAK,EAMP,OAJAwuC,EAAIzuC,GAAK,GAAKsuC,GAAK,EACnBD,EAAE50C,EAAIuG,IAAMsuC,EACZD,EAAEC,EAAIruC,EAAIquC,EACVD,EAAEruC,EAAIvG,EACCg1C,EAGT,SAASkB,EAAEtB,EAAGC,GACZ,IAAK,IAA8EI,EAAG9zC,EAA7EoF,EAAIquC,EAAE50C,EAAGwG,EAAIouC,EAAEC,EAAGvf,EAAIsf,EAAEhC,MAAO5yC,EAAI40C,EAAEruC,EAAGwX,EAAIuX,EAAE31B,OAAQq1C,EAAIH,EAAE,GAAIzzC,EAAIyzC,EAAE,GAAUruC,EAAIpF,KAAOpB,GAAK+d,IAAKxX,GAAK+uB,EAAEt1B,MAAQwG,EAAGA,GAAK,EAGrI,IADArF,GADA8zC,EAAID,EAAEzuC,GAAK,GAAKnF,GAAK,MACX,IACFoF,EAAG,MAAMgC,MAAM,wBAA0BrH,GAIjD,OAHAyzC,EAAE50C,EAAIuG,GAAKpF,EACXyzC,EAAEC,EAAIruC,EAAIrF,EACVyzC,EAAEruC,EAAIvG,EACK,MAAJi1C,EA0ET,SAASruC,EAAEguC,EAAGC,GACZ,IAAItuC,EAAGC,EAMP,OALA1G,KAAK8yC,MAAQgC,EACb90C,KAAKyG,EAAI,GACLsuC,IAAOA,QAASA,EAAE7zC,QAAUlB,KAAKyG,EAAIsuC,EAAE7zC,OAAQ6zC,EAAEiC,SAAWh3C,KAAKD,EAAIg1C,EAAEiC,SAC3EvwC,EAAIquC,EAAE90C,KAAKyG,KACXC,EAAIouC,EAAE90C,KAAKyG,KACC,GAAJA,GACN,KAAKwwC,EACHj3C,KAAKk3C,OAASD,EACd,MACF,QACE,MAAMvuC,MAAM,kCAEhB,GAAI,KAAQjC,GAAK,GAAKC,GAAK,GAAI,MAAMgC,MAAM,yBAA2BjC,GAAK,GAAKC,GAAK,IACrF,GAAQ,GAAJA,EAAQ,MAAMgC,MAAM,+BACxB1I,KAAKm2C,EAAI,IAAIZ,EAAET,GAAI5zC,MAAOlB,KAAKyG,EAAG+uC,WAAYT,EAAES,WAAYC,WAAYV,EAAEU,WAAYC,OAAQX,EAAEW,SAvFlGH,EAAEh2C,UAAUijB,EAAI,SAAUsyB,EAAGC,GAC3B,IAAItuC,EAAIzG,KAAK80C,EAAGpuC,EAAI1G,KAAK0G,EACzB1G,KAAK+zC,EAAIe,EACT,IAAK,IAAwB50C,EAAG+d,EAAGi3B,EAAG5zC,EAA7Bk0B,EAAI/uB,EAAE5G,OAAS,IAAiB,OAASK,EAAIk2C,EAAEp2C,KAAM80C,KAAM,GAAI,IAAM50C,EAAGwG,GAAK8uB,IAAMx1B,KAAK0G,EAAIA,EAAGD,EAAIzG,KAAKw1B,IAAK9uB,EAAI1G,KAAK0G,GAAID,EAAEC,KAAOxG,OAQ1I,IANAoB,EAAIi1C,EADJt4B,EAAI/d,EAAI,KAER,EAAIu2C,EAAEx4B,KAAO3c,GAAKlC,EAAEY,KAAMy2C,EAAEx4B,KAC5B/d,EAAIk2C,EAAEp2C,KAAM+0C,GACZG,EAAIyB,EAAGz2C,GACP,EAAI22C,EAAE32C,KAAOg1C,GAAK91C,EAAEY,KAAM62C,EAAE32C,KAC5BwG,GAAK8uB,IAAMx1B,KAAK0G,EAAIA,EAAGD,EAAIzG,KAAKw1B,IAAK9uB,EAAI1G,KAAK0G,GACvCpF,KAAMmF,EAAEC,GAAKD,EAAEC,IAAMwuC,GAE9B,KAAO,GAAKl1C,KAAK+0C,GAAI/0C,KAAK+0C,GAAK,EAAG/0C,KAAKyG,IACvCzG,KAAK0G,EAAIA,GAEX6uC,EAAEh2C,UAAUg2C,EAAI,SAAUT,EAAGC,GAC3B,IAAItuC,EAAIzG,KAAK80C,EAAGpuC,EAAI1G,KAAK0G,EACzB1G,KAAK+zC,EAAIe,EACT,IAAK,IAAkB50C,EAAG+d,EAAGi3B,EAAG5zC,EAAvBk0B,EAAI/uB,EAAE5G,OAAoB,OAASK,EAAIk2C,EAAEp2C,KAAM80C,KAAM,GAAI,IAAM50C,EAAGwG,GAAK8uB,IAAoBA,GAAd/uB,EAAIzG,KAAKw1B,KAAW31B,QAAS4G,EAAEC,KAAOxG,OAQ1H,IANAoB,EAAIi1C,EADJt4B,EAAI/d,EAAI,KAER,EAAIu2C,EAAEx4B,KAAO3c,GAAKlC,EAAEY,KAAMy2C,EAAEx4B,KAC5B/d,EAAIk2C,EAAEp2C,KAAM+0C,GACZG,EAAIyB,EAAGz2C,GACP,EAAI22C,EAAE32C,KAAOg1C,GAAK91C,EAAEY,KAAM62C,EAAE32C,KAC5BwG,EAAIpF,EAAIk0B,IAAoBA,GAAd/uB,EAAIzG,KAAKw1B,KAAW31B,QAC3ByB,KAAMmF,EAAEC,GAAKD,EAAEC,IAAMwuC,GAE9B,KAAO,GAAKl1C,KAAK+0C,GAAI/0C,KAAK+0C,GAAK,EAAG/0C,KAAKyG,IACvCzG,KAAK0G,EAAIA,GAEX6uC,EAAEh2C,UAAUi2B,EAAI,WACd,IAA0E/uB,EAAGC,EAAzEouC,EAAI,IAAK5U,EAAInyB,WAAazO,OAAOU,KAAK0G,EAAI,OAAQquC,EAAI/0C,KAAK0G,EAAI,MAAa8uB,EAAIx1B,KAAK80C,EACzF,GAAI5U,EAAG4U,EAAEvvC,IAAIiwB,EAAEogB,SAAS,MAAOd,EAAEj1C,cAE/B,IADA4G,EAAI,EACCC,EAAIouC,EAAEj1C,OAAQ4G,EAAIC,IAAKD,EAAGquC,EAAEruC,GAAK+uB,EAAE/uB,EAAI,OAI9C,GAFAzG,KAAKie,EAAElf,KAAK+1C,GACZ90C,KAAK6mB,GAAKiuB,EAAEj1C,OACRqgC,EAAG1K,EAAEjwB,IAAIiwB,EAAEogB,SAASb,EAAGA,EAAI,aAAc,IAAKtuC,EAAI,EAAG,MAAQA,IAAKA,EAAG+uB,EAAE/uB,GAAK+uB,EAAEuf,EAAItuC,GAEtF,OADAzG,KAAK0G,EAAI,MACF8uB,GAET+f,EAAEh2C,UAAU0pB,EAAI,SAAU6rB,GACxB,IAAIC,EAA8Cvf,EAAGt1B,EAA9CuG,EAAIzG,KAAK8yC,MAAMjzC,OAASG,KAAKyG,EAAI,EAAI,EAAYwX,EAAIje,KAAK8yC,MAAOoC,EAAIl1C,KAAK80C,EAIjF,OAHAA,IAAM,iBAAoBA,EAAEr2C,IAAMgI,EAAIquC,EAAEr2C,GAAI,iBAAoBq2C,EAAEmB,IAAMxvC,GAAKquC,EAAEmB,IACVzgB,EAArE,EAAI/uB,GAA0CvG,GAAhC+d,EAAEpe,OAASG,KAAKyG,GAAKzG,KAAK+zC,EAAE,GAAmB,EAAX,IAAgB,GAAWmB,EAAEr1C,OAASq1C,EAAEr1C,OAASK,EAAIg1C,EAAEr1C,QAAU,EAASq1C,EAAEr1C,OAAS4G,EACvIy5B,GAAK6U,EAAI,IAAIhnC,WAAWynB,IAAMjwB,IAAI2vC,GAAMH,EAAIG,EACrCl1C,KAAK80C,EAAIC,GAElBQ,EAAEh2C,UAAU8B,EAAI,WACd,IAAmCqF,EAAgExG,EAAG+d,EAAGi3B,EAAG5zC,EAAxGwzC,EAAI,EAAGC,EAAI/0C,KAAK80C,EAAGruC,EAAIzG,KAAKie,EAAMuX,EAAI,IAAK0K,EAAInyB,WAAazO,OAAOU,KAAK6mB,GAAK7mB,KAAK0G,EAAI,QAC1F,GAAI,IAAMD,EAAE5G,OAAQ,OAAOqgC,EAAIlgC,KAAK80C,EAAEc,SAAS,MAAO51C,KAAK0G,GAAK1G,KAAK80C,EAAExqC,MAAM,MAAOtK,KAAK0G,GAEzF,IADAxG,EAAI,EACC+d,EAAIxX,EAAE5G,OAAQK,EAAI+d,IAAK/d,EAG1B,IADAg1C,EAAI,EACC5zC,GAFLoF,EAAID,EAAEvG,IAEKL,OAAQq1C,EAAI5zC,IAAK4zC,EAAG1f,EAAEsf,KAAOpuC,EAAEwuC,GAG5C,IADAh1C,EAAI,MACC+d,EAAIje,KAAK0G,EAAGxG,EAAI+d,IAAK/d,EAAGs1B,EAAEsf,KAAOC,EAAE70C,GAExC,OADAF,KAAKie,KACEje,KAAKgI,OAASwtB,GAEvB+f,EAAEh2C,UAAUiD,EAAI,WACd,IAAIsyC,EAAGC,EAAI/0C,KAAK0G,EAEhB,OADAw5B,EAAIlgC,KAAKiC,GAAK6yC,EAAI,IAAI/mC,WAAWgnC,IAAMxvC,IAAIvF,KAAK80C,EAAEc,SAAS,EAAGb,IAAOD,EAAI90C,KAAK80C,EAAEc,SAAS,EAAGb,IAAM/0C,KAAK80C,EAAEj1C,OAASk1C,IAAM/0C,KAAK80C,EAAEj1C,OAASk1C,GAAID,EAAI90C,KAAK80C,GAC9I90C,KAAKgI,OAAS8sC,GAsBvBhuC,EAAEvH,UAAU+B,EAAI,WACd,IAAoByzC,EAAGtuC,EAAnBquC,EAAI90C,KAAK8yC,MAGb,GAFAiC,EAAI/0C,KAAKm2C,EAAE70C,IACXtB,KAAKyG,EAAIzG,KAAKm2C,EAAE1vC,EACZzG,KAAKD,EAAG,CACV0G,GAAKquC,EAAE90C,KAAKyG,MAAQ,GAAKquC,EAAE90C,KAAKyG,MAAQ,GAAKquC,EAAE90C,KAAKyG,MAAQ,EAAIquC,EAAE90C,KAAKyG,QAAU,EACjF,IAAIC,EAAIquC,EACR,GAAI,iBAAoBruC,EAAG,CACzB,IAAqBxG,EAAG+d,EAApBuX,EAAI9uB,EAAEJ,MAAM,IAEhB,IADApG,EAAI,EACC+d,EAAIuX,EAAE31B,OAAQK,EAAI+d,EAAG/d,IAAKs1B,EAAEt1B,IAA2B,IAArBs1B,EAAEt1B,GAAGi3C,WAAW,MAAc,EACrEzwC,EAAI8uB,EAEN,IAAK,IAAgCn0B,EAA5B6zC,EAAI,EAAG5zC,EAAI,EAAG6zC,EAAIzuC,EAAE7G,OAAWpB,EAAI,EAAG,EAAI02C,GAAI,CAErDA,GADA9zC,EAAI,KAAO8zC,EAAI,KAAOA,EAEtB,GAAgB7zC,GAAb4zC,GAAKxuC,EAAEjI,aAAuB4C,GACjC6zC,GAAK,MACL5zC,GAAK,MAEP,GAAImF,KAAOnF,GAAK,GAAK4zC,KAAO,EAAG,MAAMxsC,MAAM,6BAE7C,OAAOqsC,GAET,IAAIkC,EAAK,EACTh1C,EAAE,eAAgB6E,GAClB7E,EAAE,oCAAqC6E,EAAEvH,UAAU+B,GACnD,IAAqC81C,EAAGC,EAAGC,EAAGC,EAA1CC,GAAKC,SAAU9B,EAAEP,EAAGsC,MAAO/B,EAAEzV,GACjC,GAAAzV,EAAAhkB,EAAiB2wC,EAAI3sB,IAAY+sB,QAAS,IAAKH,KAAKD,KAAQE,EAAI,EAAGE,EAAGJ,EAAEE,KAAOD,EAE/E,IADAC,EAAI,EACCC,EAAKH,EAAEv3C,OAAQy3C,EAAIC,IAAMD,EAAar1C,EAAE,4BAAZo1C,EAAID,EAAEE,IAAsCE,EAAEH,MAC9E7vC,KAAKxH,OD9PRsH,MAAAstC,UAOAttC,MAAAF,UAAAJ,EAEAM,MAAA2tB,aAKA,IAAA0iB,GACAC,YACAC,SAAA,GAEA71C,KAJA,WAKA,OACA+6B,OAAA,KACAD,MAAA,KACAD,SAAA,KACA4I,KAAA,KAKAqS,IAAAC,EAAAtxC,EAAAuxC,EAAAvxC,EAAAwxC,EAAAxxC,EAAAyxC,EAAAzxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,EAAAsxC,EAAAtxC,GACA0xC,IAAAJ,EAAAtxC,EACA2xC,IAAAJ,EAAAvxC,EACA2pB,KAAA2nB,EAAAtxC,EACA4xC,MAAAC,EAAA7xC,EACA8xC,UAAA,8CACAC,UAGA1yC,SAEA2yC,OAFA,WAOA,IAAAC,EAAAC,SAAAC,eAAA,aACA54C,KAAA+8B,OAAA,IAAAz1B,MAAA0R,kBAAA,GAAA0/B,EAAAG,YAAAH,EAAAI,aAAA,QACA94C,KAAA+8B,OAAAhgB,SAAAkM,EAAA,GACAjpB,KAAA88B,MAAA,IAAAx1B,MAAAotC,MAEA,IAAAptC,MAAAF,UAGApH,KAAA+4C,QAGA,IANA,IAIA7tC,KAEAhJ,EAAA,EAAAA,EAAA,IAAAA,EACAgJ,EAAAnM,KAAA,IAAAuI,MAAA4xB,mBAEAzmB,IAAAnL,MAAA0xC,WAAAtqC,YAAA1O,KAAAowB,QACA,WACAyM,SAAAoc,OAAAC,EAAAzyC,EAAAs2B,UAEAoc,UAAA,KAOA,IAAA3+B,EAAA,IAAAlT,MAAA8xC,YAAA,UACA,IAAA9xC,MAAA+xC,mBACAr5C,KAAAylC,KAAA,IAAAn+B,MAAA0T,KAAAR,EAAAtP,GACAlL,KAAA88B,MAAA9mB,IAAAhW,KAAAylC,MACAzlC,KAAA68B,SAAA,IAAAv1B,MAAAgyC,eAAAC,WAAA,EAAAC,OAAA,IACAx5C,KAAA68B,SAAA4c,QAAAf,EAAAG,YAAAH,EAAAI,cACAJ,EAAAgB,YAAA15C,KAAA68B,SAAA8c,aAEAC,QAAA,WACAC,sBAAA75C,KAAA45C,SACA55C,KAAAylC,KAAA1pB,SAAArM,GAAA,IACA1P,KAAAylC,KAAA1pB,SAAApM,GAAA,IACA3P,KAAA68B,SAAAoc,OAAAj5C,KAAA88B,MAAA98B,KAAA+8B,SAGA+c,OA/CA,WA+CA,IAAAC,EAAA/5C,KAAA,OAAAg6C,IAAAC,EAAAxzC,EAAAyzC,KAAA,SAAAC,IAAA,IAAA3B,EAAA,OAAAyB,EAAAxzC,EAAA2zC,KAAA,SAAAC,GAAA,cAAAA,EAAAh4C,KAAAg4C,EAAAj4C,MAAA,cAAAi4C,EAAAj4C,KAAA,EACA4C,OAAAs1C,EAAA,EAAAt1C,GADA,OAEA,IADAwzC,EADA6B,EAAAE,MAEAC,MACAC,MAAA,SACAV,EAAAW,QAAA37C,MAAAqK,KAAA,aAIA5J,GAAAg5C,EAAAx2C,KAAA,QACAw2C,EAAAx2C,KAAA,gBAEAxC,GAAAg5C,EAAAx2C,KAAA,MACAw2C,EAAAx2C,KAAA,OAEA+3C,EAAA3pB,KAAA2pB,EAAAjC,GAAAU,EAAAx2C,KAAA,KACA4L,QAAA6iB,IAAAspB,EAAA3pB,MACA2pB,EAAAvB,OAAAx2C,MAhBA,wBAAAq4C,EAAAM,SAAAR,EAAAJ,KAAAC,IAsBAY,QArEA,WAqEA,IAAAC,EAAA76C,KAAA,OAAAg6C,IAAAC,EAAAxzC,EAAAyzC,KAAA,SAAAY,IAAA,OAAAb,EAAAxzC,EAAA2zC,KAAA,SAAAW,GAAA,cAAAA,EAAA14C,KAAA04C,EAAA34C,MAAA,YACAy4C,EAAArC,KAAA,OAAAqC,EAAAtC,SAAAsC,EAAArC,KAAA,MADA,CAAAuC,EAAA34C,KAAA,eAEAy4C,EAAArC,KAAA,MAAAqC,EAAArC,KAAA,MAAAqC,EAAAtC,SAAAsC,EAAArC,KAAA,KACAqC,EAAArC,KAAA,IAAAqC,EAAArC,KAAA,MAHAuC,EAAA34C,KAAA,EAIA4C,OAAAg2C,EAAA,EAAAh2C,CAAA,aAAA61C,EAAArC,KAAAyC,IAAA,UAAAJ,EAAArC,MAJA,OAOAqC,EAAAK,UACAC,QAAA,QACA9tC,KAAA,YATA0tC,EAAA34C,KAAA,eAcAy4C,EAAAK,UACAC,QAAA,WACA9tC,KAAA,YAhBA,wBAAA0tC,EAAAJ,SAAAG,EAAAD,KAAAb,KAsBAoB,QAlHA,WAkHA,IAAAC,EAAAr7C,KACAA,KAAA85C,SAAAza,KAAA,SAAAv7B,GACAu3C,EAAA5C,WAGAz4C,KAAA45C,YE9Ke0B,GADErC,OAFjB,WAA0B,IAAAsC,EAAAv7C,KAAaw7C,EAAAD,EAAAE,eAA0Bp1C,EAAAk1C,EAAAG,MAAAr1C,IAAAm1C,EAAwB,OAAAn1C,EAAA,gBAAAA,EAAA,aAA0Cs1C,aAAapjC,OAAA,WAAkBlS,EAAA,UAAAA,EAAA,MAAwBs1C,aAAaC,aAAA,SAAoBL,EAAAM,GAAA,YAAAN,EAAAM,GAAA,KAAAx1C,EAAA,UAAAk1C,EAAAM,GAAA,iBAAAN,EAAAO,GAAAP,EAAA/C,KAAAuD,KAAA,YAAAR,EAAAM,GAAA,KAAAx1C,EAAA,UAAAk1C,EAAAM,GAAA,iBAAAN,EAAAO,GAAAP,EAAA/C,KAAAwD,OAAA,YAAAT,EAAAM,GAAA,KAAAx1C,EAAA,UAAAk1C,EAAAM,GAAA,oBAAAN,EAAAO,GAAAP,EAAAhD,SAAAgD,EAAA/C,KAAAuD,MAAA,YAAAR,EAAAM,GAAA,KAAAx1C,EAAA,UAAuTs1C,aAAaM,cAAA,SAAAC,aAAA,SAAAnrC,MAAA,WAA+DorC,IAAKC,MAAAb,EAAAX,WAAqBv0C,EAAA,KAAUg2C,YAAA,0BAAAV,aAAmDW,YAAA,QAAmBH,IAAKC,MAAAb,EAAAX,WAAqBW,EAAAM,GAAA,oBAAAN,EAAAM,GAAA,KAAAx1C,EAAA,WAAAA,EAAA,OAAiE2oB,OAAOtiB,GAAA,iBAAkB6uC,EAAAM,GAAA,KAAAx1C,EAAA,eAE3yBk2C,oBCCjB,IAcAC,EAdyBh+C,EAAQ,OAcjCi+C,CACE9E,EACA2D,GATF,EAVA,SAAAoB,GACEl+C,EAAQ,SAaV,KAEA,MAUem+C,EAAA,QAAAH,EAAiB,8BCzBhC,IAAA/8C,EAAcjB,EAAQ,QACtBo+C,EAAWp+C,EAAQ,QACnBkH,EAAYlH,EAAQ,QACpBF,EAAAC,QAAA,SAAAgI,EAAAs2C,GACA,IAAAC,GAAAF,EAAA53C,YAA6BuB,IAAAvB,OAAAuB,GAC7Bw2C,KACAA,EAAAx2C,GAAAs2C,EAAAC,GACAr9C,IAAAE,EAAAF,EAAAsH,EAAArB,EAAA,WAAqDo3C,EAAA,KAAS,SAAAC,0BCR9Dz+C,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/1.a25504a2e19e0ed3dda1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"scene.gltf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/scene.gltf\n// module id = 0exO\n// module chunks = 1","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/map.js\n// module id = 3C/1\n// module chunks = 1","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-from-iterable.js\n// module id = 4WTo\n// module chunks = 1","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-species-constructor.js\n// module id = 7Doy\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/house.f231691.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/house.jpg\n// module id = 7jkF\n// module chunks = 1","module.exports = __webpack_public_path__ + \"pusheen.fbx\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/pusheen.fbx\n// module id = 8yxd\n// module chunks = 1","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-collection-of.js\n// module id = 9Bbf\n// module chunks = 1","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection-strong.js\n// module id = 9C8M\n// module chunks = 1","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-methods.js\n// module id = ALrJ\n// module chunks = 1","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 1","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-collection-from.js\n// module id = HpRW\n// module chunks = 1","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_validate-collection.js\n// module id = LIJb\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/mouse.867d296.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/mouse.png\n// module id = NEFZ\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/house.37db486.jpeg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/house.jpeg\n// module id = OfFw\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/create.js\n// module id = OvRC\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/dog.a8d4210.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/dog.jpg\n// module id = QWiY\n// module chunks = 1","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.to-json.js\n// module id = UvrK\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.of.js\n// module id = Xjd4\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.from.js\n// module id = bqnK\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/cat.8abee4b.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cat.jpg\n// module id = cQq1\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/map.js\n// module id = ifoU\n// module chunks = 1","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 1","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection-to-json.js\n// module id = m9gC\n// module chunks = 1","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/create.js\n// module id = oM7Q\n// module chunks = 1","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-species-create.js\n// module id = oeOm\n// module chunks = 1","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.map.js\n// module id = qCoq\n// module chunks = 1","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection.js\n// module id = qo66\n// module chunks = 1","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.create.js\n// module id = sF+V\n// module chunks = 1","/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nexport default\n// THREE.FBXLoader = (\n(\n  function () {\n\n    var fbxTree;\n    var connections;\n    var sceneGraph;\n\n    function FBXLoader(manager) {\n\n      THREE.Loader.call(this, manager);\n\n    }\n\n    FBXLoader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\n\n      constructor: FBXLoader,\n\n      load: function (url, onLoad, onProgress, onError) {\n\n        var self = this;\n\n        var path = (self.path === '') ? THREE.LoaderUtils.extractUrlBase(url) : self.path;\n\n        var loader = new THREE.FileLoader(this.manager);\n        loader.setPath(self.path);\n        loader.setResponseType('arraybuffer');\n\n        loader.load(url, function (buffer) {\n\n          try {\n\n            onLoad(self.parse(buffer, path));\n\n          } catch (error) {\n\n            setTimeout(function () {\n\n              if (onError) onError(error);\n\n              self.manager.itemError(url);\n\n            }, 0);\n\n          }\n\n        }, onProgress, onError);\n\n      },\n\n      parse: function (FBXBuffer, path) {\n\n        if (isFbxFormatBinary(FBXBuffer)) {\n\n          fbxTree = new BinaryParser().parse(FBXBuffer);\n\n        } else {\n\n          var FBXText = convertArrayBufferToString(FBXBuffer);\n\n          if (!isFbxFormatASCII(FBXText)) {\n\n            throw new Error('THREE.FBXLoader: Unknown format.');\n\n          }\n\n          if (getFbxVersion(FBXText) < 7000) {\n\n            throw new Error('THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion(FBXText));\n\n          }\n\n          fbxTree = new TextParser().parse(FBXText);\n\n        }\n\n        // console.log( fbxTree );\n\n        var textureLoader = new THREE.TextureLoader(this.manager).setPath(this.resourcePath || path).setCrossOrigin(this.crossOrigin);\n\n        return new FBXTreeParser(textureLoader, this.manager).parse(fbxTree);\n\n      }\n\n    });\n\n    // Parse the FBXTree object returned by the BinaryParser or TextParser and return a THREE.Group\n    function FBXTreeParser(textureLoader, manager) {\n\n      this.textureLoader = textureLoader;\n      this.manager = manager;\n\n    }\n\n    FBXTreeParser.prototype = {\n\n      constructor: FBXTreeParser,\n\n      parse: function () {\n\n        connections = this.parseConnections();\n\n        var images = this.parseImages();\n        var textures = this.parseTextures(images);\n        var materials = this.parseMaterials(textures);\n        var deformers = this.parseDeformers();\n        var geometryMap = new GeometryParser().parse(deformers);\n\n        this.parseScene(deformers, geometryMap, materials);\n\n        return sceneGraph;\n\n      },\n\n      // Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n      // and details the connection type\n      parseConnections: function () {\n\n        var connectionMap = new Map();\n\n        if ('Connections' in fbxTree) {\n\n          var rawConnections = fbxTree.Connections.connections;\n\n          rawConnections.forEach(function (rawConnection) {\n\n            var fromID = rawConnection[0];\n            var toID = rawConnection[1];\n            var relationship = rawConnection[2];\n\n            if (!connectionMap.has(fromID)) {\n\n              connectionMap.set(fromID, {\n                parents: [],\n                children: []\n              });\n\n            }\n\n            var parentRelationship = {ID: toID, relationship: relationship};\n            connectionMap.get(fromID).parents.push(parentRelationship);\n\n            if (!connectionMap.has(toID)) {\n\n              connectionMap.set(toID, {\n                parents: [],\n                children: []\n              });\n\n            }\n\n            var childRelationship = {ID: fromID, relationship: relationship};\n            connectionMap.get(toID).children.push(childRelationship);\n\n          });\n\n        }\n\n        return connectionMap;\n\n      },\n\n      // Parse FBXTree.Objects.Video for embedded image data\n      // These images are connected to textures in FBXTree.Objects.Textures\n      // via FBXTree.Connections.\n      parseImages: function () {\n\n        var images = {};\n        var blobs = {};\n\n        if ('Video' in fbxTree.Objects) {\n\n          var videoNodes = fbxTree.Objects.Video;\n\n          for (var nodeID in videoNodes) {\n\n            var videoNode = videoNodes[nodeID];\n\n            var id = parseInt(nodeID);\n\n            images[id] = videoNode.RelativeFilename || videoNode.Filename;\n\n            // raw image data is in videoNode.Content\n            if ('Content' in videoNode) {\n\n              var arrayBufferContent = (videoNode.Content instanceof ArrayBuffer) && (videoNode.Content.byteLength > 0);\n              var base64Content = (typeof videoNode.Content === 'string') && (videoNode.Content !== '');\n\n              if (arrayBufferContent || base64Content) {\n\n                var image = this.parseImage(videoNodes[nodeID]);\n\n                blobs[videoNode.RelativeFilename || videoNode.Filename] = image;\n\n              }\n\n            }\n\n          }\n\n        }\n\n        for (var id in images) {\n\n          var filename = images[id];\n\n          if (blobs[filename] !== undefined) images[id] = blobs[filename];\n          else images[id] = images[id].split('\\\\').pop();\n\n        }\n\n        return images;\n\n      },\n\n      // Parse embedded image data in FBXTree.Video.Content\n      parseImage: function (videoNode) {\n\n        var content = videoNode.Content;\n        var fileName = videoNode.RelativeFilename || videoNode.Filename;\n        var extension = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n\n        var type;\n\n        switch (extension) {\n\n          case 'bmp':\n\n            type = 'image/bmp';\n            break;\n\n          case 'jpg':\n          case 'jpeg':\n\n            type = 'image/jpeg';\n            break;\n\n          case 'png':\n\n            type = 'image/png';\n            break;\n\n          case 'tif':\n\n            type = 'image/tiff';\n            break;\n\n          case 'tga':\n\n            if (this.manager.getHandler('.tga') === null) {\n\n              console.warn('FBXLoader: TGA loader not found, skipping ', fileName);\n\n            }\n\n            type = 'image/tga';\n            break;\n\n          default:\n\n            console.warn('FBXLoader: Image type \"' + extension + '\" is not supported.');\n            return;\n\n        }\n\n        if (typeof content === 'string') { // ASCII format\n\n          return 'data:' + type + ';base64,' + content;\n\n        } else { // Binary Format\n\n          var array = new Uint8Array(content);\n          return window.URL.createObjectURL(new Blob([array], {type: type}));\n\n        }\n\n      },\n\n      // Parse nodes in FBXTree.Objects.Texture\n      // These contain details such as UV scaling, cropping, rotation etc and are connected\n      // to images in FBXTree.Objects.Video\n      parseTextures: function (images) {\n\n        var textureMap = new Map();\n\n        if ('Texture' in fbxTree.Objects) {\n\n          var textureNodes = fbxTree.Objects.Texture;\n          for (var nodeID in textureNodes) {\n\n            var texture = this.parseTexture(textureNodes[nodeID], images);\n            textureMap.set(parseInt(nodeID), texture);\n\n          }\n\n        }\n\n        return textureMap;\n\n      },\n\n      // Parse individual node in FBXTree.Objects.Texture\n      parseTexture: function (textureNode, images) {\n\n        var texture = this.loadTexture(textureNode, images);\n\n        texture.ID = textureNode.id;\n\n        texture.name = textureNode.attrName;\n\n        var wrapModeU = textureNode.WrapModeU;\n        var wrapModeV = textureNode.WrapModeV;\n\n        var valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n        var valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n        // http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n        // 0: repeat(default), 1: clamp\n\n        texture.wrapS = valueU === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n        texture.wrapT = valueV === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n        if ('Scaling' in textureNode) {\n\n          var values = textureNode.Scaling.value;\n\n          texture.repeat.x = values[0];\n          texture.repeat.y = values[1];\n\n        }\n\n        return texture;\n\n      },\n\n      // load a texture specified as a blob or data URI, or via an external URL using THREE.TextureLoader\n      loadTexture: function (textureNode, images) {\n\n        var fileName;\n\n        var currentPath = this.textureLoader.path;\n\n        var children = connections.get(textureNode.id).children;\n\n        if (children !== undefined && children.length > 0 && images[children[0].ID] !== undefined) {\n\n          fileName = images[children[0].ID];\n\n          if (fileName.indexOf('blob:') === 0 || fileName.indexOf('data:') === 0) {\n\n            this.textureLoader.setPath(undefined);\n\n          }\n\n        }\n\n        var texture;\n\n        var extension = textureNode.FileName.slice(-3).toLowerCase();\n\n        if (extension === 'tga') {\n\n          var loader = this.manager.getHandler('.tga');\n\n          if (loader === null) {\n\n            console.warn('FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename);\n            texture = new THREE.Texture();\n\n          } else {\n\n            texture = loader.load(fileName);\n\n          }\n\n        } else if (extension === 'psd') {\n\n          console.warn('FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename);\n          texture = new THREE.Texture();\n\n        } else {\n\n          texture = this.textureLoader.load(fileName);\n\n        }\n\n        this.textureLoader.setPath(currentPath);\n\n        return texture;\n\n      },\n\n      // Parse nodes in FBXTree.Objects.Material\n      parseMaterials: function (textureMap) {\n\n        var materialMap = new Map();\n\n        if ('Material' in fbxTree.Objects) {\n\n          var materialNodes = fbxTree.Objects.Material;\n\n          for (var nodeID in materialNodes) {\n\n            var material = this.parseMaterial(materialNodes[nodeID], textureMap);\n\n            if (material !== null) materialMap.set(parseInt(nodeID), material);\n\n          }\n\n        }\n\n        return materialMap;\n\n      },\n\n      // Parse single node in FBXTree.Objects.Material\n      // Materials are connected to texture maps in FBXTree.Objects.Textures\n      // FBX format currently only supports Lambert and Phong shading models\n      parseMaterial: function (materialNode, textureMap) {\n\n        var ID = materialNode.id;\n        var name = materialNode.attrName;\n        var type = materialNode.ShadingModel;\n\n        // Case where FBX wraps shading model in property object.\n        if (typeof type === 'object') {\n\n          type = type.value;\n\n        }\n\n        // Ignore unused materials which don't have any connections.\n        if (!connections.has(ID)) return null;\n\n        var parameters = this.parseParameters(materialNode, textureMap, ID);\n\n        var material;\n\n        switch (type.toLowerCase()) {\n\n          case 'phong':\n            material = new THREE.MeshPhongMaterial();\n            break;\n          case 'lambert':\n            material = new THREE.MeshLambertMaterial();\n            break;\n          default:\n            console.warn('THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type);\n            material = new THREE.MeshPhongMaterial();\n            break;\n\n        }\n\n        material.setValues(parameters);\n        material.name = name;\n\n        return material;\n\n      },\n\n      // Parse FBX material and return parameters suitable for a three.js material\n      // Also parse the texture map and return any textures associated with the material\n      parseParameters: function (materialNode, textureMap, ID) {\n\n        var parameters = {};\n\n        if (materialNode.BumpFactor) {\n\n          parameters.bumpScale = materialNode.BumpFactor.value;\n\n        }\n        if (materialNode.Diffuse) {\n\n          parameters.color = new THREE.Color().fromArray(materialNode.Diffuse.value);\n\n        } else if (materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color') {\n\n          // The blender exporter exports diffuse here instead of in materialNode.Diffuse\n          parameters.color = new THREE.Color().fromArray(materialNode.DiffuseColor.value);\n\n        }\n\n        if (materialNode.DisplacementFactor) {\n\n          parameters.displacementScale = materialNode.DisplacementFactor.value;\n\n        }\n\n        if (materialNode.Emissive) {\n\n          parameters.emissive = new THREE.Color().fromArray(materialNode.Emissive.value);\n\n        } else if (materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color') {\n\n          // The blender exporter exports emissive color here instead of in materialNode.Emissive\n          parameters.emissive = new THREE.Color().fromArray(materialNode.EmissiveColor.value);\n\n        }\n\n        if (materialNode.EmissiveFactor) {\n\n          parameters.emissiveIntensity = parseFloat(materialNode.EmissiveFactor.value);\n\n        }\n\n        if (materialNode.Opacity) {\n\n          parameters.opacity = parseFloat(materialNode.Opacity.value);\n\n        }\n\n        if (parameters.opacity < 1.0) {\n\n          parameters.transparent = true;\n\n        }\n\n        if (materialNode.ReflectionFactor) {\n\n          parameters.reflectivity = materialNode.ReflectionFactor.value;\n\n        }\n\n        if (materialNode.Shininess) {\n\n          parameters.shininess = materialNode.Shininess.value;\n\n        }\n\n        if (materialNode.Specular) {\n\n          parameters.specular = new THREE.Color().fromArray(materialNode.Specular.value);\n\n        } else if (materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color') {\n\n          // The blender exporter exports specular color here instead of in materialNode.Specular\n          parameters.specular = new THREE.Color().fromArray(materialNode.SpecularColor.value);\n\n        }\n\n        var self = this;\n        connections.get(ID).children.forEach(function (child) {\n\n          var type = child.relationship;\n\n          switch (type) {\n\n            case 'Bump':\n              parameters.bumpMap = self.getTexture(textureMap, child.ID);\n              break;\n\n            case 'Maya|TEX_ao_map':\n              parameters.aoMap = self.getTexture(textureMap, child.ID);\n              break;\n\n            case 'DiffuseColor':\n            case 'Maya|TEX_color_map':\n              parameters.map = self.getTexture(textureMap, child.ID);\n              parameters.map.encoding = THREE.sRGBEncoding;\n              break;\n\n            case 'DisplacementColor':\n              parameters.displacementMap = self.getTexture(textureMap, child.ID);\n              break;\n\n            case 'EmissiveColor':\n              parameters.emissiveMap = self.getTexture(textureMap, child.ID);\n              parameters.emissiveMap.encoding = THREE.sRGBEncoding;\n              break;\n\n            case 'NormalMap':\n            case 'Maya|TEX_normal_map':\n              parameters.normalMap = self.getTexture(textureMap, child.ID);\n              break;\n\n            case 'ReflectionColor':\n              parameters.envMap = self.getTexture(textureMap, child.ID);\n              parameters.envMap.mapping = THREE.EquirectangularReflectionMapping;\n              parameters.envMap.encoding = THREE.sRGBEncoding;\n              break;\n\n            case 'SpecularColor':\n              parameters.specularMap = self.getTexture(textureMap, child.ID);\n              parameters.specularMap.encoding = THREE.sRGBEncoding;\n              break;\n\n            case 'TransparentColor':\n              parameters.alphaMap = self.getTexture(textureMap, child.ID);\n              parameters.transparent = true;\n              break;\n\n            case 'AmbientColor':\n            case 'ShininessExponent': // AKA glossiness map\n            case 'SpecularFactor': // AKA specularLevel\n            case 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n            default:\n              console.warn('THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type);\n              break;\n\n          }\n\n        });\n\n        return parameters;\n\n      },\n\n      // get a texture from the textureMap for use by a material.\n      getTexture: function (textureMap, id) {\n\n        // if the texture is a layered texture, just use the first layer and issue a warning\n        if ('LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture) {\n\n          console.warn('THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.');\n          id = connections.get(id).children[0].ID;\n\n        }\n\n        return textureMap.get(id);\n\n      },\n\n      // Parse nodes in FBXTree.Objects.Deformer\n      // Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n      // Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n      parseDeformers: function () {\n\n        var skeletons = {};\n        var morphTargets = {};\n\n        if ('Deformer' in fbxTree.Objects) {\n\n          var DeformerNodes = fbxTree.Objects.Deformer;\n\n          for (var nodeID in DeformerNodes) {\n\n            var deformerNode = DeformerNodes[nodeID];\n\n            var relationships = connections.get(parseInt(nodeID));\n\n            if (deformerNode.attrType === 'Skin') {\n\n              var skeleton = this.parseSkeleton(relationships, DeformerNodes);\n              skeleton.ID = nodeID;\n\n              if (relationships.parents.length > 1) console.warn('THREE.FBXLoader: skeleton attached to more than one geometry is not supported.');\n              skeleton.geometryID = relationships.parents[0].ID;\n\n              skeletons[nodeID] = skeleton;\n\n            } else if (deformerNode.attrType === 'BlendShape') {\n\n              var morphTarget = {\n                id: nodeID,\n              };\n\n              morphTarget.rawTargets = this.parseMorphTargets(relationships, DeformerNodes);\n              morphTarget.id = nodeID;\n\n              if (relationships.parents.length > 1) console.warn('THREE.FBXLoader: morph target attached to more than one geometry is not supported.');\n\n              morphTargets[nodeID] = morphTarget;\n\n            }\n\n          }\n\n        }\n\n        return {\n\n          skeletons: skeletons,\n          morphTargets: morphTargets,\n\n        };\n\n      },\n\n      // Parse single nodes in FBXTree.Objects.Deformer\n      // The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n      // Each skin node represents a skeleton and each cluster node represents a bone\n      parseSkeleton: function (relationships, deformerNodes) {\n\n        var rawBones = [];\n\n        relationships.children.forEach(function (child) {\n\n          var boneNode = deformerNodes[child.ID];\n\n          if (boneNode.attrType !== 'Cluster') return;\n\n          var rawBone = {\n\n            ID: child.ID,\n            indices: [],\n            weights: [],\n            transformLink: new THREE.Matrix4().fromArray(boneNode.TransformLink.a),\n            // transform: new THREE.Matrix4().fromArray( boneNode.Transform.a ),\n            // linkMode: boneNode.Mode,\n\n          };\n\n          if ('Indexes' in boneNode) {\n\n            rawBone.indices = boneNode.Indexes.a;\n            rawBone.weights = boneNode.Weights.a;\n\n          }\n\n          rawBones.push(rawBone);\n\n        });\n\n        return {\n\n          rawBones: rawBones,\n          bones: []\n\n        };\n\n      },\n\n      // The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n      parseMorphTargets: function (relationships, deformerNodes) {\n\n        var rawMorphTargets = [];\n\n        for (var i = 0; i < relationships.children.length; i++) {\n\n          var child = relationships.children[i];\n\n          var morphTargetNode = deformerNodes[child.ID];\n\n          var rawMorphTarget = {\n\n            name: morphTargetNode.attrName,\n            initialWeight: morphTargetNode.DeformPercent,\n            id: morphTargetNode.id,\n            fullWeights: morphTargetNode.FullWeights.a\n\n          };\n\n          if (morphTargetNode.attrType !== 'BlendShapeChannel') return;\n\n          rawMorphTarget.geoID = connections.get(parseInt(child.ID)).children.filter(function (child) {\n\n            return child.relationship === undefined;\n\n          })[0].ID;\n\n          rawMorphTargets.push(rawMorphTarget);\n\n        }\n\n        return rawMorphTargets;\n\n      },\n\n      // create the main THREE.Group() to be returned by the loader\n      parseScene: function (deformers, geometryMap, materialMap) {\n\n        sceneGraph = new THREE.Group();\n\n        var modelMap = this.parseModels(deformers.skeletons, geometryMap, materialMap);\n\n        var modelNodes = fbxTree.Objects.Model;\n\n        var self = this;\n        modelMap.forEach(function (model) {\n\n          var modelNode = modelNodes[model.ID];\n          self.setLookAtProperties(model, modelNode);\n\n          var parentConnections = connections.get(model.ID).parents;\n\n          parentConnections.forEach(function (connection) {\n\n            var parent = modelMap.get(connection.ID);\n            if (parent !== undefined) parent.add(model);\n\n          });\n\n          if (model.parent === null) {\n\n            sceneGraph.add(model);\n\n          }\n\n\n        });\n\n        this.bindSkeleton(deformers.skeletons, geometryMap, modelMap);\n\n        this.createAmbientLight();\n\n        this.setupMorphMaterials();\n\n        sceneGraph.traverse(function (node) {\n\n          if (node.userData.transformData) {\n\n            if (node.parent) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n            var transform = generateTransform(node.userData.transformData);\n\n            node.applyMatrix(transform);\n\n          }\n\n        });\n\n        var animations = new AnimationParser().parse();\n\n        // if all the models where already combined in a single group, just return that\n        if (sceneGraph.children.length === 1 && sceneGraph.children[0].isGroup) {\n\n          sceneGraph.children[0].animations = animations;\n          sceneGraph = sceneGraph.children[0];\n\n        }\n\n        sceneGraph.animations = animations;\n\n      },\n\n      // parse nodes in FBXTree.Objects.Model\n      parseModels: function (skeletons, geometryMap, materialMap) {\n\n        var modelMap = new Map();\n        var modelNodes = fbxTree.Objects.Model;\n\n        for (var nodeID in modelNodes) {\n\n          var id = parseInt(nodeID);\n          var node = modelNodes[nodeID];\n          var relationships = connections.get(id);\n\n          var model = this.buildSkeleton(relationships, skeletons, id, node.attrName);\n\n          if (!model) {\n\n            switch (node.attrType) {\n\n              case 'Camera':\n                model = this.createCamera(relationships);\n                break;\n              case 'Light':\n                model = this.createLight(relationships);\n                break;\n              case 'Mesh':\n                model = this.createMesh(relationships, geometryMap, materialMap);\n                break;\n              case 'NurbsCurve':\n                model = this.createCurve(relationships, geometryMap);\n                break;\n              case 'LimbNode':\n              case 'Root':\n                model = new THREE.Bone();\n                break;\n              case 'Null':\n              default:\n                model = new THREE.Group();\n                break;\n\n            }\n\n            model.name = node.attrName ? THREE.PropertyBinding.sanitizeNodeName(node.attrName) : '';\n\n            model.ID = id;\n\n          }\n\n          this.getTransformData(model, node);\n          modelMap.set(id, model);\n\n        }\n\n        return modelMap;\n\n      },\n\n      buildSkeleton: function (relationships, skeletons, id, name) {\n\n        var bone = null;\n\n        relationships.parents.forEach(function (parent) {\n\n          for (var ID in skeletons) {\n\n            var skeleton = skeletons[ID];\n\n            skeleton.rawBones.forEach(function (rawBone, i) {\n\n              if (rawBone.ID === parent.ID) {\n\n                var subBone = bone;\n                bone = new THREE.Bone();\n\n                bone.matrixWorld.copy(rawBone.transformLink);\n\n                // set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n                bone.name = name ? THREE.PropertyBinding.sanitizeNodeName(name) : '';\n                bone.ID = id;\n\n                skeleton.bones[i] = bone;\n\n                // In cases where a bone is shared between multiple meshes\n                // duplicate the bone here and and it as a child of the first bone\n                if (subBone !== null) {\n\n                  bone.add(subBone);\n\n                }\n\n              }\n\n            });\n\n          }\n\n        });\n\n        return bone;\n\n      },\n\n      // create a THREE.PerspectiveCamera or THREE.OrthographicCamera\n      createCamera: function (relationships) {\n\n        var model;\n        var cameraAttribute;\n\n        relationships.children.forEach(function (child) {\n\n          var attr = fbxTree.Objects.NodeAttribute[child.ID];\n\n          if (attr !== undefined) {\n\n            cameraAttribute = attr;\n\n          }\n\n        });\n\n        if (cameraAttribute === undefined) {\n\n          model = new THREE.Object3D();\n\n        } else {\n\n          var type = 0;\n          if (cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1) {\n\n            type = 1;\n\n          }\n\n          var nearClippingPlane = 1;\n          if (cameraAttribute.NearPlane !== undefined) {\n\n            nearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n          }\n\n          var farClippingPlane = 1000;\n          if (cameraAttribute.FarPlane !== undefined) {\n\n            farClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n          }\n\n\n          var width = window.innerWidth;\n          var height = window.innerHeight;\n\n          if (cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined) {\n\n            width = cameraAttribute.AspectWidth.value;\n            height = cameraAttribute.AspectHeight.value;\n\n          }\n\n          var aspect = width / height;\n\n          var fov = 45;\n          if (cameraAttribute.FieldOfView !== undefined) {\n\n            fov = cameraAttribute.FieldOfView.value;\n\n          }\n\n          var focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n          switch (type) {\n\n            case 0: // Perspective\n              model = new THREE.PerspectiveCamera(fov, aspect, nearClippingPlane, farClippingPlane);\n              if (focalLength !== null) model.setFocalLength(focalLength);\n              break;\n\n            case 1: // Orthographic\n              model = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, nearClippingPlane, farClippingPlane);\n              break;\n\n            default:\n              console.warn('THREE.FBXLoader: Unknown camera type ' + type + '.');\n              model = new THREE.Object3D();\n              break;\n\n          }\n\n        }\n\n        return model;\n\n      },\n\n      // Create a THREE.DirectionalLight, THREE.PointLight or THREE.SpotLight\n      createLight: function (relationships) {\n\n        var model;\n        var lightAttribute;\n\n        relationships.children.forEach(function (child) {\n\n          var attr = fbxTree.Objects.NodeAttribute[child.ID];\n\n          if (attr !== undefined) {\n\n            lightAttribute = attr;\n\n          }\n\n        });\n\n        if (lightAttribute === undefined) {\n\n          model = new THREE.Object3D();\n\n        } else {\n\n          var type;\n\n          // LightType can be undefined for Point lights\n          if (lightAttribute.LightType === undefined) {\n\n            type = 0;\n\n          } else {\n\n            type = lightAttribute.LightType.value;\n\n          }\n\n          var color = 0xffffff;\n\n          if (lightAttribute.Color !== undefined) {\n\n            color = new THREE.Color().fromArray(lightAttribute.Color.value);\n\n          }\n\n          var intensity = (lightAttribute.Intensity === undefined) ? 1 : lightAttribute.Intensity.value / 100;\n\n          // light disabled\n          if (lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0) {\n\n            intensity = 0;\n\n          }\n\n          var distance = 0;\n          if (lightAttribute.FarAttenuationEnd !== undefined) {\n\n            if (lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0) {\n\n              distance = 0;\n\n            } else {\n\n              distance = lightAttribute.FarAttenuationEnd.value;\n\n            }\n\n          }\n\n          // TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n          var decay = 1;\n\n          switch (type) {\n\n            case 0: // Point\n              model = new THREE.PointLight(color, intensity, distance, decay);\n              break;\n\n            case 1: // Directional\n              model = new THREE.DirectionalLight(color, intensity);\n              break;\n\n            case 2: // Spot\n              var angle = Math.PI / 3;\n\n              if (lightAttribute.InnerAngle !== undefined) {\n\n                angle = THREE.Math.degToRad(lightAttribute.InnerAngle.value);\n\n              }\n\n              var penumbra = 0;\n              if (lightAttribute.OuterAngle !== undefined) {\n\n                // TODO: this is not correct - FBX calculates outer and inner angle in degrees\n                // with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n                // while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n                penumbra = THREE.Math.degToRad(lightAttribute.OuterAngle.value);\n                penumbra = Math.max(penumbra, 1);\n\n              }\n\n              model = new THREE.SpotLight(color, intensity, distance, angle, penumbra, decay);\n              break;\n\n            default:\n              console.warn('THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a THREE.PointLight.');\n              model = new THREE.PointLight(color, intensity);\n              break;\n\n          }\n\n          if (lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1) {\n\n            model.castShadow = true;\n\n          }\n\n        }\n\n        return model;\n\n      },\n\n      createMesh: function (relationships, geometryMap, materialMap) {\n\n        var model;\n        var geometry = null;\n        var material = null;\n        var materials = [];\n\n        // get geometry and materials(s) from connections\n        relationships.children.forEach(function (child) {\n\n          if (geometryMap.has(child.ID)) {\n\n            geometry = geometryMap.get(child.ID);\n\n          }\n\n          if (materialMap.has(child.ID)) {\n\n            materials.push(materialMap.get(child.ID));\n\n          }\n\n        });\n\n        if (materials.length > 1) {\n\n          material = materials;\n\n        } else if (materials.length > 0) {\n\n          material = materials[0];\n\n        } else {\n\n          material = new THREE.MeshPhongMaterial({color: 0xcccccc});\n          materials.push(material);\n\n        }\n\n        if ('color' in geometry.attributes) {\n\n          materials.forEach(function (material) {\n\n            material.vertexColors = THREE.VertexColors;\n\n          });\n\n        }\n\n        if (geometry.FBX_Deformer) {\n\n          materials.forEach(function (material) {\n\n            material.skinning = true;\n\n          });\n\n          model = new THREE.SkinnedMesh(geometry, material);\n          model.normalizeSkinWeights();\n\n        } else {\n\n          model = new THREE.Mesh(geometry, material);\n\n        }\n\n        return model;\n\n      },\n\n      createCurve: function (relationships, geometryMap) {\n\n        var geometry = relationships.children.reduce(function (geo, child) {\n\n          if (geometryMap.has(child.ID)) geo = geometryMap.get(child.ID);\n\n          return geo;\n\n        }, null);\n\n        // FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n        var material = new THREE.LineBasicMaterial({color: 0x3300ff, linewidth: 1});\n        return new THREE.Line(geometry, material);\n\n      },\n\n      // parse the model node for transform data\n      getTransformData: function (model, modelNode) {\n\n        var transformData = {};\n\n        if ('InheritType' in modelNode) transformData.inheritType = parseInt(modelNode.InheritType.value);\n\n        if ('RotationOrder' in modelNode) transformData.eulerOrder = getEulerOrder(modelNode.RotationOrder.value);\n        else transformData.eulerOrder = 'ZYX';\n\n        if ('Lcl_Translation' in modelNode) transformData.translation = modelNode.Lcl_Translation.value;\n\n        if ('PreRotation' in modelNode) transformData.preRotation = modelNode.PreRotation.value;\n        if ('Lcl_Rotation' in modelNode) transformData.rotation = modelNode.Lcl_Rotation.value;\n        if ('PostRotation' in modelNode) transformData.postRotation = modelNode.PostRotation.value;\n\n        if ('Lcl_Scaling' in modelNode) transformData.scale = modelNode.Lcl_Scaling.value;\n\n        if ('ScalingOffset' in modelNode) transformData.scalingOffset = modelNode.ScalingOffset.value;\n        if ('ScalingPivot' in modelNode) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n        if ('RotationOffset' in modelNode) transformData.rotationOffset = modelNode.RotationOffset.value;\n        if ('RotationPivot' in modelNode) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n        model.userData.transformData = transformData;\n\n      },\n\n      setLookAtProperties: function (model, modelNode) {\n\n        if ('LookAtProperty' in modelNode) {\n\n          var children = connections.get(model.ID).children;\n\n          children.forEach(function (child) {\n\n            if (child.relationship === 'LookAtProperty') {\n\n              var lookAtTarget = fbxTree.Objects.Model[child.ID];\n\n              if ('Lcl_Translation' in lookAtTarget) {\n\n                var pos = lookAtTarget.Lcl_Translation.value;\n\n                // DirectionalLight, SpotLight\n                if (model.target !== undefined) {\n\n                  model.target.position.fromArray(pos);\n                  sceneGraph.add(model.target);\n\n                } else { // Cameras and other Object3Ds\n\n                  model.lookAt(new THREE.Vector3().fromArray(pos));\n\n                }\n\n              }\n\n            }\n\n          });\n\n        }\n\n      },\n\n      bindSkeleton: function (skeletons, geometryMap, modelMap) {\n\n        var bindMatrices = this.parsePoseNodes();\n\n        for (var ID in skeletons) {\n\n          var skeleton = skeletons[ID];\n\n          var parents = connections.get(parseInt(skeleton.ID)).parents;\n\n          parents.forEach(function (parent) {\n\n            if (geometryMap.has(parent.ID)) {\n\n              var geoID = parent.ID;\n              var geoRelationships = connections.get(geoID);\n\n              geoRelationships.parents.forEach(function (geoConnParent) {\n\n                if (modelMap.has(geoConnParent.ID)) {\n\n                  var model = modelMap.get(geoConnParent.ID);\n\n                  model.bind(new THREE.Skeleton(skeleton.bones), bindMatrices[geoConnParent.ID]);\n\n                }\n\n              });\n\n            }\n\n          });\n\n        }\n\n      },\n\n      parsePoseNodes: function () {\n\n        var bindMatrices = {};\n\n        if ('Pose' in fbxTree.Objects) {\n\n          var BindPoseNode = fbxTree.Objects.Pose;\n\n          for (var nodeID in BindPoseNode) {\n\n            if (BindPoseNode[nodeID].attrType === 'BindPose') {\n\n              var poseNodes = BindPoseNode[nodeID].PoseNode;\n\n              if (Array.isArray(poseNodes)) {\n\n                poseNodes.forEach(function (poseNode) {\n\n                  bindMatrices[poseNode.Node] = new THREE.Matrix4().fromArray(poseNode.Matrix.a);\n\n                });\n\n              } else {\n\n                bindMatrices[poseNodes.Node] = new THREE.Matrix4().fromArray(poseNodes.Matrix.a);\n\n              }\n\n            }\n\n          }\n\n        }\n\n        return bindMatrices;\n\n      },\n\n      // Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n      createAmbientLight: function () {\n\n        if ('GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings) {\n\n          var ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n          var r = ambientColor[0];\n          var g = ambientColor[1];\n          var b = ambientColor[2];\n\n          if (r !== 0 || g !== 0 || b !== 0) {\n\n            var color = new THREE.Color(r, g, b);\n            sceneGraph.add(new THREE.AmbientLight(color, 1));\n\n          }\n\n        }\n\n      },\n\n      setupMorphMaterials: function () {\n\n        var self = this;\n        sceneGraph.traverse(function (child) {\n\n          if (child.isMesh) {\n\n            if (child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length) {\n\n              if (Array.isArray(child.material)) {\n\n                child.material.forEach(function (material, i) {\n\n                  self.setupMorphMaterial(child, material, i);\n\n                });\n\n              } else {\n\n                self.setupMorphMaterial(child, child.material);\n\n              }\n\n            }\n\n          }\n\n        });\n\n      },\n\n      setupMorphMaterial: function (child, material, index) {\n\n        var uuid = child.uuid;\n        var matUuid = material.uuid;\n\n        // if a geometry has morph targets, it cannot share the material with other geometries\n        var sharedMat = false;\n\n        sceneGraph.traverse(function (node) {\n\n          if (node.isMesh) {\n\n            if (Array.isArray(node.material)) {\n\n              node.material.forEach(function (mat) {\n\n                if (mat.uuid === matUuid && node.uuid !== uuid) sharedMat = true;\n\n              });\n\n            } else if (node.material.uuid === matUuid && node.uuid !== uuid) sharedMat = true;\n\n          }\n\n        });\n\n        if (sharedMat === true) {\n\n          var clonedMat = material.clone();\n          clonedMat.morphTargets = true;\n\n          if (index === undefined) child.material = clonedMat;\n          else child.material[index] = clonedMat;\n\n        } else material.morphTargets = true;\n\n      }\n\n    };\n\n    // parse Geometry data from FBXTree and return map of BufferGeometries\n    function GeometryParser() {\n    }\n\n    GeometryParser.prototype = {\n\n      constructor: GeometryParser,\n\n      // Parse nodes in FBXTree.Objects.Geometry\n      parse: function (deformers) {\n\n        var geometryMap = new Map();\n\n        if ('Geometry' in fbxTree.Objects) {\n\n          var geoNodes = fbxTree.Objects.Geometry;\n\n          for (var nodeID in geoNodes) {\n\n            var relationships = connections.get(parseInt(nodeID));\n            var geo = this.parseGeometry(relationships, geoNodes[nodeID], deformers);\n\n            geometryMap.set(parseInt(nodeID), geo);\n\n          }\n\n        }\n\n        return geometryMap;\n\n      },\n\n      // Parse single node in FBXTree.Objects.Geometry\n      parseGeometry: function (relationships, geoNode, deformers) {\n\n        switch (geoNode.attrType) {\n\n          case 'Mesh':\n            return this.parseMeshGeometry(relationships, geoNode, deformers);\n            break;\n\n          case 'NurbsCurve':\n            return this.parseNurbsGeometry(geoNode);\n            break;\n\n        }\n\n      },\n\n\n      // Parse single node mesh geometry in FBXTree.Objects.Geometry\n      parseMeshGeometry: function (relationships, geoNode, deformers) {\n\n        var skeletons = deformers.skeletons;\n        var morphTargets = [];\n\n        var modelNodes = relationships.parents.map(function (parent) {\n\n          return fbxTree.Objects.Model[parent.ID];\n\n        });\n\n        // don't create geometry if it is not associated with any models\n        if (modelNodes.length === 0) return;\n\n        var skeleton = relationships.children.reduce(function (skeleton, child) {\n\n          if (skeletons[child.ID] !== undefined) skeleton = skeletons[child.ID];\n\n          return skeleton;\n\n        }, null);\n\n        relationships.children.forEach(function (child) {\n\n          if (deformers.morphTargets[child.ID] !== undefined) {\n\n            morphTargets.push(deformers.morphTargets[child.ID]);\n\n          }\n\n        });\n\n        // Assume one model and get the preRotation from that\n        // if there is more than one model associated with the geometry this may cause problems\n        var modelNode = modelNodes[0];\n\n        var transformData = {};\n\n        if ('RotationOrder' in modelNode) transformData.eulerOrder = getEulerOrder(modelNode.RotationOrder.value);\n        if ('InheritType' in modelNode) transformData.inheritType = parseInt(modelNode.InheritType.value);\n\n        if ('GeometricTranslation' in modelNode) transformData.translation = modelNode.GeometricTranslation.value;\n        if ('GeometricRotation' in modelNode) transformData.rotation = modelNode.GeometricRotation.value;\n        if ('GeometricScaling' in modelNode) transformData.scale = modelNode.GeometricScaling.value;\n\n        var transform = generateTransform(transformData);\n\n        return this.genGeometry(geoNode, skeleton, morphTargets, transform);\n\n      },\n\n      // Generate a THREE.BufferGeometry from a node in FBXTree.Objects.Geometry\n      genGeometry: function (geoNode, skeleton, morphTargets, preTransform) {\n\n        var geo = new THREE.BufferGeometry();\n        if (geoNode.attrName) geo.name = geoNode.attrName;\n\n        var geoInfo = this.parseGeoNode(geoNode, skeleton);\n        var buffers = this.genBuffers(geoInfo);\n\n        var positionAttribute = new THREE.Float32BufferAttribute(buffers.vertex, 3);\n\n        positionAttribute.applyMatrix4(preTransform);\n\n        geo.setAttribute('position', positionAttribute);\n\n        if (buffers.colors.length > 0) {\n\n          geo.setAttribute('color', new THREE.Float32BufferAttribute(buffers.colors, 3));\n\n        }\n\n        if (skeleton) {\n\n          geo.setAttribute('skinIndex', new THREE.Uint16BufferAttribute(buffers.weightsIndices, 4));\n\n          geo.setAttribute('skinWeight', new THREE.Float32BufferAttribute(buffers.vertexWeights, 4));\n\n          // used later to bind the skeleton to the model\n          geo.FBX_Deformer = skeleton;\n\n        }\n\n        if (buffers.normal.length > 0) {\n\n          var normalMatrix = new THREE.Matrix3().getNormalMatrix(preTransform);\n\n          var normalAttribute = new THREE.Float32BufferAttribute(buffers.normal, 3);\n          normalAttribute.applyNormalMatrix(normalMatrix);\n\n          geo.setAttribute('normal', normalAttribute);\n\n        }\n\n        buffers.uvs.forEach(function (uvBuffer, i) {\n\n          // subsequent uv buffers are called 'uv1', 'uv2', ...\n          var name = 'uv' + (i + 1).toString();\n\n          // the first uv buffer is just called 'uv'\n          if (i === 0) {\n\n            name = 'uv';\n\n          }\n\n          geo.setAttribute(name, new THREE.Float32BufferAttribute(buffers.uvs[i], 2));\n\n        });\n\n        if (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n          // Convert the material indices of each vertex into rendering groups on the geometry.\n          var prevMaterialIndex = buffers.materialIndex[0];\n          var startIndex = 0;\n\n          buffers.materialIndex.forEach(function (currentIndex, i) {\n\n            if (currentIndex !== prevMaterialIndex) {\n\n              geo.addGroup(startIndex, i - startIndex, prevMaterialIndex);\n\n              prevMaterialIndex = currentIndex;\n              startIndex = i;\n\n            }\n\n          });\n\n          // the loop above doesn't add the last group, do that here.\n          if (geo.groups.length > 0) {\n\n            var lastGroup = geo.groups[geo.groups.length - 1];\n            var lastIndex = lastGroup.start + lastGroup.count;\n\n            if (lastIndex !== buffers.materialIndex.length) {\n\n              geo.addGroup(lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex);\n\n            }\n\n          }\n\n          // case where there are multiple materials but the whole geometry is only\n          // using one of them\n          if (geo.groups.length === 0) {\n\n            geo.addGroup(0, buffers.materialIndex.length, buffers.materialIndex[0]);\n\n          }\n\n        }\n\n        this.addMorphTargets(geo, geoNode, morphTargets, preTransform);\n\n        return geo;\n\n      },\n\n      parseGeoNode: function (geoNode, skeleton) {\n\n        var geoInfo = {};\n\n        geoInfo.vertexPositions = (geoNode.Vertices !== undefined) ? geoNode.Vertices.a : [];\n        geoInfo.vertexIndices = (geoNode.PolygonVertexIndex !== undefined) ? geoNode.PolygonVertexIndex.a : [];\n\n        if (geoNode.LayerElementColor) {\n\n          geoInfo.color = this.parseVertexColors(geoNode.LayerElementColor[0]);\n\n        }\n\n        if (geoNode.LayerElementMaterial) {\n\n          geoInfo.material = this.parseMaterialIndices(geoNode.LayerElementMaterial[0]);\n\n        }\n\n        if (geoNode.LayerElementNormal) {\n\n          geoInfo.normal = this.parseNormals(geoNode.LayerElementNormal[0]);\n\n        }\n\n        if (geoNode.LayerElementUV) {\n\n          geoInfo.uv = [];\n\n          var i = 0;\n          while (geoNode.LayerElementUV[i]) {\n\n            geoInfo.uv.push(this.parseUVs(geoNode.LayerElementUV[i]));\n            i++;\n\n          }\n\n        }\n\n        geoInfo.weightTable = {};\n\n        if (skeleton !== null) {\n\n          geoInfo.skeleton = skeleton;\n\n          skeleton.rawBones.forEach(function (rawBone, i) {\n\n            // loop over the bone's vertex indices and weights\n            rawBone.indices.forEach(function (index, j) {\n\n              if (geoInfo.weightTable[index] === undefined) geoInfo.weightTable[index] = [];\n\n              geoInfo.weightTable[index].push({\n\n                id: i,\n                weight: rawBone.weights[j],\n\n              });\n\n            });\n\n          });\n\n        }\n\n        return geoInfo;\n\n      },\n\n      genBuffers: function (geoInfo) {\n\n        var buffers = {\n          vertex: [],\n          normal: [],\n          colors: [],\n          uvs: [],\n          materialIndex: [],\n          vertexWeights: [],\n          weightsIndices: [],\n        };\n\n        var polygonIndex = 0;\n        var faceLength = 0;\n        var displayedWeightsWarning = false;\n\n        // these will hold data for a single face\n        var facePositionIndexes = [];\n        var faceNormals = [];\n        var faceColors = [];\n        var faceUVs = [];\n        var faceWeights = [];\n        var faceWeightIndices = [];\n\n        var self = this;\n        geoInfo.vertexIndices.forEach(function (vertexIndex, polygonVertexIndex) {\n\n          var endOfFace = false;\n\n          // Face index and vertex index arrays are combined in a single array\n          // A cube with quad faces looks like this:\n          // PolygonVertexIndex: *24 {\n          //  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n          //  }\n          // Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n          // to find index of last vertex bit shift the index: ^ - 1\n          if (vertexIndex < 0) {\n\n            vertexIndex = vertexIndex ^ -1; // equivalent to ( x * -1 ) - 1\n            endOfFace = true;\n\n          }\n\n          var weightIndices = [];\n          var weights = [];\n\n          facePositionIndexes.push(vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2);\n\n          if (geoInfo.color) {\n\n            var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color);\n\n            faceColors.push(data[0], data[1], data[2]);\n\n          }\n\n          if (geoInfo.skeleton) {\n\n            if (geoInfo.weightTable[vertexIndex] !== undefined) {\n\n              geoInfo.weightTable[vertexIndex].forEach(function (wt) {\n\n                weights.push(wt.weight);\n                weightIndices.push(wt.id);\n\n              });\n\n\n            }\n\n            if (weights.length > 4) {\n\n              if (!displayedWeightsWarning) {\n\n                console.warn('THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.');\n                displayedWeightsWarning = true;\n\n              }\n\n              var wIndex = [0, 0, 0, 0];\n              var Weight = [0, 0, 0, 0];\n\n              weights.forEach(function (weight, weightIndex) {\n\n                var currentWeight = weight;\n                var currentIndex = weightIndices[weightIndex];\n\n                Weight.forEach(function (comparedWeight, comparedWeightIndex, comparedWeightArray) {\n\n                  if (currentWeight > comparedWeight) {\n\n                    comparedWeightArray[comparedWeightIndex] = currentWeight;\n                    currentWeight = comparedWeight;\n\n                    var tmp = wIndex[comparedWeightIndex];\n                    wIndex[comparedWeightIndex] = currentIndex;\n                    currentIndex = tmp;\n\n                  }\n\n                });\n\n              });\n\n              weightIndices = wIndex;\n              weights = Weight;\n\n            }\n\n            // if the weight array is shorter than 4 pad with 0s\n            while (weights.length < 4) {\n\n              weights.push(0);\n              weightIndices.push(0);\n\n            }\n\n            for (var i = 0; i < 4; ++i) {\n\n              faceWeights.push(weights[i]);\n              faceWeightIndices.push(weightIndices[i]);\n\n            }\n\n          }\n\n          if (geoInfo.normal) {\n\n            var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal);\n\n            faceNormals.push(data[0], data[1], data[2]);\n\n          }\n\n          if (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n            var materialIndex = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material)[0];\n\n          }\n\n          if (geoInfo.uv) {\n\n            geoInfo.uv.forEach(function (uv, i) {\n\n              var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, uv);\n\n              if (faceUVs[i] === undefined) {\n\n                faceUVs[i] = [];\n\n              }\n\n              faceUVs[i].push(data[0]);\n              faceUVs[i].push(data[1]);\n\n            });\n\n          }\n\n          faceLength++;\n\n          if (endOfFace) {\n\n            self.genFace(buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength);\n\n            polygonIndex++;\n            faceLength = 0;\n\n            // reset arrays for the next face\n            facePositionIndexes = [];\n            faceNormals = [];\n            faceColors = [];\n            faceUVs = [];\n            faceWeights = [];\n            faceWeightIndices = [];\n\n          }\n\n        });\n\n        return buffers;\n\n      },\n\n      // Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n      genFace: function (buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength) {\n\n        for (var i = 2; i < faceLength; i++) {\n\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[0]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[1]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[2]]);\n\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3 + 1]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3 + 2]]);\n\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3 + 1]]);\n          buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3 + 2]]);\n\n          if (geoInfo.skeleton) {\n\n            buffers.vertexWeights.push(faceWeights[0]);\n            buffers.vertexWeights.push(faceWeights[1]);\n            buffers.vertexWeights.push(faceWeights[2]);\n            buffers.vertexWeights.push(faceWeights[3]);\n\n            buffers.vertexWeights.push(faceWeights[(i - 1) * 4]);\n            buffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 1]);\n            buffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 2]);\n            buffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 3]);\n\n            buffers.vertexWeights.push(faceWeights[i * 4]);\n            buffers.vertexWeights.push(faceWeights[i * 4 + 1]);\n            buffers.vertexWeights.push(faceWeights[i * 4 + 2]);\n            buffers.vertexWeights.push(faceWeights[i * 4 + 3]);\n\n            buffers.weightsIndices.push(faceWeightIndices[0]);\n            buffers.weightsIndices.push(faceWeightIndices[1]);\n            buffers.weightsIndices.push(faceWeightIndices[2]);\n            buffers.weightsIndices.push(faceWeightIndices[3]);\n\n            buffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4]);\n            buffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 1]);\n            buffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 2]);\n            buffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 3]);\n\n            buffers.weightsIndices.push(faceWeightIndices[i * 4]);\n            buffers.weightsIndices.push(faceWeightIndices[i * 4 + 1]);\n            buffers.weightsIndices.push(faceWeightIndices[i * 4 + 2]);\n            buffers.weightsIndices.push(faceWeightIndices[i * 4 + 3]);\n\n          }\n\n          if (geoInfo.color) {\n\n            buffers.colors.push(faceColors[0]);\n            buffers.colors.push(faceColors[1]);\n            buffers.colors.push(faceColors[2]);\n\n            buffers.colors.push(faceColors[(i - 1) * 3]);\n            buffers.colors.push(faceColors[(i - 1) * 3 + 1]);\n            buffers.colors.push(faceColors[(i - 1) * 3 + 2]);\n\n            buffers.colors.push(faceColors[i * 3]);\n            buffers.colors.push(faceColors[i * 3 + 1]);\n            buffers.colors.push(faceColors[i * 3 + 2]);\n\n          }\n\n          if (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n            buffers.materialIndex.push(materialIndex);\n            buffers.materialIndex.push(materialIndex);\n            buffers.materialIndex.push(materialIndex);\n\n          }\n\n          if (geoInfo.normal) {\n\n            buffers.normal.push(faceNormals[0]);\n            buffers.normal.push(faceNormals[1]);\n            buffers.normal.push(faceNormals[2]);\n\n            buffers.normal.push(faceNormals[(i - 1) * 3]);\n            buffers.normal.push(faceNormals[(i - 1) * 3 + 1]);\n            buffers.normal.push(faceNormals[(i - 1) * 3 + 2]);\n\n            buffers.normal.push(faceNormals[i * 3]);\n            buffers.normal.push(faceNormals[i * 3 + 1]);\n            buffers.normal.push(faceNormals[i * 3 + 2]);\n\n          }\n\n          if (geoInfo.uv) {\n\n            geoInfo.uv.forEach(function (uv, j) {\n\n              if (buffers.uvs[j] === undefined) buffers.uvs[j] = [];\n\n              buffers.uvs[j].push(faceUVs[j][0]);\n              buffers.uvs[j].push(faceUVs[j][1]);\n\n              buffers.uvs[j].push(faceUVs[j][(i - 1) * 2]);\n              buffers.uvs[j].push(faceUVs[j][(i - 1) * 2 + 1]);\n\n              buffers.uvs[j].push(faceUVs[j][i * 2]);\n              buffers.uvs[j].push(faceUVs[j][i * 2 + 1]);\n\n            });\n\n          }\n\n        }\n\n      },\n\n      addMorphTargets: function (parentGeo, parentGeoNode, morphTargets, preTransform) {\n\n        if (morphTargets.length === 0) return;\n\n        parentGeo.morphTargetsRelative = true;\n\n        parentGeo.morphAttributes.position = [];\n        // parentGeo.morphAttributes.normal = []; // not implemented\n\n        var self = this;\n        morphTargets.forEach(function (morphTarget) {\n\n          morphTarget.rawTargets.forEach(function (rawTarget) {\n\n            var morphGeoNode = fbxTree.Objects.Geometry[rawTarget.geoID];\n\n            if (morphGeoNode !== undefined) {\n\n              self.genMorphGeometry(parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name);\n\n            }\n\n          });\n\n        });\n\n      },\n\n      // a morph geometry node is similar to a standard  node, and the node is also contained\n      // in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n      // and a special attribute Index defining which vertices of the original geometry are affected\n      // Normal and position attributes only have data for the vertices that are affected by the morph\n      genMorphGeometry: function (parentGeo, parentGeoNode, morphGeoNode, preTransform, name) {\n\n        var vertexIndices = (parentGeoNode.PolygonVertexIndex !== undefined) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n        var morphPositionsSparse = (morphGeoNode.Vertices !== undefined) ? morphGeoNode.Vertices.a : [];\n        var indices = (morphGeoNode.Indexes !== undefined) ? morphGeoNode.Indexes.a : [];\n\n        var length = parentGeo.attributes.position.count * 3;\n        var morphPositions = new Float32Array(length);\n\n        for (var i = 0; i < indices.length; i++) {\n\n          var morphIndex = indices[i] * 3;\n\n          morphPositions[morphIndex] = morphPositionsSparse[i * 3];\n          morphPositions[morphIndex + 1] = morphPositionsSparse[i * 3 + 1];\n          morphPositions[morphIndex + 2] = morphPositionsSparse[i * 3 + 2];\n\n        }\n\n        // TODO: add morph normal support\n        var morphGeoInfo = {\n          vertexIndices: vertexIndices,\n          vertexPositions: morphPositions,\n\n        };\n\n        var morphBuffers = this.genBuffers(morphGeoInfo);\n\n        var positionAttribute = new THREE.Float32BufferAttribute(morphBuffers.vertex, 3);\n        positionAttribute.name = name || morphGeoNode.attrName;\n\n        positionAttribute.applyMatrix4(preTransform);\n\n        parentGeo.morphAttributes.position.push(positionAttribute);\n\n      },\n\n      // Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n      parseNormals: function (NormalNode) {\n\n        var mappingType = NormalNode.MappingInformationType;\n        var referenceType = NormalNode.ReferenceInformationType;\n        var buffer = NormalNode.Normals.a;\n        var indexBuffer = [];\n        if (referenceType === 'IndexToDirect') {\n\n          if ('NormalIndex' in NormalNode) {\n\n            indexBuffer = NormalNode.NormalIndex.a;\n\n          } else if ('NormalsIndex' in NormalNode) {\n\n            indexBuffer = NormalNode.NormalsIndex.a;\n\n          }\n\n        }\n\n        return {\n          dataSize: 3,\n          buffer: buffer,\n          indices: indexBuffer,\n          mappingType: mappingType,\n          referenceType: referenceType\n        };\n\n      },\n\n      // Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n      parseUVs: function (UVNode) {\n\n        var mappingType = UVNode.MappingInformationType;\n        var referenceType = UVNode.ReferenceInformationType;\n        var buffer = UVNode.UV.a;\n        var indexBuffer = [];\n        if (referenceType === 'IndexToDirect') {\n\n          indexBuffer = UVNode.UVIndex.a;\n\n        }\n\n        return {\n          dataSize: 2,\n          buffer: buffer,\n          indices: indexBuffer,\n          mappingType: mappingType,\n          referenceType: referenceType\n        };\n\n      },\n\n      // Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n      parseVertexColors: function (ColorNode) {\n\n        var mappingType = ColorNode.MappingInformationType;\n        var referenceType = ColorNode.ReferenceInformationType;\n        var buffer = ColorNode.Colors.a;\n        var indexBuffer = [];\n        if (referenceType === 'IndexToDirect') {\n\n          indexBuffer = ColorNode.ColorIndex.a;\n\n        }\n\n        return {\n          dataSize: 4,\n          buffer: buffer,\n          indices: indexBuffer,\n          mappingType: mappingType,\n          referenceType: referenceType\n        };\n\n      },\n\n      // Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n      parseMaterialIndices: function (MaterialNode) {\n\n        var mappingType = MaterialNode.MappingInformationType;\n        var referenceType = MaterialNode.ReferenceInformationType;\n\n        if (mappingType === 'NoMappingInformation') {\n\n          return {\n            dataSize: 1,\n            buffer: [0],\n            indices: [0],\n            mappingType: 'AllSame',\n            referenceType: referenceType\n          };\n\n        }\n\n        var materialIndexBuffer = MaterialNode.Materials.a;\n\n        // Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n        // we expect.So we create an intermediate buffer that points to the index in the buffer,\n        // for conforming with the other functions we've written for other data.\n        var materialIndices = [];\n\n        for (var i = 0; i < materialIndexBuffer.length; ++i) {\n\n          materialIndices.push(i);\n\n        }\n\n        return {\n          dataSize: 1,\n          buffer: materialIndexBuffer,\n          indices: materialIndices,\n          mappingType: mappingType,\n          referenceType: referenceType\n        };\n\n      },\n\n      // Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n      parseNurbsGeometry: function (geoNode) {\n\n        if (THREE.NURBSCurve === undefined) {\n\n          console.error('THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.');\n          return new THREE.BufferGeometry();\n\n        }\n\n        var order = parseInt(geoNode.Order);\n\n        if (isNaN(order)) {\n\n          console.error('THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id);\n          return new THREE.BufferGeometry();\n\n        }\n\n        var degree = order - 1;\n\n        var knots = geoNode.KnotVector.a;\n        var controlPoints = [];\n        var pointsValues = geoNode.Points.a;\n\n        for (var i = 0, l = pointsValues.length; i < l; i += 4) {\n\n          controlPoints.push(new THREE.Vector4().fromArray(pointsValues, i));\n\n        }\n\n        var startKnot, endKnot;\n\n        if (geoNode.Form === 'Closed') {\n\n          controlPoints.push(controlPoints[0]);\n\n        } else if (geoNode.Form === 'Periodic') {\n\n          startKnot = degree;\n          endKnot = knots.length - 1 - startKnot;\n\n          for (var i = 0; i < degree; ++i) {\n\n            controlPoints.push(controlPoints[i]);\n\n          }\n\n        }\n\n        var curve = new THREE.NURBSCurve(degree, knots, controlPoints, startKnot, endKnot);\n        var vertices = curve.getPoints(controlPoints.length * 7);\n\n        var positions = new Float32Array(vertices.length * 3);\n\n        vertices.forEach(function (vertex, i) {\n\n          vertex.toArray(positions, i * 3);\n\n        });\n\n        var geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n\n        return geometry;\n\n      },\n\n    };\n\n    // parse animation data from FBXTree\n    function AnimationParser() {\n    }\n\n    AnimationParser.prototype = {\n\n      constructor: AnimationParser,\n\n      // take raw animation clips and turn them into three.js animation clips\n      parse: function () {\n\n        var animationClips = [];\n\n        var rawClips = this.parseClips();\n\n        if (rawClips !== undefined) {\n\n          for (var key in rawClips) {\n\n            var rawClip = rawClips[key];\n\n            var clip = this.addClip(rawClip);\n\n            animationClips.push(clip);\n\n          }\n\n        }\n\n        return animationClips;\n\n      },\n\n      parseClips: function () {\n\n        // since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n        // if this is undefined we can safely assume there are no animations\n        if (fbxTree.Objects.AnimationCurve === undefined) return undefined;\n\n        var curveNodesMap = this.parseAnimationCurveNodes();\n\n        this.parseAnimationCurves(curveNodesMap);\n\n        var layersMap = this.parseAnimationLayers(curveNodesMap);\n        var rawClips = this.parseAnimStacks(layersMap);\n\n        return rawClips;\n\n      },\n\n      // parse nodes in FBXTree.Objects.AnimationCurveNode\n      // each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n      // and is referenced by an AnimationLayer\n      parseAnimationCurveNodes: function () {\n\n        var rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n        var curveNodesMap = new Map();\n\n        for (var nodeID in rawCurveNodes) {\n\n          var rawCurveNode = rawCurveNodes[nodeID];\n\n          if (rawCurveNode.attrName.match(/S|R|T|DeformPercent/) !== null) {\n\n            var curveNode = {\n\n              id: rawCurveNode.id,\n              attr: rawCurveNode.attrName,\n              curves: {},\n\n            };\n\n            curveNodesMap.set(curveNode.id, curveNode);\n\n          }\n\n        }\n\n        return curveNodesMap;\n\n      },\n\n      // parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n      // previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n      // axis ( e.g. times and values of x rotation)\n      parseAnimationCurves: function (curveNodesMap) {\n\n        var rawCurves = fbxTree.Objects.AnimationCurve;\n\n        // TODO: Many values are identical up to roundoff error, but won't be optimised\n        // e.g. position times: [0, 0.4, 0. 8]\n        // position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n        // clearly, this should be optimised to\n        // times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n        // this shows up in nearly every FBX file, and generally time array is length > 100\n\n        for (var nodeID in rawCurves) {\n\n          var animationCurve = {\n\n            id: rawCurves[nodeID].id,\n            times: rawCurves[nodeID].KeyTime.a.map(convertFBXTimeToSeconds),\n            values: rawCurves[nodeID].KeyValueFloat.a,\n\n          };\n\n          var relationships = connections.get(animationCurve.id);\n\n          if (relationships !== undefined) {\n\n            var animationCurveID = relationships.parents[0].ID;\n            var animationCurveRelationship = relationships.parents[0].relationship;\n\n            if (animationCurveRelationship.match(/X/)) {\n\n              curveNodesMap.get(animationCurveID).curves['x'] = animationCurve;\n\n            } else if (animationCurveRelationship.match(/Y/)) {\n\n              curveNodesMap.get(animationCurveID).curves['y'] = animationCurve;\n\n            } else if (animationCurveRelationship.match(/Z/)) {\n\n              curveNodesMap.get(animationCurveID).curves['z'] = animationCurve;\n\n            } else if (animationCurveRelationship.match(/d|DeformPercent/) && curveNodesMap.has(animationCurveID)) {\n\n              curveNodesMap.get(animationCurveID).curves['morph'] = animationCurve;\n\n            }\n\n          }\n\n        }\n\n      },\n\n      // parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n      // to various AnimationCurveNodes and is referenced by an AnimationStack node\n      // note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n      parseAnimationLayers: function (curveNodesMap) {\n\n        var rawLayers = fbxTree.Objects.AnimationLayer;\n\n        var layersMap = new Map();\n\n        for (var nodeID in rawLayers) {\n\n          var layerCurveNodes = [];\n\n          var connection = connections.get(parseInt(nodeID));\n\n          if (connection !== undefined) {\n\n            // all the animationCurveNodes used in the layer\n            var children = connection.children;\n\n            children.forEach(function (child, i) {\n\n              if (curveNodesMap.has(child.ID)) {\n\n                var curveNode = curveNodesMap.get(child.ID);\n\n                // check that the curves are defined for at least one axis, otherwise ignore the curveNode\n                if (curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined) {\n\n                  if (layerCurveNodes[i] === undefined) {\n\n                    var modelID = connections.get(child.ID).parents.filter(function (parent) {\n\n                      return parent.relationship !== undefined;\n\n                    })[0].ID;\n\n                    if (modelID !== undefined) {\n\n                      var rawModel = fbxTree.Objects.Model[modelID.toString()];\n\n                      var node = {\n\n                        modelName: rawModel.attrName ? THREE.PropertyBinding.sanitizeNodeName(rawModel.attrName) : '',\n                        ID: rawModel.id,\n                        initialPosition: [0, 0, 0],\n                        initialRotation: [0, 0, 0],\n                        initialScale: [1, 1, 1],\n\n                      };\n\n                      sceneGraph.traverse(function (child) {\n\n                        if (child.ID === rawModel.id) {\n\n                          node.transform = child.matrix;\n\n                          if (child.userData.transformData) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n                        }\n\n                      });\n\n                      if (!node.transform) node.transform = new THREE.Matrix4();\n\n                      // if the animated model is pre rotated, we'll have to apply the pre rotations to every\n                      // animation value as well\n                      if ('PreRotation' in rawModel) node.preRotation = rawModel.PreRotation.value;\n                      if ('PostRotation' in rawModel) node.postRotation = rawModel.PostRotation.value;\n\n                      layerCurveNodes[i] = node;\n\n                    }\n\n                  }\n\n                  if (layerCurveNodes[i]) layerCurveNodes[i][curveNode.attr] = curveNode;\n\n                } else if (curveNode.curves.morph !== undefined) {\n\n                  if (layerCurveNodes[i] === undefined) {\n\n                    var deformerID = connections.get(child.ID).parents.filter(function (parent) {\n\n                      return parent.relationship !== undefined;\n\n                    })[0].ID;\n\n                    var morpherID = connections.get(deformerID).parents[0].ID;\n                    var geoID = connections.get(morpherID).parents[0].ID;\n\n                    // assuming geometry is not used in more than one model\n                    var modelID = connections.get(geoID).parents[0].ID;\n\n                    var rawModel = fbxTree.Objects.Model[modelID];\n\n                    var node = {\n\n                      modelName: rawModel.attrName ? THREE.PropertyBinding.sanitizeNodeName(rawModel.attrName) : '',\n                      morphName: fbxTree.Objects.Deformer[deformerID].attrName,\n\n                    };\n\n                    layerCurveNodes[i] = node;\n\n                  }\n\n                  layerCurveNodes[i][curveNode.attr] = curveNode;\n\n                }\n\n              }\n\n            });\n\n            layersMap.set(parseInt(nodeID), layerCurveNodes);\n\n          }\n\n        }\n\n        return layersMap;\n\n      },\n\n      // parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n      // hierarchy. Each Stack node will be used to create a THREE.AnimationClip\n      parseAnimStacks: function (layersMap) {\n\n        var rawStacks = fbxTree.Objects.AnimationStack;\n\n        // connect the stacks (clips) up to the layers\n        var rawClips = {};\n\n        for (var nodeID in rawStacks) {\n\n          var children = connections.get(parseInt(nodeID)).children;\n\n          if (children.length > 1) {\n\n            // it seems like stacks will always be associated with a single layer. But just in case there are files\n            // where there are multiple layers per stack, we'll display a warning\n            console.warn('THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.');\n\n          }\n\n          var layer = layersMap.get(children[0].ID);\n\n          rawClips[nodeID] = {\n\n            name: rawStacks[nodeID].attrName,\n            layer: layer,\n\n          };\n\n        }\n\n        return rawClips;\n\n      },\n\n      addClip: function (rawClip) {\n\n        var tracks = [];\n\n        var self = this;\n        rawClip.layer.forEach(function (rawTracks) {\n\n          tracks = tracks.concat(self.generateTracks(rawTracks));\n\n        });\n\n        return new THREE.AnimationClip(rawClip.name, -1, tracks);\n\n      },\n\n      generateTracks: function (rawTracks) {\n\n        var tracks = [];\n\n        var initialPosition = new THREE.Vector3();\n        var initialRotation = new THREE.Quaternion();\n        var initialScale = new THREE.Vector3();\n\n        if (rawTracks.transform) rawTracks.transform.decompose(initialPosition, initialRotation, initialScale);\n\n        initialPosition = initialPosition.toArray();\n        initialRotation = new THREE.Euler().setFromQuaternion(initialRotation, rawTracks.eulerOrder).toArray();\n        initialScale = initialScale.toArray();\n\n        if (rawTracks.T !== undefined && Object.keys(rawTracks.T.curves).length > 0) {\n\n          var positionTrack = this.generateVectorTrack(rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position');\n          if (positionTrack !== undefined) tracks.push(positionTrack);\n\n        }\n\n        if (rawTracks.R !== undefined && Object.keys(rawTracks.R.curves).length > 0) {\n\n          var rotationTrack = this.generateRotationTrack(rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder);\n          if (rotationTrack !== undefined) tracks.push(rotationTrack);\n\n        }\n\n        if (rawTracks.S !== undefined && Object.keys(rawTracks.S.curves).length > 0) {\n\n          var scaleTrack = this.generateVectorTrack(rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale');\n          if (scaleTrack !== undefined) tracks.push(scaleTrack);\n\n        }\n\n        if (rawTracks.DeformPercent !== undefined) {\n\n          var morphTrack = this.generateMorphTrack(rawTracks);\n          if (morphTrack !== undefined) tracks.push(morphTrack);\n\n        }\n\n        return tracks;\n\n      },\n\n      generateVectorTrack: function (modelName, curves, initialValue, type) {\n\n        var times = this.getTimesForAllAxes(curves);\n        var values = this.getKeyframeTrackValues(times, curves, initialValue);\n\n        return new THREE.VectorKeyframeTrack(modelName + '.' + type, times, values);\n\n      },\n\n      generateRotationTrack: function (modelName, curves, initialValue, preRotation, postRotation, eulerOrder) {\n\n        if (curves.x !== undefined) {\n\n          this.interpolateRotations(curves.x);\n          curves.x.values = curves.x.values.map(THREE.Math.degToRad);\n\n        }\n        if (curves.y !== undefined) {\n\n          this.interpolateRotations(curves.y);\n          curves.y.values = curves.y.values.map(THREE.Math.degToRad);\n\n        }\n        if (curves.z !== undefined) {\n\n          this.interpolateRotations(curves.z);\n          curves.z.values = curves.z.values.map(THREE.Math.degToRad);\n\n        }\n\n        var times = this.getTimesForAllAxes(curves);\n        var values = this.getKeyframeTrackValues(times, curves, initialValue);\n\n        if (preRotation !== undefined) {\n\n          preRotation = preRotation.map(THREE.Math.degToRad);\n          preRotation.push(eulerOrder);\n\n          preRotation = new THREE.Euler().fromArray(preRotation);\n          preRotation = new THREE.Quaternion().setFromEuler(preRotation);\n\n        }\n\n        if (postRotation !== undefined) {\n\n          postRotation = postRotation.map(THREE.Math.degToRad);\n          postRotation.push(eulerOrder);\n\n          postRotation = new THREE.Euler().fromArray(postRotation);\n          postRotation = new THREE.Quaternion().setFromEuler(postRotation).inverse();\n\n        }\n\n        var quaternion = new THREE.Quaternion();\n        var euler = new THREE.Euler();\n\n        var quaternionValues = [];\n\n        for (var i = 0; i < values.length; i += 3) {\n\n          euler.set(values[i], values[i + 1], values[i + 2], eulerOrder);\n\n          quaternion.setFromEuler(euler);\n\n          if (preRotation !== undefined) quaternion.premultiply(preRotation);\n          if (postRotation !== undefined) quaternion.multiply(postRotation);\n\n          quaternion.toArray(quaternionValues, (i / 3) * 4);\n\n        }\n\n        return new THREE.QuaternionKeyframeTrack(modelName + '.quaternion', times, quaternionValues);\n\n      },\n\n      generateMorphTrack: function (rawTracks) {\n\n        var curves = rawTracks.DeformPercent.curves.morph;\n        var values = curves.values.map(function (val) {\n\n          return val / 100;\n\n        });\n\n        var morphNum = sceneGraph.getObjectByName(rawTracks.modelName).morphTargetDictionary[rawTracks.morphName];\n\n        return new THREE.NumberKeyframeTrack(rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values);\n\n      },\n\n      // For all animated objects, times are defined separately for each axis\n      // Here we'll combine the times into one sorted array without duplicates\n      getTimesForAllAxes: function (curves) {\n\n        var times = [];\n\n        // first join together the times for each axis, if defined\n        if (curves.x !== undefined) times = times.concat(curves.x.times);\n        if (curves.y !== undefined) times = times.concat(curves.y.times);\n        if (curves.z !== undefined) times = times.concat(curves.z.times);\n\n        // then sort them and remove duplicates\n        times = times.sort(function (a, b) {\n\n          return a - b;\n\n        }).filter(function (elem, index, array) {\n\n          return array.indexOf(elem) == index;\n\n        });\n\n        return times;\n\n      },\n\n      getKeyframeTrackValues: function (times, curves, initialValue) {\n\n        var prevValue = initialValue;\n\n        var values = [];\n\n        var xIndex = -1;\n        var yIndex = -1;\n        var zIndex = -1;\n\n        times.forEach(function (time) {\n\n          if (curves.x) xIndex = curves.x.times.indexOf(time);\n          if (curves.y) yIndex = curves.y.times.indexOf(time);\n          if (curves.z) zIndex = curves.z.times.indexOf(time);\n\n          // if there is an x value defined for this frame, use that\n          if (xIndex !== -1) {\n\n            var xValue = curves.x.values[xIndex];\n            values.push(xValue);\n            prevValue[0] = xValue;\n\n          } else {\n\n            // otherwise use the x value from the previous frame\n            values.push(prevValue[0]);\n\n          }\n\n          if (yIndex !== -1) {\n\n            var yValue = curves.y.values[yIndex];\n            values.push(yValue);\n            prevValue[1] = yValue;\n\n          } else {\n\n            values.push(prevValue[1]);\n\n          }\n\n          if (zIndex !== -1) {\n\n            var zValue = curves.z.values[zIndex];\n            values.push(zValue);\n            prevValue[2] = zValue;\n\n          } else {\n\n            values.push(prevValue[2]);\n\n          }\n\n        });\n\n        return values;\n\n      },\n\n      // Rotations are defined as Euler angles which can have values  of any size\n      // These will be converted to quaternions which don't support values greater than\n      // PI, so we'll interpolate large rotations\n      interpolateRotations: function (curve) {\n\n        for (var i = 1; i < curve.values.length; i++) {\n\n          var initialValue = curve.values[i - 1];\n          var valuesSpan = curve.values[i] - initialValue;\n\n          var absoluteSpan = Math.abs(valuesSpan);\n\n          if (absoluteSpan >= 180) {\n\n            var numSubIntervals = absoluteSpan / 180;\n\n            var step = valuesSpan / numSubIntervals;\n            var nextValue = initialValue + step;\n\n            var initialTime = curve.times[i - 1];\n            var timeSpan = curve.times[i] - initialTime;\n            var interval = timeSpan / numSubIntervals;\n            var nextTime = initialTime + interval;\n\n            var interpolatedTimes = [];\n            var interpolatedValues = [];\n\n            while (nextTime < curve.times[i]) {\n\n              interpolatedTimes.push(nextTime);\n              nextTime += interval;\n\n              interpolatedValues.push(nextValue);\n              nextValue += step;\n\n            }\n\n            curve.times = inject(curve.times, i, interpolatedTimes);\n            curve.values = inject(curve.values, i, interpolatedValues);\n\n          }\n\n        }\n\n      },\n\n    };\n\n    // parse an FBX file in ASCII format\n    function TextParser() {\n    }\n\n    TextParser.prototype = {\n\n      constructor: TextParser,\n\n      getPrevNode: function () {\n\n        return this.nodeStack[this.currentIndent - 2];\n\n      },\n\n      getCurrentNode: function () {\n\n        return this.nodeStack[this.currentIndent - 1];\n\n      },\n\n      getCurrentProp: function () {\n\n        return this.currentProp;\n\n      },\n\n      pushStack: function (node) {\n\n        this.nodeStack.push(node);\n        this.currentIndent += 1;\n\n      },\n\n      popStack: function () {\n\n        this.nodeStack.pop();\n        this.currentIndent -= 1;\n\n      },\n\n      setCurrentProp: function (val, name) {\n\n        this.currentProp = val;\n        this.currentPropName = name;\n\n      },\n\n      parse: function (text) {\n\n        this.currentIndent = 0;\n\n        this.allNodes = new FBXTree();\n        this.nodeStack = [];\n        this.currentProp = [];\n        this.currentPropName = '';\n\n        var self = this;\n\n        var split = text.split(/[\\r\\n]+/);\n\n        split.forEach(function (line, i) {\n\n          var matchComment = line.match(/^[\\s\\t]*;/);\n          var matchEmpty = line.match(/^[\\s\\t]*$/);\n\n          if (matchComment || matchEmpty) return;\n\n          var matchBeginning = line.match('^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '');\n          var matchProperty = line.match('^\\\\t{' + (self.currentIndent) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)');\n          var matchEnd = line.match('^\\\\t{' + (self.currentIndent - 1) + '}}');\n\n          if (matchBeginning) {\n\n            self.parseNodeBegin(line, matchBeginning);\n\n          } else if (matchProperty) {\n\n            self.parseNodeProperty(line, matchProperty, split[++i]);\n\n          } else if (matchEnd) {\n\n            self.popStack();\n\n          } else if (line.match(/^[^\\s\\t}]/)) {\n\n            // large arrays are split over multiple lines terminated with a ',' character\n            // if this is encountered the line needs to be joined to the previous line\n            self.parseNodePropertyContinued(line);\n\n          }\n\n        });\n\n        return this.allNodes;\n\n      },\n\n      parseNodeBegin: function (line, property) {\n\n        var nodeName = property[1].trim().replace(/^\"/, '').replace(/\"$/, '');\n\n        var nodeAttrs = property[2].split(',').map(function (attr) {\n\n          return attr.trim().replace(/^\"/, '').replace(/\"$/, '');\n\n        });\n\n        var node = {name: nodeName};\n        var attrs = this.parseNodeAttr(nodeAttrs);\n\n        var currentNode = this.getCurrentNode();\n\n        // a top node\n        if (this.currentIndent === 0) {\n\n          this.allNodes.add(nodeName, node);\n\n        } else { // a subnode\n\n          // if the subnode already exists, append it\n          if (nodeName in currentNode) {\n\n            // special case Pose needs PoseNodes as an array\n            if (nodeName === 'PoseNode') {\n\n              currentNode.PoseNode.push(node);\n\n            } else if (currentNode[nodeName].id !== undefined) {\n\n              currentNode[nodeName] = {};\n              currentNode[nodeName][currentNode[nodeName].id] = currentNode[nodeName];\n\n            }\n\n            if (attrs.id !== '') currentNode[nodeName][attrs.id] = node;\n\n          } else if (typeof attrs.id === 'number') {\n\n            currentNode[nodeName] = {};\n            currentNode[nodeName][attrs.id] = node;\n\n          } else if (nodeName !== 'Properties70') {\n\n            if (nodeName === 'PoseNode') currentNode[nodeName] = [node];\n            else currentNode[nodeName] = node;\n\n          }\n\n        }\n\n        if (typeof attrs.id === 'number') node.id = attrs.id;\n        if (attrs.name !== '') node.attrName = attrs.name;\n        if (attrs.type !== '') node.attrType = attrs.type;\n\n        this.pushStack(node);\n\n      },\n\n      parseNodeAttr: function (attrs) {\n\n        var id = attrs[0];\n\n        if (attrs[0] !== '') {\n\n          id = parseInt(attrs[0]);\n\n          if (isNaN(id)) {\n\n            id = attrs[0];\n\n          }\n\n        }\n\n        var name = '', type = '';\n\n        if (attrs.length > 1) {\n\n          name = attrs[1].replace(/^(\\w+)::/, '');\n          type = attrs[2];\n\n        }\n\n        return {id: id, name: name, type: type};\n\n      },\n\n      parseNodeProperty: function (line, property, contentLine) {\n\n        var propName = property[1].replace(/^\"/, '').replace(/\"$/, '').trim();\n        var propValue = property[2].replace(/^\"/, '').replace(/\"$/, '').trim();\n\n        // for special case: base64 image data follows \"Content: ,\" line\n        //\tContent: ,\n        //\t \"/9j/4RDaRXhpZgAATU0A...\"\n        if (propName === 'Content' && propValue === ',') {\n\n          propValue = contentLine.replace(/\"/g, '').replace(/,$/, '').trim();\n\n        }\n\n        var currentNode = this.getCurrentNode();\n        var parentName = currentNode.name;\n\n        if (parentName === 'Properties70') {\n\n          this.parseNodeSpecialProperty(line, propName, propValue);\n          return;\n\n        }\n\n        // Connections\n        if (propName === 'C') {\n\n          var connProps = propValue.split(',').slice(1);\n          var from = parseInt(connProps[0]);\n          var to = parseInt(connProps[1]);\n\n          var rest = propValue.split(',').slice(3);\n\n          rest = rest.map(function (elem) {\n\n            return elem.trim().replace(/^\"/, '');\n\n          });\n\n          propName = 'connections';\n          propValue = [from, to];\n          append(propValue, rest);\n\n          if (currentNode[propName] === undefined) {\n\n            currentNode[propName] = [];\n\n          }\n\n        }\n\n        // Node\n        if (propName === 'Node') currentNode.id = propValue;\n\n        // connections\n        if (propName in currentNode && Array.isArray(currentNode[propName])) {\n\n          currentNode[propName].push(propValue);\n\n        } else {\n\n          if (propName !== 'a') currentNode[propName] = propValue;\n          else currentNode.a = propValue;\n\n        }\n\n        this.setCurrentProp(currentNode, propName);\n\n        // convert string to array, unless it ends in ',' in which case more will be added to it\n        if (propName === 'a' && propValue.slice(-1) !== ',') {\n\n          currentNode.a = parseNumberArray(propValue);\n\n        }\n\n      },\n\n      parseNodePropertyContinued: function (line) {\n\n        var currentNode = this.getCurrentNode();\n\n        currentNode.a += line;\n\n        // if the line doesn't end in ',' we have reached the end of the property value\n        // so convert the string to an array\n        if (line.slice(-1) !== ',') {\n\n          currentNode.a = parseNumberArray(currentNode.a);\n\n        }\n\n      },\n\n      // parse \"Property70\"\n      parseNodeSpecialProperty: function (line, propName, propValue) {\n\n        // split this\n        // P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n        // into array like below\n        // [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n        var props = propValue.split('\",').map(function (prop) {\n\n          return prop.trim().replace(/^\\\"/, '').replace(/\\s/, '_');\n\n        });\n\n        var innerPropName = props[0];\n        var innerPropType1 = props[1];\n        var innerPropType2 = props[2];\n        var innerPropFlag = props[3];\n        var innerPropValue = props[4];\n\n        // cast values where needed, otherwise leave as strings\n        switch (innerPropType1) {\n\n          case 'int':\n          case 'enum':\n          case 'bool':\n          case 'ULongLong':\n          case 'double':\n          case 'Number':\n          case 'FieldOfView':\n            innerPropValue = parseFloat(innerPropValue);\n            break;\n\n          case 'Color':\n          case 'ColorRGB':\n          case 'Vector3D':\n          case 'Lcl_Translation':\n          case 'Lcl_Rotation':\n          case 'Lcl_Scaling':\n            innerPropValue = parseNumberArray(innerPropValue);\n            break;\n\n        }\n\n        // CAUTION: these props must append to parent's parent\n        this.getPrevNode()[innerPropName] = {\n\n          'type': innerPropType1,\n          'type2': innerPropType2,\n          'flag': innerPropFlag,\n          'value': innerPropValue\n\n        };\n\n        this.setCurrentProp(this.getPrevNode(), innerPropName);\n\n      },\n\n    };\n\n    // Parse an FBX file in Binary format\n    function BinaryParser() {\n    }\n\n    BinaryParser.prototype = {\n\n      constructor: BinaryParser,\n\n      parse: function (buffer) {\n\n        var reader = new BinaryReader(buffer);\n        reader.skip(23); // skip magic 23 bytes\n\n        var version = reader.getUint32();\n\n        console.log('THREE.FBXLoader: FBX binary version: ' + version);\n\n        var allNodes = new FBXTree();\n\n        while (!this.endOfContent(reader)) {\n\n          var node = this.parseNode(reader, version);\n          if (node !== null) allNodes.add(node.name, node);\n\n        }\n\n        return allNodes;\n\n      },\n\n      // Check if reader has reached the end of content.\n      endOfContent: function (reader) {\n\n        // footer size: 160bytes + 16-byte alignment padding\n        // - 16bytes: magic\n        // - padding til 16-byte alignment (at least 1byte?)\n        //\t(seems like some exporters embed fixed 15 or 16bytes?)\n        // - 4bytes: magic\n        // - 4bytes: version\n        // - 120bytes: zero\n        // - 16bytes: magic\n        if (reader.size() % 16 === 0) {\n\n          return ((reader.getOffset() + 160 + 16) & ~0xf) >= reader.size();\n\n        } else {\n\n          return reader.getOffset() + 160 + 16 >= reader.size();\n\n        }\n\n      },\n\n      // recursively parse nodes until the end of the file is reached\n      parseNode: function (reader, version) {\n\n        var node = {};\n\n        // The first three data sizes depends on version.\n        var endOffset = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n        var numProperties = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n\n        // note: do not remove this even if you get a linter warning as it moves the buffer forward\n        var propertyListLen = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n\n        var nameLen = reader.getUint8();\n        var name = reader.getString(nameLen);\n\n        // Regards this node as NULL-record if endOffset is zero\n        if (endOffset === 0) return null;\n\n        var propertyList = [];\n\n        for (var i = 0; i < numProperties; i++) {\n\n          propertyList.push(this.parseProperty(reader));\n\n        }\n\n        // Regards the first three elements in propertyList as id, attrName, and attrType\n        var id = propertyList.length > 0 ? propertyList[0] : '';\n        var attrName = propertyList.length > 1 ? propertyList[1] : '';\n        var attrType = propertyList.length > 2 ? propertyList[2] : '';\n\n        // check if this node represents just a single property\n        // like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n        node.singleProperty = (numProperties === 1 && reader.getOffset() === endOffset) ? true : false;\n\n        while (endOffset > reader.getOffset()) {\n\n          var subNode = this.parseNode(reader, version);\n\n          if (subNode !== null) this.parseSubNode(name, node, subNode);\n\n        }\n\n        node.propertyList = propertyList; // raw property list used by parent\n\n        if (typeof id === 'number') node.id = id;\n        if (attrName !== '') node.attrName = attrName;\n        if (attrType !== '') node.attrType = attrType;\n        if (name !== '') node.name = name;\n\n        return node;\n\n      },\n\n      parseSubNode: function (name, node, subNode) {\n\n        // special case: child node is single property\n        if (subNode.singleProperty === true) {\n\n          var value = subNode.propertyList[0];\n\n          if (Array.isArray(value)) {\n\n            node[subNode.name] = subNode;\n\n            subNode.a = value;\n\n          } else {\n\n            node[subNode.name] = value;\n\n          }\n\n        } else if (name === 'Connections' && subNode.name === 'C') {\n\n          var array = [];\n\n          subNode.propertyList.forEach(function (property, i) {\n\n            // first Connection is FBX type (OO, OP, etc.). We'll discard these\n            if (i !== 0) array.push(property);\n\n          });\n\n          if (node.connections === undefined) {\n\n            node.connections = [];\n\n          }\n\n          node.connections.push(array);\n\n        } else if (subNode.name === 'Properties70') {\n\n          var keys = Object.keys(subNode);\n\n          keys.forEach(function (key) {\n\n            node[key] = subNode[key];\n\n          });\n\n        } else if (name === 'Properties70' && subNode.name === 'P') {\n\n          var innerPropName = subNode.propertyList[0];\n          var innerPropType1 = subNode.propertyList[1];\n          var innerPropType2 = subNode.propertyList[2];\n          var innerPropFlag = subNode.propertyList[3];\n          var innerPropValue;\n\n          if (innerPropName.indexOf('Lcl ') === 0) innerPropName = innerPropName.replace('Lcl ', 'Lcl_');\n          if (innerPropType1.indexOf('Lcl ') === 0) innerPropType1 = innerPropType1.replace('Lcl ', 'Lcl_');\n\n          if (innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf('Lcl_') === 0) {\n\n            innerPropValue = [\n              subNode.propertyList[4],\n              subNode.propertyList[5],\n              subNode.propertyList[6]\n            ];\n\n          } else {\n\n            innerPropValue = subNode.propertyList[4];\n\n          }\n\n          // this will be copied to parent, see above\n          node[innerPropName] = {\n\n            'type': innerPropType1,\n            'type2': innerPropType2,\n            'flag': innerPropFlag,\n            'value': innerPropValue\n\n          };\n\n        } else if (node[subNode.name] === undefined) {\n\n          if (typeof subNode.id === 'number') {\n\n            node[subNode.name] = {};\n            node[subNode.name][subNode.id] = subNode;\n\n          } else {\n\n            node[subNode.name] = subNode;\n\n          }\n\n        } else {\n\n          if (subNode.name === 'PoseNode') {\n\n            if (!Array.isArray(node[subNode.name])) {\n\n              node[subNode.name] = [node[subNode.name]];\n\n            }\n\n            node[subNode.name].push(subNode);\n\n          } else if (node[subNode.name][subNode.id] === undefined) {\n\n            node[subNode.name][subNode.id] = subNode;\n\n          }\n\n        }\n\n      },\n\n      parseProperty: function (reader) {\n\n        var type = reader.getString(1);\n\n        switch (type) {\n\n          case 'C':\n            return reader.getBoolean();\n\n          case 'D':\n            return reader.getFloat64();\n\n          case 'F':\n            return reader.getFloat32();\n\n          case 'I':\n            return reader.getInt32();\n\n          case 'L':\n            return reader.getInt64();\n\n          case 'R':\n            var length = reader.getUint32();\n            return reader.getArrayBuffer(length);\n\n          case 'S':\n            var length = reader.getUint32();\n            return reader.getString(length);\n\n          case 'Y':\n            return reader.getInt16();\n\n          case 'b':\n          case 'c':\n          case 'd':\n          case 'f':\n          case 'i':\n          case 'l':\n\n            var arrayLength = reader.getUint32();\n            var encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n            var compressedLength = reader.getUint32();\n\n            if (encoding === 0) {\n\n              switch (type) {\n\n                case 'b':\n                case 'c':\n                  return reader.getBooleanArray(arrayLength);\n\n                case 'd':\n                  return reader.getFloat64Array(arrayLength);\n\n                case 'f':\n                  return reader.getFloat32Array(arrayLength);\n\n                case 'i':\n                  return reader.getInt32Array(arrayLength);\n\n                case 'l':\n                  return reader.getInt64Array(arrayLength);\n\n              }\n\n            }\n\n            if (typeof THREE.Zlib === 'undefined') {\n\n              console.error('THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js');\n\n            }\n\n            var inflate = new THREE.Zlib.Inflate(new Uint8Array(reader.getArrayBuffer(compressedLength))); // eslint-disable-line no-undef\n            var reader2 = new BinaryReader(inflate.decompress().buffer);\n\n            switch (type) {\n\n              case 'b':\n              case 'c':\n                return reader2.getBooleanArray(arrayLength);\n\n              case 'd':\n                return reader2.getFloat64Array(arrayLength);\n\n              case 'f':\n                return reader2.getFloat32Array(arrayLength);\n\n              case 'i':\n                return reader2.getInt32Array(arrayLength);\n\n              case 'l':\n                return reader2.getInt64Array(arrayLength);\n\n            }\n\n          default:\n            throw new Error('THREE.FBXLoader: Unknown property type ' + type);\n\n        }\n\n      }\n\n    };\n\n    function BinaryReader(buffer, littleEndian) {\n\n      this.dv = new DataView(buffer);\n      this.offset = 0;\n      this.littleEndian = (littleEndian !== undefined) ? littleEndian : true;\n\n    }\n\n    BinaryReader.prototype = {\n\n      constructor: BinaryReader,\n\n      getOffset: function () {\n\n        return this.offset;\n\n      },\n\n      size: function () {\n\n        return this.dv.buffer.byteLength;\n\n      },\n\n      skip: function (length) {\n\n        this.offset += length;\n\n      },\n\n      // seems like true/false representation depends on exporter.\n      // true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n      // then sees LSB.\n      getBoolean: function () {\n\n        return (this.getUint8() & 1) === 1;\n\n      },\n\n      getBooleanArray: function (size) {\n\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a.push(this.getBoolean());\n\n        }\n\n        return a;\n\n      },\n\n      getUint8: function () {\n\n        var value = this.dv.getUint8(this.offset);\n        this.offset += 1;\n        return value;\n\n      },\n\n      getInt16: function () {\n\n        var value = this.dv.getInt16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n\n      },\n\n      getInt32: function () {\n\n        var value = this.dv.getInt32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n\n      },\n\n      getInt32Array: function (size) {\n\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a.push(this.getInt32());\n\n        }\n\n        return a;\n\n      },\n\n      getUint32: function () {\n\n        var value = this.dv.getUint32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n\n      },\n\n      // JavaScript doesn't support 64-bit integer so calculate this here\n      // 1 << 32 will return 1 so using multiply operation instead here.\n      // There's a possibility that this method returns wrong value if the value\n      // is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n      // TODO: safely handle 64-bit integer\n      getInt64: function () {\n\n        var low, high;\n\n        if (this.littleEndian) {\n\n          low = this.getUint32();\n          high = this.getUint32();\n\n        } else {\n\n          high = this.getUint32();\n          low = this.getUint32();\n\n        }\n\n        // calculate negative value\n        if (high & 0x80000000) {\n\n          high = ~high & 0xFFFFFFFF;\n          low = ~low & 0xFFFFFFFF;\n\n          if (low === 0xFFFFFFFF) high = (high + 1) & 0xFFFFFFFF;\n\n          low = (low + 1) & 0xFFFFFFFF;\n\n          return -(high * 0x100000000 + low);\n\n        }\n\n        return high * 0x100000000 + low;\n\n      },\n\n      getInt64Array: function (size) {\n\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a.push(this.getInt64());\n\n        }\n\n        return a;\n\n      },\n\n      // Note: see getInt64() comment\n      getUint64: function () {\n\n        var low, high;\n\n        if (this.littleEndian) {\n\n          low = this.getUint32();\n          high = this.getUint32();\n\n        } else {\n\n          high = this.getUint32();\n          low = this.getUint32();\n\n        }\n\n        return high * 0x100000000 + low;\n\n      },\n\n      getFloat32: function () {\n\n        var value = this.dv.getFloat32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n\n      },\n\n      getFloat32Array: function (size) {\n\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a.push(this.getFloat32());\n\n        }\n\n        return a;\n\n      },\n\n      getFloat64: function () {\n\n        var value = this.dv.getFloat64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n\n      },\n\n      getFloat64Array: function (size) {\n\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a.push(this.getFloat64());\n\n        }\n\n        return a;\n\n      },\n\n      getArrayBuffer: function (size) {\n\n        var value = this.dv.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return value;\n\n      },\n\n      getString: function (size) {\n\n        // note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n        var a = [];\n\n        for (var i = 0; i < size; i++) {\n\n          a[i] = this.getUint8();\n\n        }\n\n        var nullByte = a.indexOf(0);\n        if (nullByte >= 0) a = a.slice(0, nullByte);\n\n        return THREE.LoaderUtils.decodeText(new Uint8Array(a));\n\n      }\n\n    };\n\n    // FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n    // and BinaryParser( FBX Binary format)\n    function FBXTree() {\n    }\n\n    FBXTree.prototype = {\n\n      constructor: FBXTree,\n\n      add: function (key, val) {\n\n        this[key] = val;\n\n      },\n\n    };\n\n    // ************** UTILITY FUNCTIONS **************\n\n    function isFbxFormatBinary(buffer) {\n\n      var CORRECT = 'Kaydara FBX Binary  \\0';\n\n      return buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString(buffer, 0, CORRECT.length);\n\n    }\n\n    function isFbxFormatASCII(text) {\n\n      var CORRECT = ['K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\'];\n\n      var cursor = 0;\n\n      function read(offset) {\n\n        var result = text[offset - 1];\n        text = text.slice(cursor + offset);\n        cursor++;\n        return result;\n\n      }\n\n      for (var i = 0; i < CORRECT.length; ++i) {\n\n        var num = read(1);\n        if (num === CORRECT[i]) {\n\n          return false;\n\n        }\n\n      }\n\n      return true;\n\n    }\n\n    function getFbxVersion(text) {\n\n      var versionRegExp = /FBXVersion: (\\d+)/;\n      var match = text.match(versionRegExp);\n      if (match) {\n\n        var version = parseInt(match[1]);\n        return version;\n\n      }\n      throw new Error('THREE.FBXLoader: Cannot find the version number for the file given.');\n\n    }\n\n    // Converts FBX ticks into real time seconds.\n    function convertFBXTimeToSeconds(time) {\n\n      return time / 46186158000;\n\n    }\n\n    var dataArray = [];\n\n    // extracts the data from the correct position in the FBX array based on indexing type\n    function getData(polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n\n      var index;\n\n      switch (infoObject.mappingType) {\n\n        case 'ByPolygonVertex' :\n          index = polygonVertexIndex;\n          break;\n        case 'ByPolygon' :\n          index = polygonIndex;\n          break;\n        case 'ByVertice' :\n          index = vertexIndex;\n          break;\n        case 'AllSame' :\n          index = infoObject.indices[0];\n          break;\n        default :\n          console.warn('THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType);\n\n      }\n\n      if (infoObject.referenceType === 'IndexToDirect') index = infoObject.indices[index];\n\n      var from = index * infoObject.dataSize;\n      var to = from + infoObject.dataSize;\n\n      return slice(dataArray, infoObject.buffer, from, to);\n\n    }\n\n    var tempEuler = new THREE.Euler();\n    var tempVec = new THREE.Vector3();\n\n    // generate transformation from FBX transform data\n    // ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n    // ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n    function generateTransform(transformData) {\n\n      var lTranslationM = new THREE.Matrix4();\n      var lPreRotationM = new THREE.Matrix4();\n      var lRotationM = new THREE.Matrix4();\n      var lPostRotationM = new THREE.Matrix4();\n\n      var lScalingM = new THREE.Matrix4();\n      var lScalingPivotM = new THREE.Matrix4();\n      var lScalingOffsetM = new THREE.Matrix4();\n      var lRotationOffsetM = new THREE.Matrix4();\n      var lRotationPivotM = new THREE.Matrix4();\n\n      var lParentGX = new THREE.Matrix4();\n      var lGlobalT = new THREE.Matrix4();\n\n      var inheritType = (transformData.inheritType) ? transformData.inheritType : 0;\n\n      if (transformData.translation) lTranslationM.setPosition(tempVec.fromArray(transformData.translation));\n\n      if (transformData.preRotation) {\n\n        var array = transformData.preRotation.map(THREE.Math.degToRad);\n        array.push(transformData.eulerOrder);\n        lPreRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n      }\n\n      if (transformData.rotation) {\n\n        var array = transformData.rotation.map(THREE.Math.degToRad);\n        array.push(transformData.eulerOrder);\n        lRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n      }\n\n      if (transformData.postRotation) {\n\n        var array = transformData.postRotation.map(THREE.Math.degToRad);\n        array.push(transformData.eulerOrder);\n        lPostRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n      }\n\n      if (transformData.scale) lScalingM.scale(tempVec.fromArray(transformData.scale));\n\n      // Pivots and offsets\n      if (transformData.scalingOffset) lScalingOffsetM.setPosition(tempVec.fromArray(transformData.scalingOffset));\n      if (transformData.scalingPivot) lScalingPivotM.setPosition(tempVec.fromArray(transformData.scalingPivot));\n      if (transformData.rotationOffset) lRotationOffsetM.setPosition(tempVec.fromArray(transformData.rotationOffset));\n      if (transformData.rotationPivot) lRotationPivotM.setPosition(tempVec.fromArray(transformData.rotationPivot));\n\n      // parent transform\n      if (transformData.parentMatrixWorld) lParentGX = transformData.parentMatrixWorld;\n\n      // Global Rotation\n      var lLRM = lPreRotationM.multiply(lRotationM).multiply(lPostRotationM);\n      var lParentGRM = new THREE.Matrix4();\n      lParentGX.extractRotation(lParentGRM);\n\n      // Global Shear*Scaling\n      var lParentTM = new THREE.Matrix4();\n      var lLSM;\n      var lParentGSM;\n      var lParentGRSM;\n\n      lParentTM.copyPosition(lParentGX);\n      lParentGRSM = lParentTM.getInverse(lParentTM).multiply(lParentGX);\n      lParentGSM = lParentGRM.getInverse(lParentGRM).multiply(lParentGRSM);\n      lLSM = lScalingM;\n\n      var lGlobalRS;\n      if (inheritType === 0) {\n\n        lGlobalRS = lParentGRM.multiply(lLRM).multiply(lParentGSM).multiply(lLSM);\n\n      } else if (inheritType === 1) {\n\n        lGlobalRS = lParentGRM.multiply(lParentGSM).multiply(lLRM).multiply(lLSM);\n\n      } else {\n\n        var lParentLSM = new THREE.Matrix4().copy(lScalingM);\n\n        var lParentGSM_noLocal = lParentGSM.multiply(lParentLSM.getInverse(lParentLSM));\n\n        lGlobalRS = lParentGRM.multiply(lLRM).multiply(lParentGSM_noLocal).multiply(lLSM);\n\n      }\n\n      // Calculate the local transform matrix\n      var lTransform = lTranslationM.multiply(lRotationOffsetM).multiply(lRotationPivotM).multiply(lPreRotationM).multiply(lRotationM).multiply(lPostRotationM).multiply(lRotationPivotM.getInverse(lRotationPivotM)).multiply(lScalingOffsetM).multiply(lScalingPivotM).multiply(lScalingM).multiply(lScalingPivotM.getInverse(lScalingPivotM));\n\n      var lLocalTWithAllPivotAndOffsetInfo = new THREE.Matrix4().copyPosition(lTransform);\n\n      var lGlobalTranslation = lParentGX.multiply(lLocalTWithAllPivotAndOffsetInfo);\n      lGlobalT.copyPosition(lGlobalTranslation);\n\n      lTransform = lGlobalT.multiply(lGlobalRS);\n\n      return lTransform;\n\n    }\n\n    // Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n    // ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n    function getEulerOrder(order) {\n\n      order = order || 0;\n\n      var enums = [\n        'ZYX', // -> XYZ extrinsic\n        'YZX', // -> XZY extrinsic\n        'XZY', // -> YZX extrinsic\n        'ZXY', // -> YXZ extrinsic\n        'YXZ', // -> ZXY extrinsic\n        'XYZ', // -> ZYX extrinsic\n        //'SphericXYZ', // not possible to support\n      ];\n\n      if (order === 6) {\n\n        console.warn('THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.');\n        return enums[0];\n\n      }\n\n      return enums[order];\n\n    }\n\n    // Parses comma separated list of numbers and returns them an array.\n    // Used internally by the TextParser\n    function parseNumberArray(value) {\n\n      var array = value.split(',').map(function (val) {\n\n        return parseFloat(val);\n\n      });\n\n      return array;\n\n    }\n\n    function convertArrayBufferToString(buffer, from, to) {\n\n      if (from === undefined) from = 0;\n      if (to === undefined) to = buffer.byteLength;\n\n      return THREE.LoaderUtils.decodeText(new Uint8Array(buffer, from, to));\n\n    }\n\n    function append(a, b) {\n\n      for (var i = 0, j = a.length, l = b.length; i < l; i++, j++) {\n\n        a[j] = b[i];\n\n      }\n\n    }\n\n    function slice(a, b, from, to) {\n\n      for (var i = from, j = 0; i < to; i++, j++) {\n\n        a[j] = b[i];\n\n      }\n\n      return a;\n\n    }\n\n    // inject array a2 into array a1 at index\n    function inject(a1, index, a2) {\n\n      return a1.slice(0, index).concat(a2).concat(a1.slice(index));\n\n    }\n\n    return FBXLoader;\n\n  })();\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/FBXLoader.js","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\nexport default\n//THREE.GLTFLoader = (\n(\n\tfunction () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tTHREE.Loader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipmapNearestFilter,\n\t\t9985: THREE.LinearMipmapNearestFilter,\n\t\t9986: THREE.NearestMipmapLinearFilter,\n\t\t9987: THREE.LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new THREE.MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: THREE.FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new THREE.BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new THREE.Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew THREE.Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew THREE.Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\tbox.expandByVector( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {THREE.BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === THREE.TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new THREE.Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n\t})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/three/examples/js/loaders/GLTFLoader.js\n// module id = null\n// module chunks = ","<template>\n  <el-container>\n    <el-header style=\"height:150px\">\n      <el-row>\n        <h1 style=\"margin-top: 0px\">我的宠物</h1>\n      </el-row>\n      <el-row>\n        当前等级: {{user.pet}}\n      </el-row>\n      <el-row>\n        所有积分: {{user.score}}\n      </el-row>\n      <el-row>\n        下一级所需积分: {{petscore[user.pet]}}\n      </el-row>\n\n      <el-row style=\"align-items: center; text-align: center; color: #795da3\" @click=\"upgrade\">\n        <i class=\"el-icon-ice-cream-round\" style=\"font-size: 30px\" @click=\"upgrade\"></i>点击升级\n      </el-row>\n    </el-header>\n    <el-main>\n\n\n      <div id=\"container\">\n\n      </div>\n\n\n    </el-main>\n\n\n    <Footer></Footer>\n  </el-container>\n\n</template>\n\n<script>\n    import Footer from \"../../components/Footer\";\n    import inflate from \"../../assets/js/inflate.min\";\n    import dog from \"../../assets/dog.jpg\"\n    import mouse from \"../../assets/mouse.png\"\n    import hh from \"../../assets/house.jpg\"\n\n    THREE.inflate = inflate;\n    THREE.inflate();\n    import FBXLoader from \"../../assets/js/FBXLoader\";\n\n    import {Post} from \"../../model/helper\";\n    import {getUserInfo} from \"../../model/user\";\n    import crab from \"../../assets/crab.fbx\";\n    import pusheen from \"../../assets/pusheen.fbx\"\n    THREE.FBXLoader = FBXLoader;\n    import GLTFLoader from 'three/examples/js/loaders/GLTFLoader';\n    THREE.GLTFLoader=GLTFLoader\n    import scene from '../../assets/scene.gltf'\n    import cat from '../../assets/cat.jpg'\n    import house from \"../../assets/house.jpeg\"\n\n    export default{\n        components:{\n            Footer,\n        },\n        data(){\n            return {\n                camera: null,\n                scene: null,\n                renderer: null,\n                mesh: null,\n                // FBXLoader: FBXLoader,\n                // inflate: inflate,\n\n\n                tu:[cat, dog, mouse, hh, cat, cat,cat,cat,cat,cat,cat],\n                cat: cat,\n                dog: dog,\n                flag: cat,\n                house: house,\n                petscore:['10', '30', '50', '90', '200', '400', '800', '1200'],\n                user:{}\n            }\n        },\n        methods: {\n\n            jiazai() {\n                // console.log(this);\n                // console.log(this.THREE);\n                // console.log(THREE);\n\n                let container = document.getElementById('container')\n                this.camera = new THREE.PerspectiveCamera(70, container.clientWidth / container.clientHeight, 0.01, 10)\n                this.camera.position.z = 0.6\n                this.scene = new THREE.Scene()\n\n                let loader = new THREE.FBXLoader();\n\n                let that = this\n                let pusheen = this.pusheen\n                var materials = [];\n\n                for (var i = 0; i < 6; ++i) {\n                    materials.push(new THREE.MeshBasicMaterial({\n\n                        map: THREE.ImageUtils.loadTexture(this.flag,\n                            {}, function() {\n                                renderer.render(scene, camera);\n                            }),\n                        overdraw: true\n                    }));\n                }\n\n\n\n\n                let geometry = new THREE.BoxGeometry(0.2, 0.2, 0.2)\n                let material = new THREE.MeshNormalMaterial()\n                this.mesh = new THREE.Mesh(geometry, materials)\n                this.scene.add(this.mesh)\n                this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n                this.renderer.setSize(container.clientWidth, container.clientHeight)\n                container.appendChild(this.renderer.domElement)\n            },\n            animate: function () {\n                requestAnimationFrame(this.animate)\n                this.mesh.rotation.x += 0.01\n                this.mesh.rotation.y += 0.02\n                this.renderer.render(this.scene, this.camera)\n            },\n\n            async before(){\n                let user = await getUserInfo()\n                if(user.code !=0){\n                    alert(\"宁没有登录\")\n                    this.$router.push({path:'/'})\n\n                }\n                else{\n                    if(user.data['score'] == undefined){\n                        user.data['score'] = 10000\n                    }\n                    if(user.data['pet'] == undefined){\n                        user.data['pet'] = 0\n                    }\n                    this.flag=this.tu[user.data['pet']]\n                    console.log(this.flag)\n                    this.user = user.data\n                }\n\n\n            },\n\n            async upgrade(){\n                if(this.user['score']>=this.petscore[this.user['pet']]){\n                    this.user['score'] = this.user['score'] - this.petscore[this.user['pet']]\n                    this.user['pet'] = this.user['pet']+1\n                    await Post('/api/user/' + this.user._id+ '/update', this.user)\n\n\n                    this.$message({\n                        'message': \"升级成功！\",\n                        'type': \"success\"\n                    })\n\n                }\n                else{\n                    this.$message({\n                        'message': \"宁的积分还不够！\",\n                        'type': \"warning\"\n                    })\n                }\n\n            }\n        },\n        mounted () {\n            this.before().then(res=>{\n                this.jiazai()\n            })\n\n            this.animate()\n        }\n    }\n\n\n</script>\n\n<style>\n  .long-button{\n    width: 100%;\n    background-color: #B8CDE6;\n    height: 50px;\n  }\n  .big-box{\n    border: 2px solid #C1D3E8;\n  }\n  .message{\n    margin-top: 10px;\n    margin-right: 40px;\n  }\n  .small-box{\n    background-color: #B8CDE6;\n    margin: 10px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n  }\n  #container{\n    height:400px;\n    background: url(\"../../assets/house.jpeg\") ;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/view/MyInfo/MyPet.vue","export default  function() {\n/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function () {\n  'use strict';\n  var l = void 0, aa = this;\n\n  function r(c, d) {\n    var a = c.split(\".\"), b = aa;\n    !(a[0] in b) && b.execScript && b.execScript(\"var \" + a[0]);\n    for (var e; a.length && (e = a.shift());) !a.length && d !== l ? b[e] = d : b = b[e] ? b[e] : b[e] = {}\n  };var t = \"undefined\" !== typeof Uint8Array && \"undefined\" !== typeof Uint16Array && \"undefined\" !== typeof Uint32Array && \"undefined\" !== typeof DataView;\n\n  function v(c) {\n    var d = c.length, a = 0, b = Number.POSITIVE_INFINITY, e, f, g, h, k, m, n, p, s, x;\n    for (p = 0; p < d; ++p) c[p] > a && (a = c[p]), c[p] < b && (b = c[p]);\n    e = 1 << a;\n    f = new (t ? Uint32Array : Array)(e);\n    g = 1;\n    h = 0;\n    for (k = 2; g <= a;) {\n      for (p = 0; p < d; ++p) if (c[p] === g) {\n        m = 0;\n        n = h;\n        for (s = 0; s < g; ++s) m = m << 1 | n & 1, n >>= 1;\n        x = g << 16 | p;\n        for (s = m; s < e; s += k) f[s] = x;\n        ++h\n      }\n      ++g;\n      h <<= 1;\n      k <<= 1\n    }\n    return [f, a, b]\n  };\n\n  function w(c, d) {\n    this.g = [];\n    this.h = 32768;\n    this.d = this.f = this.a = this.l = 0;\n    this.input = t ? new Uint8Array(c) : c;\n    this.m = !1;\n    this.i = y;\n    this.r = !1;\n    if (d || !(d = {})) d.index && (this.a = d.index), d.bufferSize && (this.h = d.bufferSize), d.bufferType && (this.i = d.bufferType), d.resize && (this.r = d.resize);\n    switch (this.i) {\n      case A:\n        this.b = 32768;\n        this.c = new (t ? Uint8Array : Array)(32768 + this.h + 258);\n        break;\n      case y:\n        this.b = 0;\n        this.c = new (t ? Uint8Array : Array)(this.h);\n        this.e = this.z;\n        this.n = this.v;\n        this.j = this.w;\n        break;\n      default:\n        throw Error(\"invalid inflate mode\");\n    }\n  }\n\n  var A = 0, y = 1, B = {t: A, s: y};\n  w.prototype.k = function () {\n    for (; !this.m;) {\n      var c = C(this, 3);\n      c & 1 && (this.m = !0);\n      c >>>= 1;\n      switch (c) {\n        case 0:\n          var d = this.input, a = this.a, b = this.c, e = this.b, f = d.length, g = l, h = l, k = b.length, m = l;\n          this.d = this.f = 0;\n          if (a + 1 >= f) throw Error(\"invalid uncompressed block header: LEN\");\n          g = d[a++] | d[a++] << 8;\n          if (a + 1 >= f) throw Error(\"invalid uncompressed block header: NLEN\");\n          h = d[a++] | d[a++] << 8;\n          if (g === ~h) throw Error(\"invalid uncompressed block header: length verify\");\n          if (a + g > d.length) throw Error(\"input buffer is broken\");\n          switch (this.i) {\n            case A:\n              for (; e +\n                     g > b.length;) {\n                m = k - e;\n                g -= m;\n                if (t) b.set(d.subarray(a, a + m), e), e += m, a += m; else for (; m--;) b[e++] = d[a++];\n                this.b = e;\n                b = this.e();\n                e = this.b\n              }\n              break;\n            case y:\n              for (; e + g > b.length;) b = this.e({p: 2});\n              break;\n            default:\n              throw Error(\"invalid inflate mode\");\n          }\n          if (t) b.set(d.subarray(a, a + g), e), e += g, a += g; else for (; g--;) b[e++] = d[a++];\n          this.a = a;\n          this.b = e;\n          this.c = b;\n          break;\n        case 1:\n          this.j(ba, ca);\n          break;\n        case 2:\n          for (var n = C(this, 5) + 257, p = C(this, 5) + 1, s = C(this, 4) + 4, x = new (t ? Uint8Array : Array)(D.length), S = l, T = l, U = l, u = l, M = l, F = l, z = l, q = l, V = l, q = 0; q < s; ++q) x[D[q]] =\n            C(this, 3);\n          if (!t) {\n            q = s;\n            for (s = x.length; q < s; ++q) x[D[q]] = 0\n          }\n          S = v(x);\n          u = new (t ? Uint8Array : Array)(n + p);\n          q = 0;\n          for (V = n + p; q < V;) switch (M = E(this, S), M) {\n            case 16:\n              for (z = 3 + C(this, 2); z--;) u[q++] = F;\n              break;\n            case 17:\n              for (z = 3 + C(this, 3); z--;) u[q++] = 0;\n              F = 0;\n              break;\n            case 18:\n              for (z = 11 + C(this, 7); z--;) u[q++] = 0;\n              F = 0;\n              break;\n            default:\n              F = u[q++] = M\n          }\n          T = t ? v(u.subarray(0, n)) : v(u.slice(0, n));\n          U = t ? v(u.subarray(n)) : v(u.slice(n));\n          this.j(T, U);\n          break;\n        default:\n          throw Error(\"unknown BTYPE: \" + c);\n      }\n    }\n    return this.n()\n  };\n  var G = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], D = t ? new Uint16Array(G) : G,\n    H = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],\n    I = t ? new Uint16Array(H) : H,\n    J = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],\n    K = t ? new Uint8Array(J) : J,\n    L = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],\n    da = t ? new Uint16Array(L) : L,\n    ea = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12,\n      13, 13], N = t ? new Uint8Array(ea) : ea, O = new (t ? Uint8Array : Array)(288), P, fa;\n  P = 0;\n  for (fa = O.length; P < fa; ++P) O[P] = 143 >= P ? 8 : 255 >= P ? 9 : 279 >= P ? 7 : 8;\n  var ba = v(O), Q = new (t ? Uint8Array : Array)(30), R, ga;\n  R = 0;\n  for (ga = Q.length; R < ga; ++R) Q[R] = 5;\n  var ca = v(Q);\n\n  function C(c, d) {\n    for (var a = c.f, b = c.d, e = c.input, f = c.a, g = e.length, h; b < d;) {\n      if (f >= g) throw Error(\"input buffer is broken\");\n      a |= e[f++] << b;\n      b += 8\n    }\n    h = a & (1 << d) - 1;\n    c.f = a >>> d;\n    c.d = b - d;\n    c.a = f;\n    return h\n  }\n\n  function E(c, d) {\n    for (var a = c.f, b = c.d, e = c.input, f = c.a, g = e.length, h = d[0], k = d[1], m, n; b < k && !(f >= g);) a |= e[f++] << b, b += 8;\n    m = h[a & (1 << k) - 1];\n    n = m >>> 16;\n    if (n > b) throw Error(\"invalid code length: \" + n);\n    c.f = a >> n;\n    c.d = b - n;\n    c.a = f;\n    return m & 65535\n  }\n\n  w.prototype.j = function (c, d) {\n    var a = this.c, b = this.b;\n    this.o = c;\n    for (var e = a.length - 258, f, g, h, k; 256 !== (f = E(this, c));) if (256 > f) b >= e && (this.b = b, a = this.e(), b = this.b), a[b++] = f; else {\n      g = f - 257;\n      k = I[g];\n      0 < K[g] && (k += C(this, K[g]));\n      f = E(this, d);\n      h = da[f];\n      0 < N[f] && (h += C(this, N[f]));\n      b >= e && (this.b = b, a = this.e(), b = this.b);\n      for (; k--;) a[b] = a[b++ - h]\n    }\n    for (; 8 <= this.d;) this.d -= 8, this.a--;\n    this.b = b\n  };\n  w.prototype.w = function (c, d) {\n    var a = this.c, b = this.b;\n    this.o = c;\n    for (var e = a.length, f, g, h, k; 256 !== (f = E(this, c));) if (256 > f) b >= e && (a = this.e(), e = a.length), a[b++] = f; else {\n      g = f - 257;\n      k = I[g];\n      0 < K[g] && (k += C(this, K[g]));\n      f = E(this, d);\n      h = da[f];\n      0 < N[f] && (h += C(this, N[f]));\n      b + k > e && (a = this.e(), e = a.length);\n      for (; k--;) a[b] = a[b++ - h]\n    }\n    for (; 8 <= this.d;) this.d -= 8, this.a--;\n    this.b = b\n  };\n  w.prototype.e = function () {\n    var c = new (t ? Uint8Array : Array)(this.b - 32768), d = this.b - 32768, a, b, e = this.c;\n    if (t) c.set(e.subarray(32768, c.length)); else {\n      a = 0;\n      for (b = c.length; a < b; ++a) c[a] = e[a + 32768]\n    }\n    this.g.push(c);\n    this.l += c.length;\n    if (t) e.set(e.subarray(d, d + 32768)); else for (a = 0; 32768 > a; ++a) e[a] = e[d + a];\n    this.b = 32768;\n    return e\n  };\n  w.prototype.z = function (c) {\n    var d, a = this.input.length / this.a + 1 | 0, b, e, f, g = this.input, h = this.c;\n    c && (\"number\" === typeof c.p && (a = c.p), \"number\" === typeof c.u && (a += c.u));\n    2 > a ? (b = (g.length - this.a) / this.o[2], f = 258 * (b / 2) | 0, e = f < h.length ? h.length + f : h.length << 1) : e = h.length * a;\n    t ? (d = new Uint8Array(e), d.set(h)) : d = h;\n    return this.c = d\n  };\n  w.prototype.n = function () {\n    var c = 0, d = this.c, a = this.g, b, e = new (t ? Uint8Array : Array)(this.l + (this.b - 32768)), f, g, h, k;\n    if (0 === a.length) return t ? this.c.subarray(32768, this.b) : this.c.slice(32768, this.b);\n    f = 0;\n    for (g = a.length; f < g; ++f) {\n      b = a[f];\n      h = 0;\n      for (k = b.length; h < k; ++h) e[c++] = b[h]\n    }\n    f = 32768;\n    for (g = this.b; f < g; ++f) e[c++] = d[f];\n    this.g = [];\n    return this.buffer = e\n  };\n  w.prototype.v = function () {\n    var c, d = this.b;\n    t ? this.r ? (c = new Uint8Array(d), c.set(this.c.subarray(0, d))) : c = this.c.subarray(0, d) : (this.c.length > d && (this.c.length = d), c = this.c);\n    return this.buffer = c\n  };\n\n  function W(c, d) {\n    var a, b;\n    this.input = c;\n    this.a = 0;\n    if (d || !(d = {})) d.index && (this.a = d.index), d.verify && (this.A = d.verify);\n    a = c[this.a++];\n    b = c[this.a++];\n    switch (a & 15) {\n      case ha:\n        this.method = ha;\n        break;\n      default:\n        throw Error(\"unsupported compression method\");\n    }\n    if (0 !== ((a << 8) + b) % 31) throw Error(\"invalid fcheck flag:\" + ((a << 8) + b) % 31);\n    if (b & 32) throw Error(\"fdict flag is not supported\");\n    this.q = new w(c, {index: this.a, bufferSize: d.bufferSize, bufferType: d.bufferType, resize: d.resize})\n  }\n\n  W.prototype.k = function () {\n    var c = this.input, d, a;\n    d = this.q.k();\n    this.a = this.q.a;\n    if (this.A) {\n      a = (c[this.a++] << 24 | c[this.a++] << 16 | c[this.a++] << 8 | c[this.a++]) >>> 0;\n      var b = d;\n      if (\"string\" === typeof b) {\n        var e = b.split(\"\"), f, g;\n        f = 0;\n        for (g = e.length; f < g; f++) e[f] = (e[f].charCodeAt(0) & 255) >>> 0;\n        b = e\n      }\n      for (var h = 1, k = 0, m = b.length, n, p = 0; 0 < m;) {\n        n = 1024 < m ? 1024 : m;\n        m -= n;\n        do h += b[p++], k += h; while (--n);\n        h %= 65521;\n        k %= 65521\n      }\n      if (a !== (k << 16 | h) >>> 0) throw Error(\"invalid adler-32 checksum\");\n    }\n    return d\n  };\n  var ha = 8;\n  r(\"Zlib.Inflate\", W);\n  r(\"Zlib.Inflate.prototype.decompress\", W.prototype.k);\n  var X = {ADAPTIVE: B.s, BLOCK: B.t}, Y, Z, $, ia;\n  if (Object.keys) Y = Object.keys(X); else for (Z in Y = [], $ = 0, X) Y[$++] = Z;\n  $ = 0;\n  for (ia = Y.length; $ < ia; ++$) Z = Y[$], r(\"Zlib.Inflate.BufferType.\" + Z, X[Z]);\n}).call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/inflate.min.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',[_c('el-header',{staticStyle:{\"height\":\"150px\"}},[_c('el-row',[_c('h1',{staticStyle:{\"margin-top\":\"0px\"}},[_vm._v(\"我的宠物\")])]),_vm._v(\" \"),_c('el-row',[_vm._v(\"\\n      当前等级: \"+_vm._s(_vm.user.pet)+\"\\n    \")]),_vm._v(\" \"),_c('el-row',[_vm._v(\"\\n      所有积分: \"+_vm._s(_vm.user.score)+\"\\n    \")]),_vm._v(\" \"),_c('el-row',[_vm._v(\"\\n      下一级所需积分: \"+_vm._s(_vm.petscore[_vm.user.pet])+\"\\n    \")]),_vm._v(\" \"),_c('el-row',{staticStyle:{\"align-items\":\"center\",\"text-align\":\"center\",\"color\":\"#795da3\"},on:{\"click\":_vm.upgrade}},[_c('i',{staticClass:\"el-icon-ice-cream-round\",staticStyle:{\"font-size\":\"30px\"},on:{\"click\":_vm.upgrade}}),_vm._v(\"点击升级\\n    \")])],1),_vm._v(\" \"),_c('el-main',[_c('div',{attrs:{\"id\":\"container\"}})]),_vm._v(\" \"),_c('Footer')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4884b996\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/MyInfo/MyPet.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4884b996\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MyPet.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MyPet.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MyPet.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4884b996\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./MyPet.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/MyInfo/MyPet.vue\n// module id = null\n// module chunks = ","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 1","module.exports = __webpack_public_path__ + \"crab.fbx\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/crab.fbx\n// module id = ypEA\n// module chunks = 1"],"sourceRoot":""}